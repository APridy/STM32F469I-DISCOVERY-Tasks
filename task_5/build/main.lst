ARM GAS  /tmp/ccyJgjqn.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.delayMs,"ax",%progbits
  18              		.align	1
  19              		.global	delayMs
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	delayMs:
  27              	.LVL0:
  28              	.LFB130:
  29              		.file 1 "main.c"
   1:main.c        **** #include "stm32f4xx.h"
   2:main.c        **** #include "util.h"
   3:main.c        **** #include "stdbool.h"
   4:main.c        **** 
   5:main.c        **** #define LED_1 1 << 2
   6:main.c        **** #define LED_2 1 << 5
   7:main.c        **** #define LED_3 1 << 6
   8:main.c        **** #define LED_4 1 << 1
   9:main.c        **** 
  10:main.c        **** #define KEY_B1 1 << 0
  11:main.c        **** #define KEY_B2 1 << 8
  12:main.c        **** #define KEY_B3 1 << 9
  13:main.c        **** #define KEY_B4 1 << 10
  14:main.c        **** #define KEY_EVERY KEY_B1 | KEY_B2 | KEY_B3 | KEY_B4
  15:main.c        **** 
  16:main.c        **** #define ZERO 0b0101100010011000
  17:main.c        **** #define ONE 0b0100000010000000
  18:main.c        **** #define TWO 0b1001100010001000
  19:main.c        **** #define THREE 0b1101000010001000
  20:main.c        **** #define FOUR 0b1100000010010000
  21:main.c        **** #define FIVE 0b1101000000011000
  22:main.c        **** #define SIX 0b1101100000011000
  23:main.c        **** #define SEVEN 0b0100000010001000
  24:main.c        **** #define EIGHT 0b1101100010011000
  25:main.c        **** #define NINE 0b1101000010011000
  26:main.c        **** 
  27:main.c        **** #define NUMBER_OF_LEDS 4
  28:main.c        **** #define NUMBER_OF_KEY_PINS 4
  29:main.c        **** #define NUMBER_OF_DIGITS 10
ARM GAS  /tmp/ccyJgjqn.s 			page 2


  30:main.c        **** 
  31:main.c        **** #define MAX_ITOA_OUTPUT_LENGTH 12
  32:main.c        **** #define DUMMY_WORD 0xFFFF
  33:main.c        **** #define EEPROM_ADDRESS_LENGTH 10
  34:main.c        **** 
  35:main.c        **** #define key_on() ((GPIOG->IDR & GPIO_IDR_ID11) >> 11) //macro to define if any button is pressed
  36:main.c        **** 
  37:main.c        **** const char* errorInvalidMode = "ERROR: Invalid memory output mode\n\r\0";
  38:main.c        **** const char* errorInvalidValue = "ERROR: Value should vary between 0 and 9999\n\r\0";
  39:main.c        **** 
  40:main.c        **** enum EEPROMWriteMode {
  41:main.c        **** 	BINARY = 1,
  42:main.c        **** 	ASCII = 2
  43:main.c        **** };
  44:main.c        **** 
  45:main.c        **** enum opCode {
  46:main.c        **** 	OPCODE_WRITE = 0b101,
  47:main.c        **** 	OPCODE_WEN = 0b100,
  48:main.c        **** };
  49:main.c        **** 
  50:main.c        **** enum dummyAddress {
  51:main.c        **** 	DUMMYADDRESS_WEN = 3 << 8,
  52:main.c        **** };
  53:main.c        **** 
  54:main.c        **** uint16_t led_array[NUMBER_OF_LEDS] = {LED_1, LED_2, LED_3, LED_4};
  55:main.c        **** uint16_t key_array[NUMBER_OF_KEY_PINS] = {KEY_B3, KEY_B2, KEY_B1, KEY_B4};
  56:main.c        **** uint16_t digit_array[NUMBER_OF_DIGITS] = {ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NIN
  57:main.c        **** 
  58:main.c        **** volatile int ticks = 0;
  59:main.c        **** volatile int sTicks = 0;
  60:main.c        **** uint16_t displayValue = 9999;
  61:main.c        **** uint16_t displayValueUsart3 = 0;
  62:main.c        **** uint16_t displayValueUsart3Symbols = 0;
  63:main.c        **** 
  64:main.c        **** void delayMs(unsigned int ms) { // delay in miliseconds
  30              		.loc 1 64 31 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  65:main.c        **** 
  66:main.c        **** 	ticks = 0;
  35              		.loc 1 66 2 view .LVU1
  36              		.loc 1 66 8 is_stmt 0 view .LVU2
  37 0000 054B     		ldr	r3, .L3
  38 0002 0022     		movs	r2, #0
  39 0004 1A60     		str	r2, [r3]
  67:main.c        **** 	while(ticks<ms*1000);
  40              		.loc 1 67 2 is_stmt 1 view .LVU3
  41              	.L2:
  42              		.loc 1 67 22 discriminator 1 view .LVU4
  43              		.loc 1 67 7 discriminator 1 view .LVU5
  44              		.loc 1 67 16 is_stmt 0 discriminator 1 view .LVU6
  45 0006 4FF47A73 		mov	r3, #1000
  46 000a 03FB00F3 		mul	r3, r3, r0
  47              		.loc 1 67 13 discriminator 1 view .LVU7
  48 000e 024A     		ldr	r2, .L3
ARM GAS  /tmp/ccyJgjqn.s 			page 3


  49 0010 1268     		ldr	r2, [r2]
  50              		.loc 1 67 7 discriminator 1 view .LVU8
  51 0012 9342     		cmp	r3, r2
  52 0014 F7D8     		bhi	.L2
  68:main.c        **** 
  69:main.c        **** }
  53              		.loc 1 69 1 view .LVU9
  54 0016 7047     		bx	lr
  55              	.L4:
  56              		.align	2
  57              	.L3:
  58 0018 00000000 		.word	.LANCHOR0
  59              		.cfi_endproc
  60              	.LFE130:
  62              		.section	.text.delayMcs,"ax",%progbits
  63              		.align	1
  64              		.global	delayMcs
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	delayMcs:
  71              	.LVL1:
  72              	.LFB131:
  70:main.c        **** 
  71:main.c        **** void delayMcs(int mcs) { // delay in microseconds
  73              		.loc 1 71 24 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  72:main.c        **** 
  73:main.c        ****     ticks = 0;
  78              		.loc 1 73 5 view .LVU11
  79              		.loc 1 73 11 is_stmt 0 view .LVU12
  80 0000 034B     		ldr	r3, .L7
  81 0002 0022     		movs	r2, #0
  82 0004 1A60     		str	r2, [r3]
  74:main.c        ****     while(ticks<mcs);
  83              		.loc 1 74 5 is_stmt 1 view .LVU13
  84              	.L6:
  85              		.loc 1 74 21 discriminator 1 view .LVU14
  86              		.loc 1 74 10 discriminator 1 view .LVU15
  87              		.loc 1 74 16 is_stmt 0 discriminator 1 view .LVU16
  88 0006 024B     		ldr	r3, .L7
  89 0008 1B68     		ldr	r3, [r3]
  90              		.loc 1 74 10 discriminator 1 view .LVU17
  91 000a 8342     		cmp	r3, r0
  92 000c FBDB     		blt	.L6
  75:main.c        **** 
  76:main.c        **** }
  93              		.loc 1 76 1 view .LVU18
  94 000e 7047     		bx	lr
  95              	.L8:
  96              		.align	2
  97              	.L7:
  98 0010 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccyJgjqn.s 			page 4


  99              		.cfi_endproc
 100              	.LFE131:
 102              		.section	.text.blinkLed,"ax",%progbits
 103              		.align	1
 104              		.global	blinkLed
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	blinkLed:
 111              	.LFB132:
  77:main.c        **** 
  78:main.c        **** void blinkLed() { // for debugging purposes
 112              		.loc 1 78 17 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 10B5     		push	{r4, lr}
 117              	.LCFI0:
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 4, -8
 120              		.cfi_offset 14, -4
  79:main.c        **** 
  80:main.c        ****   	GPIOA->BSRR |= GPIO_BSRR_BS7;
 121              		.loc 1 80 4 view .LVU20
 122              		.loc 1 80 16 is_stmt 0 view .LVU21
 123 0002 064C     		ldr	r4, .L11
 124 0004 A369     		ldr	r3, [r4, #24]
 125 0006 43F08003 		orr	r3, r3, #128
 126 000a A361     		str	r3, [r4, #24]
  81:main.c        **** 	delayMs(2);
 127              		.loc 1 81 2 is_stmt 1 view .LVU22
 128 000c 0220     		movs	r0, #2
 129 000e FFF7FEFF 		bl	delayMs
 130              	.LVL2:
  82:main.c        **** 	GPIOA->BSRR |= GPIO_BSRR_BR7;
 131              		.loc 1 82 2 view .LVU23
 132              		.loc 1 82 14 is_stmt 0 view .LVU24
 133 0012 A369     		ldr	r3, [r4, #24]
 134 0014 43F40003 		orr	r3, r3, #8388608
 135 0018 A361     		str	r3, [r4, #24]
  83:main.c        **** 
  84:main.c        **** }
 136              		.loc 1 84 1 view .LVU25
 137 001a 10BD     		pop	{r4, pc}
 138              	.L12:
 139              		.align	2
 140              	.L11:
 141 001c 00000240 		.word	1073872896
 142              		.cfi_endproc
 143              	.LFE132:
 145              		.section	.text.sendViaUsart3,"ax",%progbits
 146              		.align	1
 147              		.global	sendViaUsart3
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
ARM GAS  /tmp/ccyJgjqn.s 			page 5


 151              		.fpu fpv4-sp-d16
 153              	sendViaUsart3:
 154              	.LVL3:
 155              	.LFB133:
  85:main.c        **** 
  86:main.c        **** void sendViaUsart3(const char* msg) {
 156              		.loc 1 86 37 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
  87:main.c        **** 
  88:main.c        **** 	for(int i = 0; msg[i] != '\0'; i++) {
 161              		.loc 1 88 2 view .LVU27
 162              	.LBB10:
 163              		.loc 1 88 6 view .LVU28
 164              		.loc 1 88 10 is_stmt 0 view .LVU29
 165 0000 0022     		movs	r2, #0
 166              		.loc 1 88 2 view .LVU30
 167 0002 0CE0     		b	.L14
 168              	.LVL4:
 169              	.L16:
  89:main.c        **** 
  90:main.c        **** 		USART3->DR = msg[i]; // put one character in data register
 170              		.loc 1 90 3 is_stmt 1 view .LVU31
 171              		.loc 1 90 14 is_stmt 0 view .LVU32
 172 0004 0849     		ldr	r1, .L17
 173 0006 4B60     		str	r3, [r1, #4]
  91:main.c        **** 		while(!(USART3->SR & (USART_SR_TC))); // wait until transmit is over
 174              		.loc 1 91 3 is_stmt 1 view .LVU33
 175              	.L15:
 176              		.loc 1 91 39 discriminator 1 view .LVU34
 177              		.loc 1 91 8 discriminator 1 view .LVU35
 178              		.loc 1 91 17 is_stmt 0 discriminator 1 view .LVU36
 179 0008 074B     		ldr	r3, .L17
 180 000a 1B68     		ldr	r3, [r3]
 181              		.loc 1 91 8 discriminator 1 view .LVU37
 182 000c 13F0400F 		tst	r3, #64
 183 0010 FAD0     		beq	.L15
  92:main.c        **** 		USART3->SR &= ~(USART_SR_TC); // clear transmit value
 184              		.loc 1 92 3 is_stmt 1 discriminator 2 view .LVU38
 185              		.loc 1 92 14 is_stmt 0 discriminator 2 view .LVU39
 186 0012 0549     		ldr	r1, .L17
 187 0014 0B68     		ldr	r3, [r1]
 188 0016 23F04003 		bic	r3, r3, #64
 189 001a 0B60     		str	r3, [r1]
  88:main.c        **** 
 190              		.loc 1 88 33 is_stmt 1 discriminator 2 view .LVU40
  88:main.c        **** 
 191              		.loc 1 88 34 is_stmt 0 discriminator 2 view .LVU41
 192 001c 0132     		adds	r2, r2, #1
 193              	.LVL5:
 194              	.L14:
  88:main.c        **** 
 195              		.loc 1 88 17 is_stmt 1 discriminator 1 view .LVU42
  88:main.c        **** 
 196              		.loc 1 88 20 is_stmt 0 discriminator 1 view .LVU43
ARM GAS  /tmp/ccyJgjqn.s 			page 6


 197 001e 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
  88:main.c        **** 
 198              		.loc 1 88 2 discriminator 1 view .LVU44
 199 0020 002B     		cmp	r3, #0
 200 0022 EFD1     		bne	.L16
 201              	.LBE10:
  93:main.c        **** 
  94:main.c        **** 	}
  95:main.c        **** 
  96:main.c        **** }
 202              		.loc 1 96 1 view .LVU45
 203 0024 7047     		bx	lr
 204              	.L18:
 205 0026 00BF     		.align	2
 206              	.L17:
 207 0028 00480040 		.word	1073760256
 208              		.cfi_endproc
 209              	.LFE133:
 211              		.section	.text.sendViaSPI6,"ax",%progbits
 212              		.align	1
 213              		.global	sendViaSPI6
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv4-sp-d16
 219              	sendViaSPI6:
 220              	.LVL6:
 221              	.LFB134:
  97:main.c        **** 
  98:main.c        **** void sendViaSPI6(uint16_t value) {
 222              		.loc 1 98 34 is_stmt 1 view -0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
  99:main.c        **** 
 100:main.c        **** 		SPI6->DR = value; // put one character in data register
 227              		.loc 1 100 3 view .LVU47
 228              		.loc 1 100 12 is_stmt 0 view .LVU48
 229 0000 034B     		ldr	r3, .L21
 230 0002 D860     		str	r0, [r3, #12]
 101:main.c        **** 		while(!(SPI6->SR & (SPI_SR_TXE))); // wait until transmit is over
 231              		.loc 1 101 3 is_stmt 1 view .LVU49
 232              	.L20:
 233              		.loc 1 101 36 discriminator 1 view .LVU50
 234              		.loc 1 101 8 discriminator 1 view .LVU51
 235              		.loc 1 101 15 is_stmt 0 discriminator 1 view .LVU52
 236 0004 024B     		ldr	r3, .L21
 237 0006 9B68     		ldr	r3, [r3, #8]
 238              		.loc 1 101 8 discriminator 1 view .LVU53
 239 0008 13F0020F 		tst	r3, #2
 240 000c FAD0     		beq	.L20
 102:main.c        **** 
 103:main.c        **** }
 241              		.loc 1 103 1 view .LVU54
 242 000e 7047     		bx	lr
 243              	.L22:
ARM GAS  /tmp/ccyJgjqn.s 			page 7


 244              		.align	2
 245              	.L21:
 246 0010 00540140 		.word	1073828864
 247              		.cfi_endproc
 248              	.LFE134:
 250              		.section	.text.sendViaSPI2,"ax",%progbits
 251              		.align	1
 252              		.global	sendViaSPI2
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	sendViaSPI2:
 259              	.LVL7:
 260              	.LFB135:
 104:main.c        **** 
 105:main.c        **** void sendViaSPI2(uint16_t value) {
 261              		.loc 1 105 34 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 106:main.c        **** 
 107:main.c        **** 		SPI2->DR = value; // put one character in data register
 266              		.loc 1 107 3 view .LVU56
 267              		.loc 1 107 12 is_stmt 0 view .LVU57
 268 0000 034B     		ldr	r3, .L25
 269 0002 D860     		str	r0, [r3, #12]
 108:main.c        **** 		while(!(SPI2->SR & (SPI_SR_TXE))); // wait until transmit is over
 270              		.loc 1 108 3 is_stmt 1 view .LVU58
 271              	.L24:
 272              		.loc 1 108 36 discriminator 1 view .LVU59
 273              		.loc 1 108 8 discriminator 1 view .LVU60
 274              		.loc 1 108 15 is_stmt 0 discriminator 1 view .LVU61
 275 0004 024B     		ldr	r3, .L25
 276 0006 9B68     		ldr	r3, [r3, #8]
 277              		.loc 1 108 8 discriminator 1 view .LVU62
 278 0008 13F0020F 		tst	r3, #2
 279 000c FAD0     		beq	.L24
 109:main.c        **** 
 110:main.c        **** }
 280              		.loc 1 110 1 view .LVU63
 281 000e 7047     		bx	lr
 282              	.L26:
 283              		.align	2
 284              	.L25:
 285 0010 00380040 		.word	1073756160
 286              		.cfi_endproc
 287              	.LFE135:
 289              		.section	.text.csUp,"ax",%progbits
 290              		.align	1
 291              		.global	csUp
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu fpv4-sp-d16
 297              	csUp:
ARM GAS  /tmp/ccyJgjqn.s 			page 8


 298              	.LFB136:
 111:main.c        **** 
 112:main.c        **** void csUp() {
 299              		.loc 1 112 13 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 113:main.c        ****   	GPIOH->BSRR |= GPIO_BSRR_BS6;
 304              		.loc 1 113 4 view .LVU65
 305              		.loc 1 113 16 is_stmt 0 view .LVU66
 306 0000 024A     		ldr	r2, .L28
 307 0002 9369     		ldr	r3, [r2, #24]
 308 0004 43F04003 		orr	r3, r3, #64
 309 0008 9361     		str	r3, [r2, #24]
 114:main.c        **** }
 310              		.loc 1 114 1 view .LVU67
 311 000a 7047     		bx	lr
 312              	.L29:
 313              		.align	2
 314              	.L28:
 315 000c 001C0240 		.word	1073880064
 316              		.cfi_endproc
 317              	.LFE136:
 319              		.section	.text.csDown,"ax",%progbits
 320              		.align	1
 321              		.global	csDown
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	csDown:
 328              	.LFB137:
 115:main.c        **** 
 116:main.c        **** void csDown() {
 329              		.loc 1 116 15 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 117:main.c        ****   	GPIOH->BSRR |= GPIO_BSRR_BR6;
 334              		.loc 1 117 4 view .LVU69
 335              		.loc 1 117 16 is_stmt 0 view .LVU70
 336 0000 024A     		ldr	r2, .L31
 337 0002 9369     		ldr	r3, [r2, #24]
 338 0004 43F48003 		orr	r3, r3, #4194304
 339 0008 9361     		str	r3, [r2, #24]
 118:main.c        **** }
 340              		.loc 1 118 1 view .LVU71
 341 000a 7047     		bx	lr
 342              	.L32:
 343              		.align	2
 344              	.L31:
 345 000c 001C0240 		.word	1073880064
 346              		.cfi_endproc
 347              	.LFE137:
 349              		.section	.text.enableEEPROM,"ax",%progbits
ARM GAS  /tmp/ccyJgjqn.s 			page 9


 350              		.align	1
 351              		.global	enableEEPROM
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu fpv4-sp-d16
 357              	enableEEPROM:
 358              	.LFB138:
 119:main.c        **** 
 120:main.c        **** void enableEEPROM() {
 359              		.loc 1 120 21 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363 0000 08B5     		push	{r3, lr}
 364              	.LCFI1:
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 3, -8
 367              		.cfi_offset 14, -4
 121:main.c        **** 
 122:main.c        **** 	csUp();
 368              		.loc 1 122 2 view .LVU73
 369 0002 FFF7FEFF 		bl	csUp
 370              	.LVL8:
 123:main.c        **** 	delayMcs(40);
 371              		.loc 1 123 2 view .LVU74
 372 0006 2820     		movs	r0, #40
 373 0008 FFF7FEFF 		bl	delayMcs
 374              	.LVL9:
 124:main.c        **** 	sendViaSPI2((OPCODE_WEN << EEPROM_ADDRESS_LENGTH) | DUMMYADDRESS_WEN);
 375              		.loc 1 124 2 view .LVU75
 376 000c 4FF49850 		mov	r0, #4864
 377 0010 FFF7FEFF 		bl	sendViaSPI2
 378              	.LVL10:
 125:main.c        **** 	delayMcs(40);
 379              		.loc 1 125 2 view .LVU76
 380 0014 2820     		movs	r0, #40
 381 0016 FFF7FEFF 		bl	delayMcs
 382              	.LVL11:
 126:main.c        **** 	csDown();
 383              		.loc 1 126 2 view .LVU77
 384 001a FFF7FEFF 		bl	csDown
 385              	.LVL12:
 127:main.c        **** 
 128:main.c        **** 	csUp();
 386              		.loc 1 128 2 view .LVU78
 387 001e FFF7FEFF 		bl	csUp
 388              	.LVL13:
 129:main.c        **** 	delayMcs(40);
 389              		.loc 1 129 2 view .LVU79
 390 0022 2820     		movs	r0, #40
 391 0024 FFF7FEFF 		bl	delayMcs
 392              	.LVL14:
 130:main.c        **** 	sendViaSPI2((OPCODE_WRITE << EEPROM_ADDRESS_LENGTH));
 393              		.loc 1 130 2 view .LVU80
 394 0028 4FF4A050 		mov	r0, #5120
 395 002c FFF7FEFF 		bl	sendViaSPI2
ARM GAS  /tmp/ccyJgjqn.s 			page 10


 396              	.LVL15:
 131:main.c        **** 	sendViaSPI2((32 << 8) | (32)); //clear EEPROM memory on reserved address
 397              		.loc 1 131 2 view .LVU81
 398 0030 42F22000 		movw	r0, #8224
 399 0034 FFF7FEFF 		bl	sendViaSPI2
 400              	.LVL16:
 132:main.c        **** 	delayMcs(80);
 401              		.loc 1 132 2 view .LVU82
 402 0038 5020     		movs	r0, #80
 403 003a FFF7FEFF 		bl	delayMcs
 404              	.LVL17:
 133:main.c        **** 	csDown();
 405              		.loc 1 133 2 view .LVU83
 406 003e FFF7FEFF 		bl	csDown
 407              	.LVL18:
 134:main.c        **** 
 135:main.c        **** 	delayMs(3);
 408              		.loc 1 135 2 view .LVU84
 409 0042 0320     		movs	r0, #3
 410 0044 FFF7FEFF 		bl	delayMs
 411              	.LVL19:
 136:main.c        **** 
 137:main.c        **** 	csUp();
 412              		.loc 1 137 2 view .LVU85
 413 0048 FFF7FEFF 		bl	csUp
 414              	.LVL20:
 138:main.c        **** 	delayMcs(40);
 415              		.loc 1 138 2 view .LVU86
 416 004c 2820     		movs	r0, #40
 417 004e FFF7FEFF 		bl	delayMcs
 418              	.LVL21:
 139:main.c        **** 	sendViaSPI2((OPCODE_WRITE << EEPROM_ADDRESS_LENGTH) + 1); //clear EEPROM memory on reserved addres
 419              		.loc 1 139 2 view .LVU87
 420 0052 41F20140 		movw	r0, #5121
 421 0056 FFF7FEFF 		bl	sendViaSPI2
 422              	.LVL22:
 140:main.c        **** 	sendViaSPI2((32 << 8) | (32));
 423              		.loc 1 140 2 view .LVU88
 424 005a 42F22000 		movw	r0, #8224
 425 005e FFF7FEFF 		bl	sendViaSPI2
 426              	.LVL23:
 141:main.c        **** 	delayMcs(80);
 427              		.loc 1 141 2 view .LVU89
 428 0062 5020     		movs	r0, #80
 429 0064 FFF7FEFF 		bl	delayMcs
 430              	.LVL24:
 142:main.c        **** 	csDown();
 431              		.loc 1 142 2 view .LVU90
 432 0068 FFF7FEFF 		bl	csDown
 433              	.LVL25:
 143:main.c        **** 
 144:main.c        **** 	delayMs(3);
 434              		.loc 1 144 2 view .LVU91
 435 006c 0320     		movs	r0, #3
 436 006e FFF7FEFF 		bl	delayMs
 437              	.LVL26:
 145:main.c        **** 
ARM GAS  /tmp/ccyJgjqn.s 			page 11


 146:main.c        **** }
 438              		.loc 1 146 1 is_stmt 0 view .LVU92
 439 0072 08BD     		pop	{r3, pc}
 440              		.cfi_endproc
 441              	.LFE138:
 443              		.section	.rodata.writeToEEPROM.str1.4,"aMS",%progbits,1
 444              		.align	2
 445              	.LC0:
 446 0000 0A0D00   		.ascii	"\012\015\000"
 447              		.section	.text.writeToEEPROM,"ax",%progbits
 448              		.align	1
 449              		.global	writeToEEPROM
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv4-sp-d16
 455              	writeToEEPROM:
 456              	.LVL27:
 457              	.LFB139:
 147:main.c        **** 
 148:main.c        **** void writeToEEPROM(int value, int mode) {
 458              		.loc 1 148 41 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		.loc 1 148 41 is_stmt 0 view .LVU94
 463 0000 70B5     		push	{r4, r5, r6, lr}
 464              	.LCFI2:
 465              		.cfi_def_cfa_offset 16
 466              		.cfi_offset 4, -16
 467              		.cfi_offset 5, -12
 468              		.cfi_offset 6, -8
 469              		.cfi_offset 14, -4
 149:main.c        **** 
 150:main.c        **** 	if((value < 0) || (value > 9999)) {
 470              		.loc 1 150 2 is_stmt 1 view .LVU95
 471              		.loc 1 150 4 is_stmt 0 view .LVU96
 472 0002 42F20F73 		movw	r3, #9999
 473 0006 9842     		cmp	r0, r3
 474 0008 10D8     		bhi	.L43
 475 000a 0446     		mov	r4, r0
 151:main.c        **** 
 152:main.c        **** 		sendViaUsart3("\n\r");
 153:main.c        **** 		sendViaUsart3(errorInvalidValue);
 154:main.c        **** 		sendViaUsart3("\n\r");
 155:main.c        **** 		return;
 156:main.c        **** 
 157:main.c        **** 	}
 158:main.c        **** 
 159:main.c        **** 	switch (mode) {
 476              		.loc 1 159 2 is_stmt 1 view .LVU97
 477 000c 0129     		cmp	r1, #1
 478 000e 19D0     		beq	.L38
 479 0010 0229     		cmp	r1, #2
 480 0012 29D0     		beq	.L39
 160:main.c        **** 
 161:main.c        **** 		case 1: { //binary mode
ARM GAS  /tmp/ccyJgjqn.s 			page 12


 162:main.c        **** 
 163:main.c        **** 			csUp();
 164:main.c        **** 			delayMcs(40);
 165:main.c        **** 			sendViaSPI2((OPCODE_WRITE << EEPROM_ADDRESS_LENGTH));
 166:main.c        **** 			sendViaSPI2(value);
 167:main.c        **** 			delayMcs(80);
 168:main.c        **** 			csDown();
 169:main.c        **** 
 170:main.c        **** 		} break;
 171:main.c        **** 
 172:main.c        **** 		case 2: { //ASCII mode
 173:main.c        **** 
 174:main.c        **** 			csUp();
 175:main.c        **** 			delayMcs(40);
 176:main.c        **** 			sendViaSPI2((OPCODE_WRITE << EEPROM_ADDRESS_LENGTH));
 177:main.c        **** 			sendViaSPI2(((value/1000 + 48) << 8) | ((value/100)%10 + 48));
 178:main.c        **** 			delayMcs(80);
 179:main.c        **** 			csDown();
 180:main.c        **** 
 181:main.c        **** 			delayMs(3);
 182:main.c        **** 
 183:main.c        **** 			csUp();
 184:main.c        **** 			delayMcs(40);
 185:main.c        **** 			sendViaSPI2((OPCODE_WRITE << EEPROM_ADDRESS_LENGTH) + 1);
 186:main.c        **** 			sendViaSPI2((((value/10)%10 + 48) << 8) | (value%10 + 48));
 187:main.c        **** 			delayMcs(80);
 188:main.c        **** 			csDown();
 189:main.c        **** 
 190:main.c        **** 		} break;
 191:main.c        **** 
 192:main.c        **** 		default: {
 193:main.c        **** 
 194:main.c        **** 			sendViaUsart3("\n\r");
 481              		.loc 1 194 4 view .LVU98
 482 0014 414C     		ldr	r4, .L44
 483 0016 2046     		mov	r0, r4
 484              	.LVL28:
 485              		.loc 1 194 4 is_stmt 0 view .LVU99
 486 0018 FFF7FEFF 		bl	sendViaUsart3
 487              	.LVL29:
 195:main.c        **** 			sendViaUsart3(errorInvalidMode);
 488              		.loc 1 195 4 is_stmt 1 view .LVU100
 489 001c 404B     		ldr	r3, .L44+4
 490 001e 1868     		ldr	r0, [r3]
 491 0020 FFF7FEFF 		bl	sendViaUsart3
 492              	.LVL30:
 196:main.c        **** 			sendViaUsart3("\n\r");
 493              		.loc 1 196 4 view .LVU101
 494 0024 2046     		mov	r0, r4
 495 0026 FFF7FEFF 		bl	sendViaUsart3
 496              	.LVL31:
 197:main.c        **** 			return;
 497              		.loc 1 197 4 view .LVU102
 198:main.c        **** 
 199:main.c        **** 		} break;
 498              		.loc 1 199 5 view .LVU103
 197:main.c        **** 			return;
ARM GAS  /tmp/ccyJgjqn.s 			page 13


 499              		.loc 1 197 4 is_stmt 0 view .LVU104
 500 002a 1CE0     		b	.L35
 501              	.LVL32:
 502              	.L43:
 152:main.c        **** 		sendViaUsart3(errorInvalidValue);
 503              		.loc 1 152 3 is_stmt 1 view .LVU105
 504 002c 3B4C     		ldr	r4, .L44
 505 002e 2046     		mov	r0, r4
 506              	.LVL33:
 152:main.c        **** 		sendViaUsart3(errorInvalidValue);
 507              		.loc 1 152 3 is_stmt 0 view .LVU106
 508 0030 FFF7FEFF 		bl	sendViaUsart3
 509              	.LVL34:
 153:main.c        **** 		sendViaUsart3("\n\r");
 510              		.loc 1 153 3 is_stmt 1 view .LVU107
 511 0034 3B4B     		ldr	r3, .L44+8
 512 0036 1868     		ldr	r0, [r3]
 513 0038 FFF7FEFF 		bl	sendViaUsart3
 514              	.LVL35:
 154:main.c        **** 		return;
 515              		.loc 1 154 3 view .LVU108
 516 003c 2046     		mov	r0, r4
 517 003e FFF7FEFF 		bl	sendViaUsart3
 518              	.LVL36:
 155:main.c        **** 
 519              		.loc 1 155 3 view .LVU109
 520 0042 10E0     		b	.L35
 521              	.LVL37:
 522              	.L38:
 163:main.c        **** 			delayMcs(40);
 523              		.loc 1 163 4 view .LVU110
 524 0044 FFF7FEFF 		bl	csUp
 525              	.LVL38:
 164:main.c        **** 			sendViaSPI2((OPCODE_WRITE << EEPROM_ADDRESS_LENGTH));
 526              		.loc 1 164 4 view .LVU111
 527 0048 2820     		movs	r0, #40
 528 004a FFF7FEFF 		bl	delayMcs
 529              	.LVL39:
 165:main.c        **** 			sendViaSPI2(value);
 530              		.loc 1 165 4 view .LVU112
 531 004e 4FF4A050 		mov	r0, #5120
 532 0052 FFF7FEFF 		bl	sendViaSPI2
 533              	.LVL40:
 166:main.c        **** 			delayMcs(80);
 534              		.loc 1 166 4 view .LVU113
 535 0056 A0B2     		uxth	r0, r4
 536 0058 FFF7FEFF 		bl	sendViaSPI2
 537              	.LVL41:
 167:main.c        **** 			csDown();
 538              		.loc 1 167 4 view .LVU114
 539 005c 5020     		movs	r0, #80
 540 005e FFF7FEFF 		bl	delayMcs
 541              	.LVL42:
 168:main.c        **** 
 542              		.loc 1 168 4 view .LVU115
 543 0062 FFF7FEFF 		bl	csDown
 544              	.LVL43:
ARM GAS  /tmp/ccyJgjqn.s 			page 14


 170:main.c        **** 
 545              		.loc 1 170 5 view .LVU116
 546              	.L35:
 200:main.c        **** 
 201:main.c        **** 	}
 202:main.c        **** 
 203:main.c        **** }
 547              		.loc 1 203 1 is_stmt 0 view .LVU117
 548 0066 70BD     		pop	{r4, r5, r6, pc}
 549              	.LVL44:
 550              	.L39:
 174:main.c        **** 			delayMcs(40);
 551              		.loc 1 174 4 is_stmt 1 view .LVU118
 552 0068 FFF7FEFF 		bl	csUp
 553              	.LVL45:
 175:main.c        **** 			sendViaSPI2((OPCODE_WRITE << EEPROM_ADDRESS_LENGTH));
 554              		.loc 1 175 4 view .LVU119
 555 006c 2820     		movs	r0, #40
 556 006e FFF7FEFF 		bl	delayMcs
 557              	.LVL46:
 176:main.c        **** 			sendViaSPI2(((value/1000 + 48) << 8) | ((value/100)%10 + 48));
 558              		.loc 1 176 4 view .LVU120
 559 0072 4FF4A050 		mov	r0, #5120
 560 0076 FFF7FEFF 		bl	sendViaSPI2
 561              	.LVL47:
 177:main.c        **** 			delayMcs(80);
 562              		.loc 1 177 4 view .LVU121
 177:main.c        **** 			delayMcs(80);
 563              		.loc 1 177 23 is_stmt 0 view .LVU122
 564 007a 2B48     		ldr	r0, .L44+12
 565 007c 80FB0430 		smull	r3, r0, r0, r4
 566 0080 E517     		asrs	r5, r4, #31
 567 0082 C5EBA010 		rsb	r0, r5, r0, asr #6
 177:main.c        **** 			delayMcs(80);
 568              		.loc 1 177 29 view .LVU123
 569 0086 00F13002 		add	r2, r0, #48
 177:main.c        **** 			delayMcs(80);
 570              		.loc 1 177 50 view .LVU124
 571 008a 2849     		ldr	r1, .L44+16
 572 008c 81FB0431 		smull	r3, r1, r1, r4
 573 0090 C5EB6111 		rsb	r1, r5, r1, asr #5
 177:main.c        **** 			delayMcs(80);
 574              		.loc 1 177 55 view .LVU125
 575 0094 264E     		ldr	r6, .L44+20
 576 0096 86FB0130 		smull	r3, r0, r6, r1
 577 009a CB17     		asrs	r3, r1, #31
 578 009c C3EBA003 		rsb	r3, r3, r0, asr #2
 579 00a0 03EB8303 		add	r3, r3, r3, lsl #2
 580 00a4 A1EB4303 		sub	r3, r1, r3, lsl #1
 177:main.c        **** 			delayMcs(80);
 581              		.loc 1 177 59 view .LVU126
 582 00a8 03F13000 		add	r0, r3, #48
 583 00ac 00B2     		sxth	r0, r0
 177:main.c        **** 			delayMcs(80);
 584              		.loc 1 177 41 view .LVU127
 585 00ae 40EA0220 		orr	r0, r0, r2, lsl #8
 177:main.c        **** 			delayMcs(80);
ARM GAS  /tmp/ccyJgjqn.s 			page 15


 586              		.loc 1 177 4 view .LVU128
 587 00b2 80B2     		uxth	r0, r0
 588 00b4 FFF7FEFF 		bl	sendViaSPI2
 589              	.LVL48:
 178:main.c        **** 			csDown();
 590              		.loc 1 178 4 is_stmt 1 view .LVU129
 591 00b8 5020     		movs	r0, #80
 592 00ba FFF7FEFF 		bl	delayMcs
 593              	.LVL49:
 179:main.c        **** 
 594              		.loc 1 179 4 view .LVU130
 595 00be FFF7FEFF 		bl	csDown
 596              	.LVL50:
 181:main.c        **** 
 597              		.loc 1 181 4 view .LVU131
 598 00c2 0320     		movs	r0, #3
 599 00c4 FFF7FEFF 		bl	delayMs
 600              	.LVL51:
 183:main.c        **** 			delayMcs(40);
 601              		.loc 1 183 4 view .LVU132
 602 00c8 FFF7FEFF 		bl	csUp
 603              	.LVL52:
 184:main.c        **** 			sendViaSPI2((OPCODE_WRITE << EEPROM_ADDRESS_LENGTH) + 1);
 604              		.loc 1 184 4 view .LVU133
 605 00cc 2820     		movs	r0, #40
 606 00ce FFF7FEFF 		bl	delayMcs
 607              	.LVL53:
 185:main.c        **** 			sendViaSPI2((((value/10)%10 + 48) << 8) | (value%10 + 48));
 608              		.loc 1 185 4 view .LVU134
 609 00d2 41F20140 		movw	r0, #5121
 610 00d6 FFF7FEFF 		bl	sendViaSPI2
 611              	.LVL54:
 186:main.c        **** 			delayMcs(80);
 612              		.loc 1 186 4 view .LVU135
 186:main.c        **** 			delayMcs(80);
 613              		.loc 1 186 24 is_stmt 0 view .LVU136
 614 00da 86FB0430 		smull	r3, r0, r6, r4
 615 00de C5EBA005 		rsb	r5, r5, r0, asr #2
 186:main.c        **** 			delayMcs(80);
 616              		.loc 1 186 28 view .LVU137
 617 00e2 86FB0536 		smull	r3, r6, r6, r5
 618 00e6 E817     		asrs	r0, r5, #31
 619 00e8 C0EBA600 		rsb	r0, r0, r6, asr #2
 620 00ec 00EB8000 		add	r0, r0, r0, lsl #2
 621 00f0 A5EB4000 		sub	r0, r5, r0, lsl #1
 186:main.c        **** 			delayMcs(80);
 622              		.loc 1 186 32 view .LVU138
 623 00f4 00F13006 		add	r6, r0, #48
 186:main.c        **** 			delayMcs(80);
 624              		.loc 1 186 52 view .LVU139
 625 00f8 05EB8505 		add	r5, r5, r5, lsl #2
 626 00fc A4EB4500 		sub	r0, r4, r5, lsl #1
 186:main.c        **** 			delayMcs(80);
 627              		.loc 1 186 56 view .LVU140
 628 0100 3030     		adds	r0, r0, #48
 629 0102 00B2     		sxth	r0, r0
 186:main.c        **** 			delayMcs(80);
ARM GAS  /tmp/ccyJgjqn.s 			page 16


 630              		.loc 1 186 44 view .LVU141
 631 0104 40EA0620 		orr	r0, r0, r6, lsl #8
 186:main.c        **** 			delayMcs(80);
 632              		.loc 1 186 4 view .LVU142
 633 0108 80B2     		uxth	r0, r0
 634 010a FFF7FEFF 		bl	sendViaSPI2
 635              	.LVL55:
 187:main.c        **** 			csDown();
 636              		.loc 1 187 4 is_stmt 1 view .LVU143
 637 010e 5020     		movs	r0, #80
 638 0110 FFF7FEFF 		bl	delayMcs
 639              	.LVL56:
 188:main.c        **** 
 640              		.loc 1 188 4 view .LVU144
 641 0114 FFF7FEFF 		bl	csDown
 642              	.LVL57:
 190:main.c        **** 
 643              		.loc 1 190 5 view .LVU145
 190:main.c        **** 
 644              		.loc 1 190 3 is_stmt 0 view .LVU146
 645 0118 A5E7     		b	.L35
 646              	.L45:
 647 011a 00BF     		.align	2
 648              	.L44:
 649 011c 00000000 		.word	.LC0
 650 0120 00000000 		.word	.LANCHOR2
 651 0124 00000000 		.word	.LANCHOR1
 652 0128 D34D6210 		.word	274877907
 653 012c 1F85EB51 		.word	1374389535
 654 0130 67666666 		.word	1717986919
 655              		.cfi_endproc
 656              	.LFE139:
 658              		.section	.text.SysTick_Handler,"ax",%progbits
 659              		.align	1
 660              		.global	SysTick_Handler
 661              		.syntax unified
 662              		.thumb
 663              		.thumb_func
 664              		.fpu fpv4-sp-d16
 666              	SysTick_Handler:
 667              	.LFB140:
 204:main.c        **** 
 205:main.c        **** void SysTick_Handler(void) { // redefinition of SysTick_Handler
 668              		.loc 1 205 28 is_stmt 1 view -0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672 0000 08B5     		push	{r3, lr}
 673              	.LCFI3:
 674              		.cfi_def_cfa_offset 8
 675              		.cfi_offset 3, -8
 676              		.cfi_offset 14, -4
 206:main.c        **** 
 207:main.c        **** 	ticks++;
 677              		.loc 1 207 2 view .LVU148
 678              		.loc 1 207 7 is_stmt 0 view .LVU149
 679 0002 124A     		ldr	r2, .L50
ARM GAS  /tmp/ccyJgjqn.s 			page 17


 680 0004 1368     		ldr	r3, [r2]
 681 0006 0133     		adds	r3, r3, #1
 682 0008 1360     		str	r3, [r2]
 208:main.c        ****     sTicks++;
 683              		.loc 1 208 5 is_stmt 1 view .LVU150
 684              		.loc 1 208 11 is_stmt 0 view .LVU151
 685 000a 114B     		ldr	r3, .L50+4
 686 000c 1A68     		ldr	r2, [r3]
 687 000e 0132     		adds	r2, r2, #1
 688 0010 1A60     		str	r2, [r3]
 209:main.c        **** 	if(!(sTicks%5000) && !(key_on()) && (SPI6->CR1 & SPI_CR1_SPE)) { sendViaSPI6(DUMMY_WORD); } // 200
 689              		.loc 1 209 2 is_stmt 1 view .LVU152
 690              		.loc 1 209 13 is_stmt 0 view .LVU153
 691 0012 1A68     		ldr	r2, [r3]
 692 0014 0F49     		ldr	r1, .L50+8
 693 0016 81FB0231 		smull	r3, r1, r1, r2
 694 001a D317     		asrs	r3, r2, #31
 695 001c C3EBE123 		rsb	r3, r3, r1, asr #11
 696 0020 41F28831 		movw	r1, #5000
 697 0024 01FB1323 		mls	r3, r1, r3, r2
 698              		.loc 1 209 4 view .LVU154
 699 0028 4BB9     		cbnz	r3, .L46
 700              		.loc 1 209 25 discriminator 1 view .LVU155
 701 002a 0B4B     		ldr	r3, .L50+12
 702 002c 1B69     		ldr	r3, [r3, #16]
 703              		.loc 1 209 20 discriminator 1 view .LVU156
 704 002e 13F4006F 		tst	r3, #2048
 705 0032 04D1     		bne	.L46
 706              		.loc 1 209 43 discriminator 2 view .LVU157
 707 0034 094B     		ldr	r3, .L50+16
 708 0036 1B68     		ldr	r3, [r3]
 709              		.loc 1 209 35 discriminator 2 view .LVU158
 710 0038 13F0400F 		tst	r3, #64
 711 003c 00D1     		bne	.L49
 712              	.L46:
 210:main.c        **** 
 211:main.c        **** }
 713              		.loc 1 211 1 view .LVU159
 714 003e 08BD     		pop	{r3, pc}
 715              	.L49:
 209:main.c        **** 	if(!(sTicks%5000) && !(key_on()) && (SPI6->CR1 & SPI_CR1_SPE)) { sendViaSPI6(DUMMY_WORD); } // 200
 716              		.loc 1 209 67 is_stmt 1 discriminator 3 view .LVU160
 717 0040 4FF6FF70 		movw	r0, #65535
 718 0044 FFF7FEFF 		bl	sendViaSPI6
 719              	.LVL58:
 720              		.loc 1 211 1 is_stmt 0 discriminator 3 view .LVU161
 721 0048 F9E7     		b	.L46
 722              	.L51:
 723 004a 00BF     		.align	2
 724              	.L50:
 725 004c 00000000 		.word	.LANCHOR0
 726 0050 00000000 		.word	.LANCHOR3
 727 0054 AD8BDB68 		.word	1759218605
 728 0058 00180240 		.word	1073879040
 729 005c 00540140 		.word	1073828864
 730              		.cfi_endproc
 731              	.LFE140:
ARM GAS  /tmp/ccyJgjqn.s 			page 18


 733              		.section	.text.power,"ax",%progbits
 734              		.align	1
 735              		.global	power
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu fpv4-sp-d16
 741              	power:
 742              	.LVL59:
 743              	.LFB141:
 212:main.c        **** 
 213:main.c        **** int power(int base, int a) { // calculates power a of base
 744              		.loc 1 213 28 is_stmt 1 view -0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 214:main.c        **** 
 215:main.c        **** 	if(a < 0) return 0;
 748              		.loc 1 215 2 view .LVU163
 749              		.loc 1 215 4 is_stmt 0 view .LVU164
 750 0000 0029     		cmp	r1, #0
 751              		.loc 1 215 4 view .LVU165
 752 0002 0ADB     		blt	.L54
 213:main.c        **** 
 753              		.loc 1 213 28 view .LVU166
 754 0004 10B5     		push	{r4, lr}
 755              	.LCFI4:
 756              		.cfi_def_cfa_offset 8
 757              		.cfi_offset 4, -8
 758              		.cfi_offset 14, -4
 759 0006 0446     		mov	r4, r0
 216:main.c        **** 
 217:main.c        ****     if (a != 0)
 760              		.loc 1 217 5 is_stmt 1 view .LVU167
 761              		.loc 1 217 8 is_stmt 0 view .LVU168
 762 0008 09B9     		cbnz	r1, .L60
 218:main.c        ****         return (base * power(base, a - 1));
 219:main.c        ****     else
 220:main.c        ****         return 1;
 763              		.loc 1 220 16 view .LVU169
 764 000a 0120     		movs	r0, #1
 765              	.LVL60:
 766              	.L52:
 221:main.c        **** 
 222:main.c        **** }
 767              		.loc 1 222 1 view .LVU170
 768 000c 10BD     		pop	{r4, pc}
 769              	.LVL61:
 770              	.L60:
 218:main.c        ****         return (base * power(base, a - 1));
 771              		.loc 1 218 9 is_stmt 1 view .LVU171
 218:main.c        ****         return (base * power(base, a - 1));
 772              		.loc 1 218 24 is_stmt 0 view .LVU172
 773 000e 0139     		subs	r1, r1, #1
 774              	.LVL62:
 218:main.c        ****         return (base * power(base, a - 1));
 775              		.loc 1 218 24 view .LVU173
ARM GAS  /tmp/ccyJgjqn.s 			page 19


 776 0010 FFF7FEFF 		bl	power
 777              	.LVL63:
 218:main.c        ****         return (base * power(base, a - 1));
 778              		.loc 1 218 22 view .LVU174
 779 0014 04FB00F0 		mul	r0, r4, r0
 780 0018 F8E7     		b	.L52
 781              	.LVL64:
 782              	.L54:
 783              	.LCFI5:
 784              		.cfi_def_cfa_offset 0
 785              		.cfi_restore 4
 786              		.cfi_restore 14
 215:main.c        **** 
 787              		.loc 1 215 19 view .LVU175
 788 001a 0020     		movs	r0, #0
 789              	.LVL65:
 790              		.loc 1 222 1 view .LVU176
 791 001c 7047     		bx	lr
 792              		.cfi_endproc
 793              	.LFE141:
 795              		.section	.text.strlen,"ax",%progbits
 796              		.align	1
 797              		.global	strlen
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 801              		.fpu fpv4-sp-d16
 803              	strlen:
 804              	.LVL66:
 805              	.LFB142:
 223:main.c        **** 
 224:main.c        **** int strlen(const char* string) { // returns string length
 806              		.loc 1 224 32 is_stmt 1 view -0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811              		.loc 1 224 32 is_stmt 0 view .LVU178
 812 0000 0146     		mov	r1, r0
 225:main.c        **** 
 226:main.c        ****     int length = 0;
 813              		.loc 1 226 5 is_stmt 1 view .LVU179
 814              	.LVL67:
 227:main.c        ****     for(int i = 0; string[i] !=0; i++) {
 815              		.loc 1 227 5 view .LVU180
 816              	.LBB11:
 817              		.loc 1 227 9 view .LVU181
 818              		.loc 1 227 13 is_stmt 0 view .LVU182
 819 0002 0023     		movs	r3, #0
 820              	.LBE11:
 226:main.c        ****     for(int i = 0; string[i] !=0; i++) {
 821              		.loc 1 226 9 view .LVU183
 822 0004 1846     		mov	r0, r3
 823              	.LVL68:
 824              	.L62:
 825              	.LBB12:
 826              		.loc 1 227 20 is_stmt 1 discriminator 1 view .LVU184
ARM GAS  /tmp/ccyJgjqn.s 			page 20


 827              		.loc 1 227 26 is_stmt 0 discriminator 1 view .LVU185
 828 0006 CA5C     		ldrb	r2, [r1, r3]	@ zero_extendqisi2
 829              		.loc 1 227 5 discriminator 1 view .LVU186
 830 0008 12B1     		cbz	r2, .L64
 228:main.c        ****         length++;
 831              		.loc 1 228 9 is_stmt 1 discriminator 3 view .LVU187
 832              		.loc 1 228 15 is_stmt 0 discriminator 3 view .LVU188
 833 000a 0130     		adds	r0, r0, #1
 834              	.LVL69:
 227:main.c        ****     for(int i = 0; string[i] !=0; i++) {
 835              		.loc 1 227 35 is_stmt 1 discriminator 3 view .LVU189
 227:main.c        ****     for(int i = 0; string[i] !=0; i++) {
 836              		.loc 1 227 36 is_stmt 0 discriminator 3 view .LVU190
 837 000c 0133     		adds	r3, r3, #1
 838              	.LVL70:
 227:main.c        ****     for(int i = 0; string[i] !=0; i++) {
 839              		.loc 1 227 36 discriminator 3 view .LVU191
 840 000e FAE7     		b	.L62
 841              	.L64:
 227:main.c        ****     for(int i = 0; string[i] !=0; i++) {
 842              		.loc 1 227 36 discriminator 3 view .LVU192
 843              	.LBE12:
 229:main.c        ****     }
 230:main.c        ****     return length;
 231:main.c        **** 
 232:main.c        **** }
 844              		.loc 1 232 1 view .LVU193
 845 0010 7047     		bx	lr
 846              		.cfi_endproc
 847              	.LFE142:
 849              		.section	.rodata.itoa.str1.4,"aMS",%progbits,1
 850              		.align	2
 851              	.LC1:
 852 0000 3000     		.ascii	"0\000"
 853              		.section	.text.itoa,"ax",%progbits
 854              		.align	1
 855              		.global	itoa
 856              		.syntax unified
 857              		.thumb
 858              		.thumb_func
 859              		.fpu fpv4-sp-d16
 861              	itoa:
 862              	.LVL71:
 863              	.LFB143:
 233:main.c        **** 
 234:main.c        **** char itoa_output[MAX_ITOA_OUTPUT_LENGTH];
 235:main.c        **** 
 236:main.c        **** char* itoa(int value) { // converts integer to string
 864              		.loc 1 236 23 is_stmt 1 view -0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 237:main.c        **** 
 238:main.c        **** 	if(value == 0) { return "0"; }
 869              		.loc 1 238 2 view .LVU195
 870              		.loc 1 238 4 is_stmt 0 view .LVU196
ARM GAS  /tmp/ccyJgjqn.s 			page 21


 871 0000 D8B1     		cbz	r0, .L72
 872 0002 0246     		mov	r2, r0
 239:main.c        **** 
 240:main.c        **** 	int n = 0;
 873              		.loc 1 240 2 is_stmt 1 view .LVU197
 874              	.LVL72:
 241:main.c        **** 	if(value < 0) {
 875              		.loc 1 241 2 view .LVU198
 876              		.loc 1 241 4 is_stmt 0 view .LVU199
 877 0004 0028     		cmp	r0, #0
 878 0006 12DB     		blt	.L80
 240:main.c        **** 	if(value < 0) {
 879              		.loc 1 240 6 view .LVU200
 880 0008 0021     		movs	r1, #0
 881              	.LVL73:
 882              	.L68:
 242:main.c        **** 		value *= -1;
 243:main.c        **** 		itoa_output[n] = '-';
 244:main.c        **** 		n++;
 245:main.c        **** 	}
 246:main.c        **** 
 247:main.c        ****  	while(value != 0) {
 883              		.loc 1 247 8 is_stmt 1 view .LVU201
 884 000a C2B1     		cbz	r2, .L81
 248:main.c        **** 		itoa_output[n] = value % 10 + 48;
 885              		.loc 1 248 3 view .LVU202
 886              		.loc 1 248 26 is_stmt 0 view .LVU203
 887 000c 1748     		ldr	r0, .L83
 888 000e 80FB0230 		smull	r3, r0, r0, r2
 889 0012 D317     		asrs	r3, r2, #31
 890 0014 C3EBA003 		rsb	r3, r3, r0, asr #2
 891 0018 1846     		mov	r0, r3
 892 001a 03EB8303 		add	r3, r3, r3, lsl #2
 893 001e A2EB4303 		sub	r3, r2, r3, lsl #1
 894              		.loc 1 248 31 view .LVU204
 895 0022 3033     		adds	r3, r3, #48
 896              		.loc 1 248 18 view .LVU205
 897 0024 124A     		ldr	r2, .L83+4
 898              	.LVL74:
 899              		.loc 1 248 18 view .LVU206
 900 0026 5354     		strb	r3, [r2, r1]
 249:main.c        ****     	value /= 10;
 901              		.loc 1 249 6 is_stmt 1 view .LVU207
 902              		.loc 1 249 12 is_stmt 0 view .LVU208
 903 0028 0246     		mov	r2, r0
 904              	.LVL75:
 250:main.c        ****     	n++;
 905              		.loc 1 250 6 is_stmt 1 view .LVU209
 906              		.loc 1 250 7 is_stmt 0 view .LVU210
 907 002a 0131     		adds	r1, r1, #1
 908              	.LVL76:
 909              		.loc 1 250 7 view .LVU211
 910 002c EDE7     		b	.L68
 911              	.LVL77:
 912              	.L80:
 242:main.c        **** 		itoa_output[n] = '-';
 913              		.loc 1 242 3 is_stmt 1 view .LVU212
ARM GAS  /tmp/ccyJgjqn.s 			page 22


 242:main.c        **** 		itoa_output[n] = '-';
 914              		.loc 1 242 9 is_stmt 0 view .LVU213
 915 002e 4242     		rsbs	r2, r0, #0
 916              	.LVL78:
 243:main.c        **** 		n++;
 917              		.loc 1 243 3 is_stmt 1 view .LVU214
 243:main.c        **** 		n++;
 918              		.loc 1 243 18 is_stmt 0 view .LVU215
 919 0030 0F4B     		ldr	r3, .L83+4
 920 0032 2D21     		movs	r1, #45
 921 0034 1970     		strb	r1, [r3]
 244:main.c        **** 	}
 922              		.loc 1 244 3 is_stmt 1 view .LVU216
 923              	.LVL79:
 244:main.c        **** 	}
 924              		.loc 1 244 4 is_stmt 0 view .LVU217
 925 0036 0121     		movs	r1, #1
 926 0038 E7E7     		b	.L68
 927              	.LVL80:
 928              	.L72:
 238:main.c        **** 
 929              		.loc 1 238 26 view .LVU218
 930 003a 0E48     		ldr	r0, .L83+8
 931              	.LVL81:
 238:main.c        **** 
 932              		.loc 1 238 26 view .LVU219
 933 003c 7047     		bx	lr
 934              	.LVL82:
 935              	.L81:
 251:main.c        ****   	}
 252:main.c        **** 
 253:main.c        ****   	itoa_output[n] ='\0';
 936              		.loc 1 253 4 is_stmt 1 view .LVU220
 937              		.loc 1 253 19 is_stmt 0 view .LVU221
 938 003e 0C4B     		ldr	r3, .L83+4
 939 0040 0020     		movs	r0, #0
 940 0042 5854     		strb	r0, [r3, r1]
 254:main.c        **** 
 255:main.c        ****   	int i = 0, j = n - 1; // reverse
 941              		.loc 1 255 4 is_stmt 1 view .LVU222
 942              	.LVL83:
 943              		.loc 1 255 15 is_stmt 0 view .LVU223
 944 0044 4B1E     		subs	r3, r1, #1
 945              	.LVL84:
 256:main.c        ****   	char buffer;
 946              		.loc 1 256 4 is_stmt 1 view .LVU224
 257:main.c        **** 
 258:main.c        ****   	while (i < j) {
 947              		.loc 1 258 4 view .LVU225
 948              		.loc 1 258 10 view .LVU226
 949 0046 9A42     		cmp	r2, r3
 950 0048 0DDA     		bge	.L82
 236:main.c        **** 
 951              		.loc 1 236 23 is_stmt 0 view .LVU227
 952 004a 10B4     		push	{r4}
 953              	.LCFI6:
 954              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccyJgjqn.s 			page 23


 955              		.cfi_offset 4, -4
 956              	.LVL85:
 957              	.L71:
 259:main.c        ****     	buffer = itoa_output[i];
 958              		.loc 1 259 6 is_stmt 1 view .LVU228
 959              		.loc 1 259 13 is_stmt 0 view .LVU229
 960 004c 0849     		ldr	r1, .L83+4
 961 004e 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 962              	.LVL86:
 260:main.c        ****     	itoa_output[i] = itoa_output[j];
 963              		.loc 1 260 6 is_stmt 1 view .LVU230
 964              		.loc 1 260 34 is_stmt 0 view .LVU231
 965 0050 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 966              		.loc 1 260 21 view .LVU232
 967 0052 8C54     		strb	r4, [r1, r2]
 261:main.c        ****     	itoa_output[j] = buffer;
 968              		.loc 1 261 6 is_stmt 1 view .LVU233
 969              		.loc 1 261 21 is_stmt 0 view .LVU234
 970 0054 C854     		strb	r0, [r1, r3]
 262:main.c        ****     	i++;
 971              		.loc 1 262 6 is_stmt 1 view .LVU235
 972              		.loc 1 262 7 is_stmt 0 view .LVU236
 973 0056 0132     		adds	r2, r2, #1
 974              	.LVL87:
 263:main.c        ****     	j--;
 975              		.loc 1 263 6 is_stmt 1 view .LVU237
 976              		.loc 1 263 7 is_stmt 0 view .LVU238
 977 0058 013B     		subs	r3, r3, #1
 978              	.LVL88:
 258:main.c        ****     	buffer = itoa_output[i];
 979              		.loc 1 258 10 is_stmt 1 view .LVU239
 980 005a 9A42     		cmp	r2, r3
 981 005c F6DB     		blt	.L71
 264:main.c        ****   	}
 265:main.c        **** 
 266:main.c        ****   	return itoa_output;
 982              		.loc 1 266 11 is_stmt 0 view .LVU240
 983 005e 0448     		ldr	r0, .L83+4
 984              	.LVL89:
 267:main.c        **** 
 268:main.c        **** }
 985              		.loc 1 268 1 view .LVU241
 986 0060 5DF8044B 		ldr	r4, [sp], #4
 987              	.LCFI7:
 988              		.cfi_restore 4
 989              		.cfi_def_cfa_offset 0
 990 0064 7047     		bx	lr
 991              	.LVL90:
 992              	.L82:
 266:main.c        **** 
 993              		.loc 1 266 11 view .LVU242
 994 0066 0248     		ldr	r0, .L83+4
 995              		.loc 1 268 1 view .LVU243
 996 0068 7047     		bx	lr
 997              	.L84:
 998 006a 00BF     		.align	2
 999              	.L83:
ARM GAS  /tmp/ccyJgjqn.s 			page 24


 1000 006c 67666666 		.word	1717986919
 1001 0070 00000000 		.word	itoa_output
 1002 0074 00000000 		.word	.LC1
 1003              		.cfi_endproc
 1004              	.LFE143:
 1006              		.section	.text.isize,"ax",%progbits
 1007              		.align	1
 1008              		.global	isize
 1009              		.syntax unified
 1010              		.thumb
 1011              		.thumb_func
 1012              		.fpu fpv4-sp-d16
 1014              	isize:
 1015              	.LVL91:
 1016              	.LFB144:
 269:main.c        **** 
 270:main.c        **** int isize(int number) { // calculates number size in symbols
 1017              		.loc 1 270 23 is_stmt 1 view -0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 271:main.c        **** 
 272:main.c        **** 	int size = 0;
 1021              		.loc 1 272 2 view .LVU245
 273:main.c        **** 	if(number < 0) {
 1022              		.loc 1 273 2 view .LVU246
 1023              		.loc 1 273 4 is_stmt 0 view .LVU247
 1024 0000 031E     		subs	r3, r0, #0
 1025 0002 04DB     		blt	.L94
 272:main.c        **** 	if(number < 0) {
 1026              		.loc 1 272 6 view .LVU248
 1027 0004 0020     		movs	r0, #0
 1028              	.LVL92:
 1029              	.L86:
 274:main.c        **** 		number *= -1;
 275:main.c        **** 		size++;
 276:main.c        **** 	}
 277:main.c        **** 	if(number < 10) return 1;
 1030              		.loc 1 277 2 is_stmt 1 view .LVU249
 1031              		.loc 1 277 4 is_stmt 0 view .LVU250
 1032 0006 092B     		cmp	r3, #9
 1033 0008 04DC     		bgt	.L95
 1034              		.loc 1 277 25 view .LVU251
 1035 000a 0120     		movs	r0, #1
 1036              	.LVL93:
 278:main.c        **** 	size++;
 279:main.c        **** 	size += isize(number/10);
 280:main.c        ****     return size;
 281:main.c        **** 
 282:main.c        **** }
 1037              		.loc 1 282 1 view .LVU252
 1038 000c 7047     		bx	lr
 1039              	.LVL94:
 1040              	.L94:
 274:main.c        **** 		number *= -1;
 1041              		.loc 1 274 3 is_stmt 1 view .LVU253
 274:main.c        **** 		number *= -1;
ARM GAS  /tmp/ccyJgjqn.s 			page 25


 1042              		.loc 1 274 10 is_stmt 0 view .LVU254
 1043 000e 5B42     		rsbs	r3, r3, #0
 1044              	.LVL95:
 275:main.c        **** 	}
 1045              		.loc 1 275 3 is_stmt 1 view .LVU255
 275:main.c        **** 	}
 1046              		.loc 1 275 7 is_stmt 0 view .LVU256
 1047 0010 0120     		movs	r0, #1
 1048 0012 F8E7     		b	.L86
 1049              	.LVL96:
 1050              	.L95:
 270:main.c        **** 
 1051              		.loc 1 270 23 view .LVU257
 1052 0014 10B5     		push	{r4, lr}
 1053              	.LCFI8:
 1054              		.cfi_def_cfa_offset 8
 1055              		.cfi_offset 4, -8
 1056              		.cfi_offset 14, -4
 278:main.c        **** 	size++;
 1057              		.loc 1 278 2 is_stmt 1 view .LVU258
 278:main.c        **** 	size++;
 1058              		.loc 1 278 6 is_stmt 0 view .LVU259
 1059 0016 441C     		adds	r4, r0, #1
 1060              	.LVL97:
 279:main.c        ****     return size;
 1061              		.loc 1 279 2 is_stmt 1 view .LVU260
 279:main.c        ****     return size;
 1062              		.loc 1 279 10 is_stmt 0 view .LVU261
 1063 0018 0448     		ldr	r0, .L96
 1064 001a 80FB0320 		smull	r2, r0, r0, r3
 1065 001e DB17     		asrs	r3, r3, #31
 1066              	.LVL98:
 279:main.c        ****     return size;
 1067              		.loc 1 279 10 view .LVU262
 1068 0020 C3EBA000 		rsb	r0, r3, r0, asr #2
 1069 0024 FFF7FEFF 		bl	isize
 1070              	.LVL99:
 279:main.c        ****     return size;
 1071              		.loc 1 279 7 view .LVU263
 1072 0028 2044     		add	r0, r0, r4
 1073              	.LVL100:
 280:main.c        **** 
 1074              		.loc 1 280 5 is_stmt 1 view .LVU264
 1075              		.loc 1 282 1 is_stmt 0 view .LVU265
 1076 002a 10BD     		pop	{r4, pc}
 1077              	.L97:
 1078              		.align	2
 1079              	.L96:
 1080 002c 67666666 		.word	1717986919
 1081              		.cfi_endproc
 1082              	.LFE144:
 1084              		.section	.rodata.USART3_IRQHandler.str1.4,"aMS",%progbits,1
 1085              		.align	2
 1086              	.LC2:
 1087 0000 0D202020 		.ascii	"\015    \015\000"
 1087      200D00
 1088              		.section	.text.USART3_IRQHandler,"ax",%progbits
ARM GAS  /tmp/ccyJgjqn.s 			page 26


 1089              		.align	1
 1090              		.global	USART3_IRQHandler
 1091              		.syntax unified
 1092              		.thumb
 1093              		.thumb_func
 1094              		.fpu fpv4-sp-d16
 1096              	USART3_IRQHandler:
 1097              	.LFB145:
 283:main.c        **** 
 284:main.c        **** void USART3_IRQHandler (void) { // redefinition of USART3 rx interrupt handler, provides convinient
 1098              		.loc 1 284 31 is_stmt 1 view -0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 8
 1101              		@ frame_needed = 0, uses_anonymous_args = 0
 285:main.c        **** 
 286:main.c        **** 	if (USART3->SR & USART_SR_RXNE) { // check "data recieved" flag
 1102              		.loc 1 286 2 view .LVU267
 1103              		.loc 1 286 12 is_stmt 0 view .LVU268
 1104 0000 414B     		ldr	r3, .L117
 1105 0002 1B68     		ldr	r3, [r3]
 1106              		.loc 1 286 5 view .LVU269
 1107 0004 13F0200F 		tst	r3, #32
 1108 0008 7DD0     		beq	.L112
 284:main.c        **** 
 1109              		.loc 1 284 31 view .LVU270
 1110 000a 30B5     		push	{r4, r5, lr}
 1111              	.LCFI9:
 1112              		.cfi_def_cfa_offset 12
 1113              		.cfi_offset 4, -12
 1114              		.cfi_offset 5, -8
 1115              		.cfi_offset 14, -4
 1116 000c 83B0     		sub	sp, sp, #12
 1117              	.LCFI10:
 1118              		.cfi_def_cfa_offset 24
 1119              	.LBB13:
 287:main.c        **** 
 288:main.c        **** 		uint8_t byte = USART3->DR;
 1120              		.loc 1 288 3 is_stmt 1 view .LVU271
 1121              		.loc 1 288 24 is_stmt 0 view .LVU272
 1122 000e 3E4B     		ldr	r3, .L117
 1123 0010 5B68     		ldr	r3, [r3, #4]
 1124              		.loc 1 288 11 view .LVU273
 1125 0012 DBB2     		uxtb	r3, r3
 1126              	.LVL101:
 289:main.c        **** 		switch(byte) {
 1127              		.loc 1 289 3 is_stmt 1 view .LVU274
 1128 0014 3A2B     		cmp	r3, #58
 1129 0016 1ED8     		bhi	.L100
 1130 0018 302B     		cmp	r3, #48
 1131 001a 2DD2     		bcs	.L101
 1132 001c 0D2B     		cmp	r3, #13
 1133 001e 2FD1     		bne	.L103
 290:main.c        **** 
 291:main.c        **** 			case 48 ... 58 : { // Digits
 292:main.c        **** 
 293:main.c        **** 				if(displayValueUsart3Symbols < 4) {
 294:main.c        **** 
ARM GAS  /tmp/ccyJgjqn.s 			page 27


 295:main.c        **** 					displayValueUsart3Symbols++;
 296:main.c        **** 					char symbol[2];
 297:main.c        **** 					symbol[0] = byte;
 298:main.c        **** 					symbol[1] = '\0';
 299:main.c        **** 					displayValueUsart3 *= 10;
 300:main.c        **** 					displayValueUsart3 += byte - 48;
 301:main.c        **** 					sendViaUsart3(symbol);
 302:main.c        **** 
 303:main.c        **** 				}
 304:main.c        **** 
 305:main.c        **** 			} break;
 306:main.c        **** 
 307:main.c        **** 			case 13: { // Enter
 308:main.c        **** 
 309:main.c        **** 				if(!displayValueUsart3Symbols) break;
 1134              		.loc 1 309 5 view .LVU275
 1135              		.loc 1 309 8 is_stmt 0 view .LVU276
 1136 0020 3A4B     		ldr	r3, .L117+4
 1137              	.LVL102:
 1138              		.loc 1 309 8 view .LVU277
 1139 0022 1B88     		ldrh	r3, [r3]
 1140              		.loc 1 309 7 view .LVU278
 1141 0024 002B     		cmp	r3, #0
 1142 0026 2BD0     		beq	.L103
 310:main.c        **** 				sendViaUsart3("\n\r");
 1143              		.loc 1 310 5 is_stmt 1 view .LVU279
 1144 0028 3948     		ldr	r0, .L117+8
 1145 002a FFF7FEFF 		bl	sendViaUsart3
 1146              	.LVL103:
 311:main.c        **** 				if(displayValueUsart3) SPI6->CR1 &= ~SPI_CR1_SPE;
 1147              		.loc 1 311 5 view .LVU280
 1148              		.loc 1 311 8 is_stmt 0 view .LVU281
 1149 002e 394B     		ldr	r3, .L117+12
 1150 0030 1B88     		ldrh	r3, [r3]
 1151              		.loc 1 311 7 view .LVU282
 1152 0032 002B     		cmp	r3, #0
 1153 0034 40D0     		beq	.L105
 1154              		.loc 1 311 28 is_stmt 1 discriminator 1 view .LVU283
 1155              		.loc 1 311 38 is_stmt 0 discriminator 1 view .LVU284
 1156 0036 384A     		ldr	r2, .L117+16
 1157 0038 1368     		ldr	r3, [r2]
 1158 003a 23F04003 		bic	r3, r3, #64
 1159 003e 1360     		str	r3, [r2]
 1160              	.L106:
 312:main.c        **** 				else SPI6->CR1 |= SPI_CR1_SPE;
 313:main.c        **** 
 314:main.c        **** 				sTicks = 0;
 1161              		.loc 1 314 5 is_stmt 1 view .LVU285
 1162              		.loc 1 314 12 is_stmt 0 view .LVU286
 1163 0040 0023     		movs	r3, #0
 1164 0042 364A     		ldr	r2, .L117+20
 1165 0044 1360     		str	r3, [r2]
 315:main.c        **** 				displayValue = displayValueUsart3;
 1166              		.loc 1 315 5 is_stmt 1 view .LVU287
 1167              		.loc 1 315 18 is_stmt 0 view .LVU288
 1168 0046 334A     		ldr	r2, .L117+12
 1169 0048 1088     		ldrh	r0, [r2]
ARM GAS  /tmp/ccyJgjqn.s 			page 28


 1170 004a 3549     		ldr	r1, .L117+24
 1171 004c 0880     		strh	r0, [r1]	@ movhi
 316:main.c        **** 				displayValueUsart3 = 0;
 1172              		.loc 1 316 5 is_stmt 1 view .LVU289
 1173              		.loc 1 316 24 is_stmt 0 view .LVU290
 1174 004e 1380     		strh	r3, [r2]	@ movhi
 317:main.c        **** 				displayValueUsart3Symbols = 0;
 1175              		.loc 1 317 5 is_stmt 1 view .LVU291
 1176              		.loc 1 317 31 is_stmt 0 view .LVU292
 1177 0050 2E4A     		ldr	r2, .L117+4
 1178 0052 1380     		strh	r3, [r2]	@ movhi
 318:main.c        **** 
 319:main.c        **** 			} break;
 1179              		.loc 1 319 6 is_stmt 1 view .LVU293
 1180              		.loc 1 319 4 is_stmt 0 view .LVU294
 1181 0054 14E0     		b	.L103
 1182              	.LVL104:
 1183              	.L100:
 289:main.c        **** 
 1184              		.loc 1 289 3 view .LVU295
 1185 0056 7F2B     		cmp	r3, #127
 1186 0058 12D1     		bne	.L103
 320:main.c        **** 
 321:main.c        **** 			case 127: { // Backspace
 322:main.c        **** 
 323:main.c        **** 				sendViaUsart3("\r    \r");
 1187              		.loc 1 323 5 is_stmt 1 view .LVU296
 1188 005a 3248     		ldr	r0, .L117+28
 1189 005c FFF7FEFF 		bl	sendViaUsart3
 1190              	.LVL105:
 324:main.c        **** 				switch(displayValueUsart3Symbols) {
 1191              		.loc 1 324 5 view .LVU297
 1192 0060 2A4B     		ldr	r3, .L117+4
 1193 0062 1B88     		ldrh	r3, [r3]
 1194 0064 63B1     		cbz	r3, .L103
 1195 0066 012B     		cmp	r3, #1
 1196 0068 46D1     		bne	.L110
 325:main.c        **** 
 326:main.c        **** 					case 0: break;
 327:main.c        **** 
 328:main.c        **** 					case 1: {
 329:main.c        **** 
 330:main.c        **** 						displayValueUsart3 = 0;
 1197              		.loc 1 330 7 view .LVU298
 1198              		.loc 1 330 26 is_stmt 0 view .LVU299
 1199 006a 2A4A     		ldr	r2, .L117+12
 1200 006c 0021     		movs	r1, #0
 1201 006e 1180     		strh	r1, [r2]	@ movhi
 331:main.c        **** 						displayValueUsart3Symbols--;
 1202              		.loc 1 331 7 is_stmt 1 view .LVU300
 1203              		.loc 1 331 32 is_stmt 0 view .LVU301
 1204 0070 013B     		subs	r3, r3, #1
 1205 0072 264A     		ldr	r2, .L117+4
 1206 0074 1380     		strh	r3, [r2]	@ movhi
 332:main.c        **** 
 333:main.c        **** 					} break;
 1207              		.loc 1 333 8 is_stmt 1 view .LVU302
ARM GAS  /tmp/ccyJgjqn.s 			page 29


 1208              		.loc 1 333 6 is_stmt 0 view .LVU303
 1209 0076 03E0     		b	.L103
 1210              	.LVL106:
 1211              	.L101:
 293:main.c        **** 
 1212              		.loc 1 293 5 is_stmt 1 view .LVU304
 293:main.c        **** 
 1213              		.loc 1 293 34 is_stmt 0 view .LVU305
 1214 0078 244A     		ldr	r2, .L117+4
 1215 007a 1288     		ldrh	r2, [r2]
 293:main.c        **** 
 1216              		.loc 1 293 7 view .LVU306
 1217 007c 032A     		cmp	r2, #3
 1218 007e 06D9     		bls	.L115
 1219              	.LVL107:
 1220              	.L103:
 334:main.c        **** 
 335:main.c        **** 					default: {
 336:main.c        **** 
 337:main.c        **** 						for(int i = 0; i < displayValueUsart3Symbols - isize(displayValueUsart3); i++) {
 338:main.c        **** 							sendViaUsart3("0");
 339:main.c        **** 						}
 340:main.c        **** 						displayValueUsart3 /= 10;
 341:main.c        **** 						if(displayValueUsart3) sendViaUsart3(itoa(displayValueUsart3));
 342:main.c        **** 						displayValueUsart3Symbols--;
 343:main.c        **** 
 344:main.c        **** 					} break;
 345:main.c        **** 
 346:main.c        **** 				}
 347:main.c        **** 
 348:main.c        **** 			} break;
 349:main.c        **** 
 350:main.c        **** 			default: break;
 351:main.c        **** 
 352:main.c        **** 		}
 353:main.c        **** 
 354:main.c        **** 		USART3->SR &= ~USART_SR_RXNE; // clear "data recieved" flag
 1221              		.loc 1 354 3 is_stmt 1 view .LVU307
 1222              		.loc 1 354 14 is_stmt 0 view .LVU308
 1223 0080 214A     		ldr	r2, .L117
 1224 0082 1368     		ldr	r3, [r2]
 1225 0084 23F02003 		bic	r3, r3, #32
 1226 0088 1360     		str	r3, [r2]
 1227              	.LBE13:
 355:main.c        **** 
 356:main.c        **** 	}
 357:main.c        **** 
 358:main.c        **** }
 1228              		.loc 1 358 1 view .LVU309
 1229 008a 03B0     		add	sp, sp, #12
 1230              	.LCFI11:
 1231              		.cfi_remember_state
 1232              		.cfi_def_cfa_offset 12
 1233              		@ sp needed
 1234 008c 30BD     		pop	{r4, r5, pc}
 1235              	.LVL108:
 1236              	.L115:
ARM GAS  /tmp/ccyJgjqn.s 			page 30


 1237              	.LCFI12:
 1238              		.cfi_restore_state
 1239              	.LBB16:
 1240              	.LBB14:
 295:main.c        **** 					char symbol[2];
 1241              		.loc 1 295 6 is_stmt 1 view .LVU310
 295:main.c        **** 					char symbol[2];
 1242              		.loc 1 295 31 is_stmt 0 view .LVU311
 1243 008e 0132     		adds	r2, r2, #1
 1244 0090 1E49     		ldr	r1, .L117+4
 1245 0092 0A80     		strh	r2, [r1]	@ movhi
 296:main.c        **** 					symbol[0] = byte;
 1246              		.loc 1 296 6 is_stmt 1 view .LVU312
 297:main.c        **** 					symbol[1] = '\0';
 1247              		.loc 1 297 6 view .LVU313
 297:main.c        **** 					symbol[1] = '\0';
 1248              		.loc 1 297 16 is_stmt 0 view .LVU314
 1249 0094 8DF80430 		strb	r3, [sp, #4]
 298:main.c        **** 					displayValueUsart3 *= 10;
 1250              		.loc 1 298 6 is_stmt 1 view .LVU315
 298:main.c        **** 					displayValueUsart3 *= 10;
 1251              		.loc 1 298 16 is_stmt 0 view .LVU316
 1252 0098 0022     		movs	r2, #0
 1253 009a 8DF80520 		strb	r2, [sp, #5]
 299:main.c        **** 					displayValueUsart3 += byte - 48;
 1254              		.loc 1 299 6 is_stmt 1 view .LVU317
 299:main.c        **** 					displayValueUsart3 += byte - 48;
 1255              		.loc 1 299 25 is_stmt 0 view .LVU318
 1256 009e 1D49     		ldr	r1, .L117+12
 1257 00a0 0A88     		ldrh	r2, [r1]
 1258 00a2 02EB8202 		add	r2, r2, r2, lsl #2
 1259 00a6 5200     		lsls	r2, r2, #1
 1260 00a8 92B2     		uxth	r2, r2
 300:main.c        **** 					sendViaUsart3(symbol);
 1261              		.loc 1 300 6 is_stmt 1 view .LVU319
 300:main.c        **** 					sendViaUsart3(symbol);
 1262              		.loc 1 300 25 is_stmt 0 view .LVU320
 1263 00aa 1344     		add	r3, r3, r2
 1264              	.LVL109:
 300:main.c        **** 					sendViaUsart3(symbol);
 1265              		.loc 1 300 25 view .LVU321
 1266 00ac 303B     		subs	r3, r3, #48
 1267 00ae 0B80     		strh	r3, [r1]	@ movhi
 301:main.c        **** 
 1268              		.loc 1 301 6 is_stmt 1 view .LVU322
 1269 00b0 01A8     		add	r0, sp, #4
 1270              	.LVL110:
 301:main.c        **** 
 1271              		.loc 1 301 6 is_stmt 0 view .LVU323
 1272 00b2 FFF7FEFF 		bl	sendViaUsart3
 1273              	.LVL111:
 301:main.c        **** 
 1274              		.loc 1 301 6 view .LVU324
 1275 00b6 E3E7     		b	.L103
 1276              	.L105:
 301:main.c        **** 
 1277              		.loc 1 301 6 view .LVU325
ARM GAS  /tmp/ccyJgjqn.s 			page 31


 1278              	.LBE14:
 312:main.c        **** 
 1279              		.loc 1 312 10 is_stmt 1 view .LVU326
 312:main.c        **** 
 1280              		.loc 1 312 20 is_stmt 0 view .LVU327
 1281 00b8 174A     		ldr	r2, .L117+16
 1282 00ba 1368     		ldr	r3, [r2]
 1283 00bc 43F04003 		orr	r3, r3, #64
 1284 00c0 1360     		str	r3, [r2]
 1285 00c2 BDE7     		b	.L106
 1286              	.LVL112:
 1287              	.L108:
 1288              	.LBB15:
 338:main.c        **** 						}
 1289              		.loc 1 338 8 is_stmt 1 discriminator 3 view .LVU328
 1290 00c4 1848     		ldr	r0, .L117+32
 1291 00c6 FFF7FEFF 		bl	sendViaUsart3
 1292              	.LVL113:
 337:main.c        **** 							sendViaUsart3("0");
 1293              		.loc 1 337 81 discriminator 3 view .LVU329
 337:main.c        **** 							sendViaUsart3("0");
 1294              		.loc 1 337 82 is_stmt 0 discriminator 3 view .LVU330
 1295 00ca 0134     		adds	r4, r4, #1
 1296              	.LVL114:
 1297              	.L107:
 337:main.c        **** 							sendViaUsart3("0");
 1298              		.loc 1 337 22 is_stmt 1 discriminator 1 view .LVU331
 337:main.c        **** 							sendViaUsart3("0");
 1299              		.loc 1 337 54 is_stmt 0 discriminator 1 view .LVU332
 1300 00cc 114B     		ldr	r3, .L117+12
 1301 00ce 1D88     		ldrh	r5, [r3]
 1302 00d0 2846     		mov	r0, r5
 1303 00d2 FFF7FEFF 		bl	isize
 1304              	.LVL115:
 337:main.c        **** 							sendViaUsart3("0");
 1305              		.loc 1 337 52 discriminator 1 view .LVU333
 1306 00d6 0D4B     		ldr	r3, .L117+4
 1307 00d8 1B88     		ldrh	r3, [r3]
 1308 00da 1B1A     		subs	r3, r3, r0
 337:main.c        **** 							sendViaUsart3("0");
 1309              		.loc 1 337 7 discriminator 1 view .LVU334
 1310 00dc A342     		cmp	r3, r4
 1311 00de F1DC     		bgt	.L108
 1312              	.LBE15:
 340:main.c        **** 						if(displayValueUsart3) sendViaUsart3(itoa(displayValueUsart3));
 1313              		.loc 1 340 7 is_stmt 1 view .LVU335
 340:main.c        **** 						if(displayValueUsart3) sendViaUsart3(itoa(displayValueUsart3));
 1314              		.loc 1 340 26 is_stmt 0 view .LVU336
 1315 00e0 1248     		ldr	r0, .L117+36
 1316 00e2 A0FB0530 		umull	r3, r0, r0, r5
 1317 00e6 C008     		lsrs	r0, r0, #3
 1318 00e8 0A4B     		ldr	r3, .L117+12
 1319 00ea 1880     		strh	r0, [r3]	@ movhi
 341:main.c        **** 						displayValueUsart3Symbols--;
 1320              		.loc 1 341 7 is_stmt 1 view .LVU337
 341:main.c        **** 						displayValueUsart3Symbols--;
 1321              		.loc 1 341 9 is_stmt 0 view .LVU338
ARM GAS  /tmp/ccyJgjqn.s 			page 32


 1322 00ec 30B9     		cbnz	r0, .L116
 1323              	.L109:
 342:main.c        **** 
 1324              		.loc 1 342 7 is_stmt 1 view .LVU339
 342:main.c        **** 
 1325              		.loc 1 342 32 is_stmt 0 view .LVU340
 1326 00ee 074A     		ldr	r2, .L117+4
 1327 00f0 1388     		ldrh	r3, [r2]
 1328 00f2 013B     		subs	r3, r3, #1
 1329 00f4 1380     		strh	r3, [r2]	@ movhi
 344:main.c        **** 
 1330              		.loc 1 344 8 is_stmt 1 view .LVU341
 344:main.c        **** 
 1331              		.loc 1 344 6 is_stmt 0 view .LVU342
 1332 00f6 C3E7     		b	.L103
 1333              	.LVL116:
 1334              	.L110:
 344:main.c        **** 
 1335              		.loc 1 344 6 view .LVU343
 1336 00f8 0024     		movs	r4, #0
 1337 00fa E7E7     		b	.L107
 1338              	.LVL117:
 1339              	.L116:
 341:main.c        **** 						displayValueUsart3Symbols--;
 1340              		.loc 1 341 30 is_stmt 1 discriminator 1 view .LVU344
 341:main.c        **** 						displayValueUsart3Symbols--;
 1341              		.loc 1 341 44 is_stmt 0 discriminator 1 view .LVU345
 1342 00fc FFF7FEFF 		bl	itoa
 1343              	.LVL118:
 341:main.c        **** 						displayValueUsart3Symbols--;
 1344              		.loc 1 341 30 discriminator 1 view .LVU346
 1345 0100 FFF7FEFF 		bl	sendViaUsart3
 1346              	.LVL119:
 1347 0104 F3E7     		b	.L109
 1348              	.LVL120:
 1349              	.L112:
 1350              	.LCFI13:
 1351              		.cfi_def_cfa_offset 0
 1352              		.cfi_restore 4
 1353              		.cfi_restore 5
 1354              		.cfi_restore 14
 341:main.c        **** 						displayValueUsart3Symbols--;
 1355              		.loc 1 341 30 discriminator 1 view .LVU347
 1356 0106 7047     		bx	lr
 1357              	.L118:
 1358              		.align	2
 1359              	.L117:
 1360 0108 00480040 		.word	1073760256
 1361 010c 00000000 		.word	.LANCHOR4
 1362 0110 00000000 		.word	.LC0
 1363 0114 00000000 		.word	.LANCHOR5
 1364 0118 00540140 		.word	1073828864
 1365 011c 00000000 		.word	.LANCHOR3
 1366 0120 00000000 		.word	.LANCHOR6
 1367 0124 00000000 		.word	.LC2
 1368 0128 00000000 		.word	.LC1
 1369 012c CDCCCCCC 		.word	-858993459
ARM GAS  /tmp/ccyJgjqn.s 			page 33


 1370              	.LBE16:
 1371              		.cfi_endproc
 1372              	.LFE145:
 1374              		.section	.text.UART3Init,"ax",%progbits
 1375              		.align	1
 1376              		.global	UART3Init
 1377              		.syntax unified
 1378              		.thumb
 1379              		.thumb_func
 1380              		.fpu fpv4-sp-d16
 1382              	UART3Init:
 1383              	.LFB146:
 359:main.c        **** 
 360:main.c        **** void UART3Init() {
 1384              		.loc 1 360 18 is_stmt 1 view -0
 1385              		.cfi_startproc
 1386              		@ args = 0, pretend = 0, frame = 0
 1387              		@ frame_needed = 0, uses_anonymous_args = 0
 1388              		@ link register save eliminated.
 361:main.c        **** 
 362:main.c        ****   	RCC->APB1ENR |= RCC_APB1ENR_USART3EN;  // enable USART3 clock
 1389              		.loc 1 362 4 view .LVU349
 1390              		.loc 1 362 17 is_stmt 0 view .LVU350
 1391 0000 274B     		ldr	r3, .L120
 1392 0002 1A6C     		ldr	r2, [r3, #64]
 1393 0004 42F48022 		orr	r2, r2, #262144
 1394 0008 1A64     		str	r2, [r3, #64]
 363:main.c        ****   	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;  // enable GPIOB clock
 1395              		.loc 1 363 4 is_stmt 1 view .LVU351
 1396              		.loc 1 363 17 is_stmt 0 view .LVU352
 1397 000a 1A6B     		ldr	r2, [r3, #48]
 1398 000c 42F00202 		orr	r2, r2, #2
 1399 0010 1A63     		str	r2, [r3, #48]
 364:main.c        **** 
 365:main.c        ****   	GPIOB->MODER &= ~(GPIO_MODER_MODER11_Msk);
 1400              		.loc 1 365 4 is_stmt 1 view .LVU353
 1401              		.loc 1 365 17 is_stmt 0 view .LVU354
 1402 0012 A3F55053 		sub	r3, r3, #13312
 1403 0016 1A68     		ldr	r2, [r3]
 1404 0018 22F44002 		bic	r2, r2, #12582912
 1405 001c 1A60     		str	r2, [r3]
 366:main.c        ****   	GPIOB->MODER |=  GPIO_MODER_MODER11_1; //set PB11 to alternate mode (USART3_TX pin)
 1406              		.loc 1 366 4 is_stmt 1 view .LVU355
 1407              		.loc 1 366 17 is_stmt 0 view .LVU356
 1408 001e 1A68     		ldr	r2, [r3]
 1409 0020 42F40002 		orr	r2, r2, #8388608
 1410 0024 1A60     		str	r2, [r3]
 367:main.c        ****   	GPIOB->MODER &= ~(GPIO_MODER_MODER10_Msk);
 1411              		.loc 1 367 4 is_stmt 1 view .LVU357
 1412              		.loc 1 367 17 is_stmt 0 view .LVU358
 1413 0026 1A68     		ldr	r2, [r3]
 1414 0028 22F44012 		bic	r2, r2, #3145728
 1415 002c 1A60     		str	r2, [r3]
 368:main.c        ****   	GPIOB->MODER |=  GPIO_MODER_MODER10_1; //set PB10 to alternate mode (USART3_RX pin)
 1416              		.loc 1 368 4 is_stmt 1 view .LVU359
 1417              		.loc 1 368 17 is_stmt 0 view .LVU360
 1418 002e 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccyJgjqn.s 			page 34


 1419 0030 42F40012 		orr	r2, r2, #2097152
 1420 0034 1A60     		str	r2, [r3]
 369:main.c        **** 
 370:main.c        **** 	GPIOB->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED11_Msk|GPIO_OSPEEDR_OSPEED10_Msk);
 1421              		.loc 1 370 2 is_stmt 1 view .LVU361
 1422              		.loc 1 370 17 is_stmt 0 view .LVU362
 1423 0036 9A68     		ldr	r2, [r3, #8]
 1424 0038 22F47002 		bic	r2, r2, #15728640
 1425 003c 9A60     		str	r2, [r3, #8]
 371:main.c        ****   	GPIOB->OSPEEDR |= (GPIO_OSPEEDR_OSPEED11_1|GPIO_OSPEEDR_OSPEED10_1); // Set USART6_TX and USART6
 1426              		.loc 1 371 4 is_stmt 1 view .LVU363
 1427              		.loc 1 371 19 is_stmt 0 view .LVU364
 1428 003e 9A68     		ldr	r2, [r3, #8]
 1429 0040 42F42002 		orr	r2, r2, #10485760
 1430 0044 9A60     		str	r2, [r3, #8]
 372:main.c        **** 
 373:main.c        **** 	GPIOB->AFR[1] &= ~(GPIO_AFRH_AFSEL10_Msk|GPIO_AFRH_AFSEL11_Msk);
 1431              		.loc 1 373 2 is_stmt 1 view .LVU365
 1432              		.loc 1 373 16 is_stmt 0 view .LVU366
 1433 0046 5A6A     		ldr	r2, [r3, #36]
 1434 0048 22F47F42 		bic	r2, r2, #65280
 1435 004c 5A62     		str	r2, [r3, #36]
 374:main.c        ****   	GPIOB->AFR[1] |= (GPIO_AFRH_AFSEL10_2|GPIO_AFRH_AFSEL10_1|GPIO_AFRH_AFSEL10_0); // assign altern
 1436              		.loc 1 374 4 is_stmt 1 view .LVU367
 1437              		.loc 1 374 18 is_stmt 0 view .LVU368
 1438 004e 5A6A     		ldr	r2, [r3, #36]
 1439 0050 42F4E062 		orr	r2, r2, #1792
 1440 0054 5A62     		str	r2, [r3, #36]
 375:main.c        ****   	GPIOB->AFR[1] |= (GPIO_AFRH_AFSEL11_2|GPIO_AFRH_AFSEL11_1|GPIO_AFRH_AFSEL11_0); // assign altern
 1441              		.loc 1 375 4 is_stmt 1 view .LVU369
 1442              		.loc 1 375 18 is_stmt 0 view .LVU370
 1443 0056 5A6A     		ldr	r2, [r3, #36]
 1444 0058 42F4E042 		orr	r2, r2, #28672
 1445 005c 5A62     		str	r2, [r3, #36]
 376:main.c        **** 
 377:main.c        ****     USART3->BRR = 0;
 1446              		.loc 1 377 5 is_stmt 1 view .LVU371
 1447              		.loc 1 377 17 is_stmt 0 view .LVU372
 1448 005e A3F5DE33 		sub	r3, r3, #113664
 1449 0062 0022     		movs	r2, #0
 1450 0064 9A60     		str	r2, [r3, #8]
 378:main.c        ****     USART3->BRR |= (24 << 4); // set BRR (frequency = 45 MHZ), BRR = frk/(baudrate * 16) = 45 * 10^
 1451              		.loc 1 378 5 is_stmt 1 view .LVU373
 1452              		.loc 1 378 17 is_stmt 0 view .LVU374
 1453 0066 9A68     		ldr	r2, [r3, #8]
 1454 0068 42F4C072 		orr	r2, r2, #384
 1455 006c 9A60     		str	r2, [r3, #8]
 379:main.c        ****     USART3->BRR |= 8;
 1456              		.loc 1 379 5 is_stmt 1 view .LVU375
 1457              		.loc 1 379 17 is_stmt 0 view .LVU376
 1458 006e 9A68     		ldr	r2, [r3, #8]
 1459 0070 42F00802 		orr	r2, r2, #8
 1460 0074 9A60     		str	r2, [r3, #8]
 380:main.c        **** 
 381:main.c        **** 	USART3->CR1 |= USART_CR1_RXNEIE; //enable rx interrupts
 1461              		.loc 1 381 2 is_stmt 1 view .LVU377
 1462              		.loc 1 381 14 is_stmt 0 view .LVU378
ARM GAS  /tmp/ccyJgjqn.s 			page 35


 1463 0076 DA68     		ldr	r2, [r3, #12]
 1464 0078 42F02002 		orr	r2, r2, #32
 1465 007c DA60     		str	r2, [r3, #12]
 382:main.c        **** 
 383:main.c        **** 	NVIC_EnableIRQ(USART3_IRQn);
 1466              		.loc 1 383 2 is_stmt 1 view .LVU379
 1467              	.LVL121:
 1468              	.LBB17:
 1469              	.LBI17:
 1470              		.file 2 "../CMSIS/Include/core_cm4.h"
   1:../CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:../CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:../CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../CMSIS/Include/core_cm4.h ****  * @version  V5.0.8
   5:../CMSIS/Include/core_cm4.h ****  * @date     04. June 2018
   6:../CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:../CMSIS/Include/core_cm4.h **** /*
   8:../CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../CMSIS/Include/core_cm4.h ****  *
  10:../CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../CMSIS/Include/core_cm4.h ****  *
  12:../CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:../CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:../CMSIS/Include/core_cm4.h ****  *
  16:../CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../CMSIS/Include/core_cm4.h ****  *
  18:../CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:../CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:../CMSIS/Include/core_cm4.h ****  */
  24:../CMSIS/Include/core_cm4.h **** 
  25:../CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:../CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:../CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../CMSIS/Include/core_cm4.h **** #endif
  30:../CMSIS/Include/core_cm4.h **** 
  31:../CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../CMSIS/Include/core_cm4.h **** 
  34:../CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:../CMSIS/Include/core_cm4.h **** 
  36:../CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:../CMSIS/Include/core_cm4.h ****  extern "C" {
  38:../CMSIS/Include/core_cm4.h **** #endif
  39:../CMSIS/Include/core_cm4.h **** 
  40:../CMSIS/Include/core_cm4.h **** /**
  41:../CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../CMSIS/Include/core_cm4.h **** 
  44:../CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../CMSIS/Include/core_cm4.h **** 
  47:../CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
ARM GAS  /tmp/ccyJgjqn.s 			page 36


  48:../CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:../CMSIS/Include/core_cm4.h **** 
  50:../CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:../CMSIS/Include/core_cm4.h ****  */
  53:../CMSIS/Include/core_cm4.h **** 
  54:../CMSIS/Include/core_cm4.h **** 
  55:../CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:../CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:../CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:../CMSIS/Include/core_cm4.h **** /**
  59:../CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:../CMSIS/Include/core_cm4.h ****   @{
  61:../CMSIS/Include/core_cm4.h ****  */
  62:../CMSIS/Include/core_cm4.h **** 
  63:../CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:../CMSIS/Include/core_cm4.h **** 
  65:../CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:../CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:../CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:../CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:../CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:../CMSIS/Include/core_cm4.h **** 
  71:../CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:../CMSIS/Include/core_cm4.h **** 
  73:../CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:../CMSIS/Include/core_cm4.h **** */
  76:../CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:../CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:../CMSIS/Include/core_cm4.h ****     #else
  81:../CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:../CMSIS/Include/core_cm4.h ****     #endif
  84:../CMSIS/Include/core_cm4.h ****   #else
  85:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:../CMSIS/Include/core_cm4.h ****   #endif
  87:../CMSIS/Include/core_cm4.h **** 
  88:../CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:../CMSIS/Include/core_cm4.h ****   #if defined __ARM_PCS_VFP
  90:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:../CMSIS/Include/core_cm4.h ****     #else
  93:../CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:../CMSIS/Include/core_cm4.h ****     #endif
  96:../CMSIS/Include/core_cm4.h ****   #else
  97:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:../CMSIS/Include/core_cm4.h ****   #endif
  99:../CMSIS/Include/core_cm4.h **** 
 100:../CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:../CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:../CMSIS/Include/core_cm4.h ****     #else
ARM GAS  /tmp/ccyJgjqn.s 			page 37


 105:../CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:../CMSIS/Include/core_cm4.h ****     #endif
 108:../CMSIS/Include/core_cm4.h ****   #else
 109:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:../CMSIS/Include/core_cm4.h ****   #endif
 111:../CMSIS/Include/core_cm4.h **** 
 112:../CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:../CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:../CMSIS/Include/core_cm4.h ****     #else
 117:../CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:../CMSIS/Include/core_cm4.h ****     #endif
 120:../CMSIS/Include/core_cm4.h ****   #else
 121:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:../CMSIS/Include/core_cm4.h ****   #endif
 123:../CMSIS/Include/core_cm4.h **** 
 124:../CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:../CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:../CMSIS/Include/core_cm4.h ****     #else
 129:../CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:../CMSIS/Include/core_cm4.h ****     #endif
 132:../CMSIS/Include/core_cm4.h ****   #else
 133:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:../CMSIS/Include/core_cm4.h ****   #endif
 135:../CMSIS/Include/core_cm4.h **** 
 136:../CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:../CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:../CMSIS/Include/core_cm4.h ****     #else
 141:../CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:../CMSIS/Include/core_cm4.h ****     #endif
 144:../CMSIS/Include/core_cm4.h ****   #else
 145:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:../CMSIS/Include/core_cm4.h ****   #endif
 147:../CMSIS/Include/core_cm4.h **** 
 148:../CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:../CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:../CMSIS/Include/core_cm4.h ****     #else
 153:../CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:../CMSIS/Include/core_cm4.h ****     #endif
 156:../CMSIS/Include/core_cm4.h ****   #else
 157:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:../CMSIS/Include/core_cm4.h ****   #endif
 159:../CMSIS/Include/core_cm4.h **** 
 160:../CMSIS/Include/core_cm4.h **** #endif
 161:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyJgjqn.s 			page 38


 162:../CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:../CMSIS/Include/core_cm4.h **** 
 164:../CMSIS/Include/core_cm4.h **** 
 165:../CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:../CMSIS/Include/core_cm4.h **** }
 167:../CMSIS/Include/core_cm4.h **** #endif
 168:../CMSIS/Include/core_cm4.h **** 
 169:../CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:../CMSIS/Include/core_cm4.h **** 
 171:../CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:../CMSIS/Include/core_cm4.h **** 
 173:../CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:../CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:../CMSIS/Include/core_cm4.h **** 
 176:../CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:../CMSIS/Include/core_cm4.h ****  extern "C" {
 178:../CMSIS/Include/core_cm4.h **** #endif
 179:../CMSIS/Include/core_cm4.h **** 
 180:../CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:../CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:../CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:../CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:../CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:../CMSIS/Include/core_cm4.h ****   #endif
 186:../CMSIS/Include/core_cm4.h **** 
 187:../CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:../CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:../CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:../CMSIS/Include/core_cm4.h ****   #endif
 191:../CMSIS/Include/core_cm4.h **** 
 192:../CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:../CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:../CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:../CMSIS/Include/core_cm4.h ****   #endif
 196:../CMSIS/Include/core_cm4.h **** 
 197:../CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:../CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:../CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:../CMSIS/Include/core_cm4.h ****   #endif
 201:../CMSIS/Include/core_cm4.h **** 
 202:../CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:../CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:../CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:../CMSIS/Include/core_cm4.h ****   #endif
 206:../CMSIS/Include/core_cm4.h **** #endif
 207:../CMSIS/Include/core_cm4.h **** 
 208:../CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:../CMSIS/Include/core_cm4.h **** /**
 210:../CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:../CMSIS/Include/core_cm4.h **** 
 212:../CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:../CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:../CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:../CMSIS/Include/core_cm4.h **** */
 216:../CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:../CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:../CMSIS/Include/core_cm4.h **** #else
ARM GAS  /tmp/ccyJgjqn.s 			page 39


 219:../CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:../CMSIS/Include/core_cm4.h **** #endif
 221:../CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:../CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:../CMSIS/Include/core_cm4.h **** 
 224:../CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 225:../CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:../CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:../CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:../CMSIS/Include/core_cm4.h **** 
 229:../CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:../CMSIS/Include/core_cm4.h **** 
 231:../CMSIS/Include/core_cm4.h **** 
 232:../CMSIS/Include/core_cm4.h **** 
 233:../CMSIS/Include/core_cm4.h **** /*******************************************************************************
 234:../CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 235:../CMSIS/Include/core_cm4.h ****   Core Register contain:
 236:../CMSIS/Include/core_cm4.h ****   - Core Register
 237:../CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 238:../CMSIS/Include/core_cm4.h ****   - Core SCB Register
 239:../CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 240:../CMSIS/Include/core_cm4.h ****   - Core Debug Register
 241:../CMSIS/Include/core_cm4.h ****   - Core MPU Register
 242:../CMSIS/Include/core_cm4.h ****   - Core FPU Register
 243:../CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 244:../CMSIS/Include/core_cm4.h **** /**
 245:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:../CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:../CMSIS/Include/core_cm4.h **** */
 248:../CMSIS/Include/core_cm4.h **** 
 249:../CMSIS/Include/core_cm4.h **** /**
 250:../CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:../CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:../CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 253:../CMSIS/Include/core_cm4.h ****   @{
 254:../CMSIS/Include/core_cm4.h ****  */
 255:../CMSIS/Include/core_cm4.h **** 
 256:../CMSIS/Include/core_cm4.h **** /**
 257:../CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:../CMSIS/Include/core_cm4.h ****  */
 259:../CMSIS/Include/core_cm4.h **** typedef union
 260:../CMSIS/Include/core_cm4.h **** {
 261:../CMSIS/Include/core_cm4.h ****   struct
 262:../CMSIS/Include/core_cm4.h ****   {
 263:../CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:../CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:../CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:../CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:../CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:../CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:../CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:../CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:../CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:../CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:../CMSIS/Include/core_cm4.h **** } APSR_Type;
 274:../CMSIS/Include/core_cm4.h **** 
 275:../CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
ARM GAS  /tmp/ccyJgjqn.s 			page 40


 276:../CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:../CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:../CMSIS/Include/core_cm4.h **** 
 279:../CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:../CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:../CMSIS/Include/core_cm4.h **** 
 282:../CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:../CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:../CMSIS/Include/core_cm4.h **** 
 285:../CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:../CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:../CMSIS/Include/core_cm4.h **** 
 288:../CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:../CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:../CMSIS/Include/core_cm4.h **** 
 291:../CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:../CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:../CMSIS/Include/core_cm4.h **** 
 294:../CMSIS/Include/core_cm4.h **** 
 295:../CMSIS/Include/core_cm4.h **** /**
 296:../CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:../CMSIS/Include/core_cm4.h ****  */
 298:../CMSIS/Include/core_cm4.h **** typedef union
 299:../CMSIS/Include/core_cm4.h **** {
 300:../CMSIS/Include/core_cm4.h ****   struct
 301:../CMSIS/Include/core_cm4.h ****   {
 302:../CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:../CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:../CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../CMSIS/Include/core_cm4.h **** } IPSR_Type;
 307:../CMSIS/Include/core_cm4.h **** 
 308:../CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 309:../CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:../CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:../CMSIS/Include/core_cm4.h **** 
 312:../CMSIS/Include/core_cm4.h **** 
 313:../CMSIS/Include/core_cm4.h **** /**
 314:../CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:../CMSIS/Include/core_cm4.h ****  */
 316:../CMSIS/Include/core_cm4.h **** typedef union
 317:../CMSIS/Include/core_cm4.h **** {
 318:../CMSIS/Include/core_cm4.h ****   struct
 319:../CMSIS/Include/core_cm4.h ****   {
 320:../CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:../CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:../CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:../CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:../CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:../CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:../CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:../CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:../CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:../CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:../CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:../CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:../CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
ARM GAS  /tmp/ccyJgjqn.s 			page 41


 333:../CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:../CMSIS/Include/core_cm4.h **** } xPSR_Type;
 335:../CMSIS/Include/core_cm4.h **** 
 336:../CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 337:../CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:../CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:../CMSIS/Include/core_cm4.h **** 
 340:../CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:../CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:../CMSIS/Include/core_cm4.h **** 
 343:../CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:../CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:../CMSIS/Include/core_cm4.h **** 
 346:../CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:../CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:../CMSIS/Include/core_cm4.h **** 
 349:../CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:../CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:../CMSIS/Include/core_cm4.h **** 
 352:../CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:../CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:../CMSIS/Include/core_cm4.h **** 
 355:../CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:../CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:../CMSIS/Include/core_cm4.h **** 
 358:../CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:../CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:../CMSIS/Include/core_cm4.h **** 
 361:../CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:../CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:../CMSIS/Include/core_cm4.h **** 
 364:../CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:../CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:../CMSIS/Include/core_cm4.h **** 
 367:../CMSIS/Include/core_cm4.h **** 
 368:../CMSIS/Include/core_cm4.h **** /**
 369:../CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:../CMSIS/Include/core_cm4.h ****  */
 371:../CMSIS/Include/core_cm4.h **** typedef union
 372:../CMSIS/Include/core_cm4.h **** {
 373:../CMSIS/Include/core_cm4.h ****   struct
 374:../CMSIS/Include/core_cm4.h ****   {
 375:../CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:../CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:../CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:../CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:../CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:../CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:../CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 382:../CMSIS/Include/core_cm4.h **** 
 383:../CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 384:../CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:../CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:../CMSIS/Include/core_cm4.h **** 
 387:../CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:../CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyJgjqn.s 			page 42


 390:../CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:../CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:../CMSIS/Include/core_cm4.h **** 
 393:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:../CMSIS/Include/core_cm4.h **** 
 395:../CMSIS/Include/core_cm4.h **** 
 396:../CMSIS/Include/core_cm4.h **** /**
 397:../CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:../CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:../CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:../CMSIS/Include/core_cm4.h ****   @{
 401:../CMSIS/Include/core_cm4.h ****  */
 402:../CMSIS/Include/core_cm4.h **** 
 403:../CMSIS/Include/core_cm4.h **** /**
 404:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:../CMSIS/Include/core_cm4.h ****  */
 406:../CMSIS/Include/core_cm4.h **** typedef struct
 407:../CMSIS/Include/core_cm4.h **** {
 408:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:../CMSIS/Include/core_cm4.h ****         uint32_t RSERVED1[24U];
 412:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:../CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:../CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:../CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 422:../CMSIS/Include/core_cm4.h **** 
 423:../CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:../CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:../CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:../CMSIS/Include/core_cm4.h **** 
 427:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:../CMSIS/Include/core_cm4.h **** 
 429:../CMSIS/Include/core_cm4.h **** 
 430:../CMSIS/Include/core_cm4.h **** /**
 431:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:../CMSIS/Include/core_cm4.h ****   @{
 435:../CMSIS/Include/core_cm4.h ****  */
 436:../CMSIS/Include/core_cm4.h **** 
 437:../CMSIS/Include/core_cm4.h **** /**
 438:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:../CMSIS/Include/core_cm4.h ****  */
 440:../CMSIS/Include/core_cm4.h **** typedef struct
 441:../CMSIS/Include/core_cm4.h **** {
 442:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
ARM GAS  /tmp/ccyJgjqn.s 			page 43


 447:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:../CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:../CMSIS/Include/core_cm4.h **** } SCB_Type;
 464:../CMSIS/Include/core_cm4.h **** 
 465:../CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:../CMSIS/Include/core_cm4.h **** 
 469:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:../CMSIS/Include/core_cm4.h **** 
 472:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:../CMSIS/Include/core_cm4.h **** 
 475:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:../CMSIS/Include/core_cm4.h **** 
 478:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:../CMSIS/Include/core_cm4.h **** 
 481:../CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:../CMSIS/Include/core_cm4.h **** 
 485:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:../CMSIS/Include/core_cm4.h **** 
 488:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:../CMSIS/Include/core_cm4.h **** 
 491:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:../CMSIS/Include/core_cm4.h **** 
 494:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:../CMSIS/Include/core_cm4.h **** 
 497:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:../CMSIS/Include/core_cm4.h **** 
 500:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:../CMSIS/Include/core_cm4.h **** 
 503:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
ARM GAS  /tmp/ccyJgjqn.s 			page 44


 504:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:../CMSIS/Include/core_cm4.h **** 
 506:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:../CMSIS/Include/core_cm4.h **** 
 509:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:../CMSIS/Include/core_cm4.h **** 
 512:../CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:../CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:../CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:../CMSIS/Include/core_cm4.h **** 
 516:../CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:../CMSIS/Include/core_cm4.h **** 
 520:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:../CMSIS/Include/core_cm4.h **** 
 523:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:../CMSIS/Include/core_cm4.h **** 
 526:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:../CMSIS/Include/core_cm4.h **** 
 529:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:../CMSIS/Include/core_cm4.h **** 
 532:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:../CMSIS/Include/core_cm4.h **** 
 535:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:../CMSIS/Include/core_cm4.h **** 
 538:../CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:../CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:../CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:../CMSIS/Include/core_cm4.h **** 
 542:../CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:../CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:../CMSIS/Include/core_cm4.h **** 
 545:../CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:../CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:../CMSIS/Include/core_cm4.h **** 
 548:../CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:../CMSIS/Include/core_cm4.h **** 
 552:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:../CMSIS/Include/core_cm4.h **** 
 555:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:../CMSIS/Include/core_cm4.h **** 
 558:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyJgjqn.s 			page 45


 561:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:../CMSIS/Include/core_cm4.h **** 
 564:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:../CMSIS/Include/core_cm4.h **** 
 567:../CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:../CMSIS/Include/core_cm4.h **** 
 571:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:../CMSIS/Include/core_cm4.h **** 
 574:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:../CMSIS/Include/core_cm4.h **** 
 577:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:../CMSIS/Include/core_cm4.h **** 
 580:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:../CMSIS/Include/core_cm4.h **** 
 583:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:../CMSIS/Include/core_cm4.h **** 
 586:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:../CMSIS/Include/core_cm4.h **** 
 589:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:../CMSIS/Include/core_cm4.h **** 
 592:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:../CMSIS/Include/core_cm4.h **** 
 595:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:../CMSIS/Include/core_cm4.h **** 
 598:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:../CMSIS/Include/core_cm4.h **** 
 601:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:../CMSIS/Include/core_cm4.h **** 
 604:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:../CMSIS/Include/core_cm4.h **** 
 607:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:../CMSIS/Include/core_cm4.h **** 
 610:../CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:../CMSIS/Include/core_cm4.h **** 
 614:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:../CMSIS/Include/core_cm4.h **** 
 617:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
ARM GAS  /tmp/ccyJgjqn.s 			page 46


 618:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:../CMSIS/Include/core_cm4.h **** 
 620:../CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:../CMSIS/Include/core_cm4.h **** 
 624:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:../CMSIS/Include/core_cm4.h **** 
 627:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:../CMSIS/Include/core_cm4.h **** 
 630:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:../CMSIS/Include/core_cm4.h **** 
 633:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:../CMSIS/Include/core_cm4.h **** 
 636:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:../CMSIS/Include/core_cm4.h **** 
 639:../CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:../CMSIS/Include/core_cm4.h **** 
 643:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:../CMSIS/Include/core_cm4.h **** 
 646:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:../CMSIS/Include/core_cm4.h **** 
 649:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:../CMSIS/Include/core_cm4.h **** 
 652:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:../CMSIS/Include/core_cm4.h **** 
 655:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:../CMSIS/Include/core_cm4.h **** 
 658:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:../CMSIS/Include/core_cm4.h **** 
 661:../CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:../CMSIS/Include/core_cm4.h **** 
 665:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:../CMSIS/Include/core_cm4.h **** 
 668:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:../CMSIS/Include/core_cm4.h **** 
 671:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:../CMSIS/Include/core_cm4.h **** 
 674:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
ARM GAS  /tmp/ccyJgjqn.s 			page 47


 675:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:../CMSIS/Include/core_cm4.h **** 
 677:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:../CMSIS/Include/core_cm4.h **** 
 680:../CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:../CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:../CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:../CMSIS/Include/core_cm4.h **** 
 684:../CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:../CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:../CMSIS/Include/core_cm4.h **** 
 687:../CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:../CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:../CMSIS/Include/core_cm4.h **** 
 690:../CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:../CMSIS/Include/core_cm4.h **** 
 694:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:../CMSIS/Include/core_cm4.h **** 
 697:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:../CMSIS/Include/core_cm4.h **** 
 700:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:../CMSIS/Include/core_cm4.h **** 
 703:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:../CMSIS/Include/core_cm4.h **** 
 706:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:../CMSIS/Include/core_cm4.h **** 
 708:../CMSIS/Include/core_cm4.h **** 
 709:../CMSIS/Include/core_cm4.h **** /**
 710:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:../CMSIS/Include/core_cm4.h ****   @{
 714:../CMSIS/Include/core_cm4.h ****  */
 715:../CMSIS/Include/core_cm4.h **** 
 716:../CMSIS/Include/core_cm4.h **** /**
 717:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:../CMSIS/Include/core_cm4.h ****  */
 719:../CMSIS/Include/core_cm4.h **** typedef struct
 720:../CMSIS/Include/core_cm4.h **** {
 721:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:../CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 725:../CMSIS/Include/core_cm4.h **** 
 726:../CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:../CMSIS/Include/core_cm4.h **** 
 730:../CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
ARM GAS  /tmp/ccyJgjqn.s 			page 48


 732:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:../CMSIS/Include/core_cm4.h **** 
 734:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:../CMSIS/Include/core_cm4.h **** 
 737:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:../CMSIS/Include/core_cm4.h **** 
 740:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:../CMSIS/Include/core_cm4.h **** 
 743:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:../CMSIS/Include/core_cm4.h **** 
 746:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:../CMSIS/Include/core_cm4.h **** 
 748:../CMSIS/Include/core_cm4.h **** 
 749:../CMSIS/Include/core_cm4.h **** /**
 750:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:../CMSIS/Include/core_cm4.h ****   @{
 754:../CMSIS/Include/core_cm4.h ****  */
 755:../CMSIS/Include/core_cm4.h **** 
 756:../CMSIS/Include/core_cm4.h **** /**
 757:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:../CMSIS/Include/core_cm4.h ****  */
 759:../CMSIS/Include/core_cm4.h **** typedef struct
 760:../CMSIS/Include/core_cm4.h **** {
 761:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:../CMSIS/Include/core_cm4.h **** } SysTick_Type;
 766:../CMSIS/Include/core_cm4.h **** 
 767:../CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:../CMSIS/Include/core_cm4.h **** 
 771:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:../CMSIS/Include/core_cm4.h **** 
 774:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:../CMSIS/Include/core_cm4.h **** 
 777:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:../CMSIS/Include/core_cm4.h **** 
 780:../CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:../CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:../CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:../CMSIS/Include/core_cm4.h **** 
 784:../CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:../CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:../CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:../CMSIS/Include/core_cm4.h **** 
 788:../CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
ARM GAS  /tmp/ccyJgjqn.s 			page 49


 789:../CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:../CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:../CMSIS/Include/core_cm4.h **** 
 792:../CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:../CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:../CMSIS/Include/core_cm4.h **** 
 795:../CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:../CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:../CMSIS/Include/core_cm4.h **** 
 798:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:../CMSIS/Include/core_cm4.h **** 
 800:../CMSIS/Include/core_cm4.h **** 
 801:../CMSIS/Include/core_cm4.h **** /**
 802:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:../CMSIS/Include/core_cm4.h ****   @{
 806:../CMSIS/Include/core_cm4.h ****  */
 807:../CMSIS/Include/core_cm4.h **** 
 808:../CMSIS/Include/core_cm4.h **** /**
 809:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:../CMSIS/Include/core_cm4.h ****  */
 811:../CMSIS/Include/core_cm4.h **** typedef struct
 812:../CMSIS/Include/core_cm4.h **** {
 813:../CMSIS/Include/core_cm4.h ****   __OM  union
 814:../CMSIS/Include/core_cm4.h ****   {
 815:../CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:../CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:../CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:../CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[29U];
 826:../CMSIS/Include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 827:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 828:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 829:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 830:../CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 831:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 832:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 833:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 834:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 835:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 836:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 837:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 838:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 839:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 840:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 841:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 842:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 843:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 844:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 845:../CMSIS/Include/core_cm4.h **** } ITM_Type;
ARM GAS  /tmp/ccyJgjqn.s 			page 50


 846:../CMSIS/Include/core_cm4.h **** 
 847:../CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 848:../CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 849:../CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 850:../CMSIS/Include/core_cm4.h **** 
 851:../CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 852:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 853:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 854:../CMSIS/Include/core_cm4.h **** 
 855:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 856:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 857:../CMSIS/Include/core_cm4.h **** 
 858:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 859:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 860:../CMSIS/Include/core_cm4.h **** 
 861:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 862:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 863:../CMSIS/Include/core_cm4.h **** 
 864:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 865:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 866:../CMSIS/Include/core_cm4.h **** 
 867:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 868:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 869:../CMSIS/Include/core_cm4.h **** 
 870:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 871:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 872:../CMSIS/Include/core_cm4.h **** 
 873:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 874:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 875:../CMSIS/Include/core_cm4.h **** 
 876:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 877:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 878:../CMSIS/Include/core_cm4.h **** 
 879:../CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 880:../CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 881:../CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 882:../CMSIS/Include/core_cm4.h **** 
 883:../CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 884:../CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 885:../CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 886:../CMSIS/Include/core_cm4.h **** 
 887:../CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 888:../CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 889:../CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 890:../CMSIS/Include/core_cm4.h **** 
 891:../CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 892:../CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 893:../CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 894:../CMSIS/Include/core_cm4.h **** 
 895:../CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 896:../CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 897:../CMSIS/Include/core_cm4.h **** 
 898:../CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 899:../CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 900:../CMSIS/Include/core_cm4.h **** 
 901:../CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 902:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyJgjqn.s 			page 51


 903:../CMSIS/Include/core_cm4.h **** 
 904:../CMSIS/Include/core_cm4.h **** /**
 905:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 906:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 907:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 908:../CMSIS/Include/core_cm4.h ****   @{
 909:../CMSIS/Include/core_cm4.h ****  */
 910:../CMSIS/Include/core_cm4.h **** 
 911:../CMSIS/Include/core_cm4.h **** /**
 912:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 913:../CMSIS/Include/core_cm4.h ****  */
 914:../CMSIS/Include/core_cm4.h **** typedef struct
 915:../CMSIS/Include/core_cm4.h **** {
 916:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 917:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 918:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 919:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 920:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 921:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 922:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 923:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 924:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 925:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 926:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 927:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 928:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 929:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 930:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 931:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 932:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 933:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 934:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 935:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 936:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 937:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 938:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 939:../CMSIS/Include/core_cm4.h **** } DWT_Type;
 940:../CMSIS/Include/core_cm4.h **** 
 941:../CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 942:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 943:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 944:../CMSIS/Include/core_cm4.h **** 
 945:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 946:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 947:../CMSIS/Include/core_cm4.h **** 
 948:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 949:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 950:../CMSIS/Include/core_cm4.h **** 
 951:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 952:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 953:../CMSIS/Include/core_cm4.h **** 
 954:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 955:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 956:../CMSIS/Include/core_cm4.h **** 
 957:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 958:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 959:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyJgjqn.s 			page 52


 960:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 961:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 962:../CMSIS/Include/core_cm4.h **** 
 963:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 964:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 965:../CMSIS/Include/core_cm4.h **** 
 966:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 967:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 968:../CMSIS/Include/core_cm4.h **** 
 969:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 970:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 971:../CMSIS/Include/core_cm4.h **** 
 972:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 973:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 974:../CMSIS/Include/core_cm4.h **** 
 975:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 976:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 977:../CMSIS/Include/core_cm4.h **** 
 978:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 979:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 980:../CMSIS/Include/core_cm4.h **** 
 981:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 982:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 983:../CMSIS/Include/core_cm4.h **** 
 984:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 985:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 986:../CMSIS/Include/core_cm4.h **** 
 987:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 988:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 989:../CMSIS/Include/core_cm4.h **** 
 990:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 991:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 992:../CMSIS/Include/core_cm4.h **** 
 993:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 994:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 995:../CMSIS/Include/core_cm4.h **** 
 996:../CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 997:../CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 998:../CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 999:../CMSIS/Include/core_cm4.h **** 
1000:../CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
1001:../CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1002:../CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1003:../CMSIS/Include/core_cm4.h **** 
1004:../CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
1005:../CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1006:../CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1007:../CMSIS/Include/core_cm4.h **** 
1008:../CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
1009:../CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1010:../CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1011:../CMSIS/Include/core_cm4.h **** 
1012:../CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1013:../CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1014:../CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1015:../CMSIS/Include/core_cm4.h **** 
1016:../CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
ARM GAS  /tmp/ccyJgjqn.s 			page 53


1017:../CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1018:../CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1019:../CMSIS/Include/core_cm4.h **** 
1020:../CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1021:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1022:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1023:../CMSIS/Include/core_cm4.h **** 
1024:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1025:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1026:../CMSIS/Include/core_cm4.h **** 
1027:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1028:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1029:../CMSIS/Include/core_cm4.h **** 
1030:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1031:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1032:../CMSIS/Include/core_cm4.h **** 
1033:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1034:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1035:../CMSIS/Include/core_cm4.h **** 
1036:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1037:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1038:../CMSIS/Include/core_cm4.h **** 
1039:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1040:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1041:../CMSIS/Include/core_cm4.h **** 
1042:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1043:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1044:../CMSIS/Include/core_cm4.h **** 
1045:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1046:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1047:../CMSIS/Include/core_cm4.h **** 
1048:../CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1049:../CMSIS/Include/core_cm4.h **** 
1050:../CMSIS/Include/core_cm4.h **** 
1051:../CMSIS/Include/core_cm4.h **** /**
1052:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1053:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1054:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1055:../CMSIS/Include/core_cm4.h ****   @{
1056:../CMSIS/Include/core_cm4.h ****  */
1057:../CMSIS/Include/core_cm4.h **** 
1058:../CMSIS/Include/core_cm4.h **** /**
1059:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1060:../CMSIS/Include/core_cm4.h ****  */
1061:../CMSIS/Include/core_cm4.h **** typedef struct
1062:../CMSIS/Include/core_cm4.h **** {
1063:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1064:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1065:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1066:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1067:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1068:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1069:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1070:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1071:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1072:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1073:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
ARM GAS  /tmp/ccyJgjqn.s 			page 54


1074:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1075:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1076:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1077:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1078:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1079:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1080:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1081:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1082:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1083:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1084:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1085:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1086:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1087:../CMSIS/Include/core_cm4.h **** } TPI_Type;
1088:../CMSIS/Include/core_cm4.h **** 
1089:../CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1090:../CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1091:../CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1092:../CMSIS/Include/core_cm4.h **** 
1093:../CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1094:../CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1095:../CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1096:../CMSIS/Include/core_cm4.h **** 
1097:../CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1098:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1099:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1100:../CMSIS/Include/core_cm4.h **** 
1101:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1102:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1103:../CMSIS/Include/core_cm4.h **** 
1104:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1105:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1106:../CMSIS/Include/core_cm4.h **** 
1107:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1108:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1109:../CMSIS/Include/core_cm4.h **** 
1110:../CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1111:../CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1112:../CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1113:../CMSIS/Include/core_cm4.h **** 
1114:../CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1115:../CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1116:../CMSIS/Include/core_cm4.h **** 
1117:../CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1118:../CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1119:../CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1120:../CMSIS/Include/core_cm4.h **** 
1121:../CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1122:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1123:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1124:../CMSIS/Include/core_cm4.h **** 
1125:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1126:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1127:../CMSIS/Include/core_cm4.h **** 
1128:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1129:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1130:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyJgjqn.s 			page 55


1131:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1132:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1133:../CMSIS/Include/core_cm4.h **** 
1134:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1135:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1136:../CMSIS/Include/core_cm4.h **** 
1137:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1138:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1139:../CMSIS/Include/core_cm4.h **** 
1140:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1141:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1142:../CMSIS/Include/core_cm4.h **** 
1143:../CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1144:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1145:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1146:../CMSIS/Include/core_cm4.h **** 
1147:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1148:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1149:../CMSIS/Include/core_cm4.h **** 
1150:../CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1151:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1152:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1153:../CMSIS/Include/core_cm4.h **** 
1154:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1155:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1156:../CMSIS/Include/core_cm4.h **** 
1157:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1158:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1159:../CMSIS/Include/core_cm4.h **** 
1160:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1161:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1162:../CMSIS/Include/core_cm4.h **** 
1163:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1164:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1165:../CMSIS/Include/core_cm4.h **** 
1166:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1167:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1168:../CMSIS/Include/core_cm4.h **** 
1169:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1170:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1171:../CMSIS/Include/core_cm4.h **** 
1172:../CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1173:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1174:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1175:../CMSIS/Include/core_cm4.h **** 
1176:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1177:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1178:../CMSIS/Include/core_cm4.h **** 
1179:../CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1180:../CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1181:../CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1182:../CMSIS/Include/core_cm4.h **** 
1183:../CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1184:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1185:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1186:../CMSIS/Include/core_cm4.h **** 
1187:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
ARM GAS  /tmp/ccyJgjqn.s 			page 56


1188:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1189:../CMSIS/Include/core_cm4.h **** 
1190:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1191:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1192:../CMSIS/Include/core_cm4.h **** 
1193:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1194:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1195:../CMSIS/Include/core_cm4.h **** 
1196:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1197:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1198:../CMSIS/Include/core_cm4.h **** 
1199:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1200:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1201:../CMSIS/Include/core_cm4.h **** 
1202:../CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1203:../CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1204:../CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1205:../CMSIS/Include/core_cm4.h **** 
1206:../CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1207:../CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1208:../CMSIS/Include/core_cm4.h **** 
1209:../CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1210:../CMSIS/Include/core_cm4.h **** 
1211:../CMSIS/Include/core_cm4.h **** 
1212:../CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1213:../CMSIS/Include/core_cm4.h **** /**
1214:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1215:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1216:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1217:../CMSIS/Include/core_cm4.h ****   @{
1218:../CMSIS/Include/core_cm4.h ****  */
1219:../CMSIS/Include/core_cm4.h **** 
1220:../CMSIS/Include/core_cm4.h **** /**
1221:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1222:../CMSIS/Include/core_cm4.h ****  */
1223:../CMSIS/Include/core_cm4.h **** typedef struct
1224:../CMSIS/Include/core_cm4.h **** {
1225:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1226:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1227:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1228:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1229:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1230:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1231:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1232:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1233:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1234:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1235:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1236:../CMSIS/Include/core_cm4.h **** } MPU_Type;
1237:../CMSIS/Include/core_cm4.h **** 
1238:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1239:../CMSIS/Include/core_cm4.h **** 
1240:../CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1241:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1242:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1243:../CMSIS/Include/core_cm4.h **** 
1244:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
ARM GAS  /tmp/ccyJgjqn.s 			page 57


1245:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1246:../CMSIS/Include/core_cm4.h **** 
1247:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1248:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1249:../CMSIS/Include/core_cm4.h **** 
1250:../CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1251:../CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1252:../CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1253:../CMSIS/Include/core_cm4.h **** 
1254:../CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1255:../CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1256:../CMSIS/Include/core_cm4.h **** 
1257:../CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1258:../CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1259:../CMSIS/Include/core_cm4.h **** 
1260:../CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1261:../CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1262:../CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1263:../CMSIS/Include/core_cm4.h **** 
1264:../CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1265:../CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1266:../CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1267:../CMSIS/Include/core_cm4.h **** 
1268:../CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1269:../CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1270:../CMSIS/Include/core_cm4.h **** 
1271:../CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1272:../CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1273:../CMSIS/Include/core_cm4.h **** 
1274:../CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1275:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1276:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1277:../CMSIS/Include/core_cm4.h **** 
1278:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1279:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1280:../CMSIS/Include/core_cm4.h **** 
1281:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1282:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1283:../CMSIS/Include/core_cm4.h **** 
1284:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1285:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1286:../CMSIS/Include/core_cm4.h **** 
1287:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1288:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1289:../CMSIS/Include/core_cm4.h **** 
1290:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1291:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1292:../CMSIS/Include/core_cm4.h **** 
1293:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1294:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1295:../CMSIS/Include/core_cm4.h **** 
1296:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1297:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1298:../CMSIS/Include/core_cm4.h **** 
1299:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1300:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1301:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyJgjqn.s 			page 58


1302:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1303:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1304:../CMSIS/Include/core_cm4.h **** 
1305:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1306:../CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1307:../CMSIS/Include/core_cm4.h **** 
1308:../CMSIS/Include/core_cm4.h **** 
1309:../CMSIS/Include/core_cm4.h **** /**
1310:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1311:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1312:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1313:../CMSIS/Include/core_cm4.h ****   @{
1314:../CMSIS/Include/core_cm4.h ****  */
1315:../CMSIS/Include/core_cm4.h **** 
1316:../CMSIS/Include/core_cm4.h **** /**
1317:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1318:../CMSIS/Include/core_cm4.h ****  */
1319:../CMSIS/Include/core_cm4.h **** typedef struct
1320:../CMSIS/Include/core_cm4.h **** {
1321:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1322:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1323:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1324:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1325:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1326:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1327:../CMSIS/Include/core_cm4.h **** } FPU_Type;
1328:../CMSIS/Include/core_cm4.h **** 
1329:../CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1330:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1331:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1332:../CMSIS/Include/core_cm4.h **** 
1333:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1334:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1335:../CMSIS/Include/core_cm4.h **** 
1336:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1337:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1338:../CMSIS/Include/core_cm4.h **** 
1339:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1340:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1341:../CMSIS/Include/core_cm4.h **** 
1342:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1343:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1344:../CMSIS/Include/core_cm4.h **** 
1345:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1346:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1347:../CMSIS/Include/core_cm4.h **** 
1348:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1349:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1350:../CMSIS/Include/core_cm4.h **** 
1351:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1352:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1353:../CMSIS/Include/core_cm4.h **** 
1354:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1355:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1356:../CMSIS/Include/core_cm4.h **** 
1357:../CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1358:../CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
ARM GAS  /tmp/ccyJgjqn.s 			page 59


1359:../CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1360:../CMSIS/Include/core_cm4.h **** 
1361:../CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1362:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1363:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1364:../CMSIS/Include/core_cm4.h **** 
1365:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1366:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1367:../CMSIS/Include/core_cm4.h **** 
1368:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1369:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1370:../CMSIS/Include/core_cm4.h **** 
1371:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1372:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1373:../CMSIS/Include/core_cm4.h **** 
1374:../CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1375:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1376:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1377:../CMSIS/Include/core_cm4.h **** 
1378:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1379:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1380:../CMSIS/Include/core_cm4.h **** 
1381:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1382:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1383:../CMSIS/Include/core_cm4.h **** 
1384:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1385:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1386:../CMSIS/Include/core_cm4.h **** 
1387:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1388:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1389:../CMSIS/Include/core_cm4.h **** 
1390:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1391:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1392:../CMSIS/Include/core_cm4.h **** 
1393:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1394:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1395:../CMSIS/Include/core_cm4.h **** 
1396:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1397:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1398:../CMSIS/Include/core_cm4.h **** 
1399:../CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1400:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1401:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1402:../CMSIS/Include/core_cm4.h **** 
1403:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1404:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1405:../CMSIS/Include/core_cm4.h **** 
1406:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1407:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1408:../CMSIS/Include/core_cm4.h **** 
1409:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1410:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1411:../CMSIS/Include/core_cm4.h **** 
1412:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1413:../CMSIS/Include/core_cm4.h **** 
1414:../CMSIS/Include/core_cm4.h **** 
1415:../CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccyJgjqn.s 			page 60


1416:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1417:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1418:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1419:../CMSIS/Include/core_cm4.h ****   @{
1420:../CMSIS/Include/core_cm4.h ****  */
1421:../CMSIS/Include/core_cm4.h **** 
1422:../CMSIS/Include/core_cm4.h **** /**
1423:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1424:../CMSIS/Include/core_cm4.h ****  */
1425:../CMSIS/Include/core_cm4.h **** typedef struct
1426:../CMSIS/Include/core_cm4.h **** {
1427:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1428:../CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1429:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1430:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1431:../CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1432:../CMSIS/Include/core_cm4.h **** 
1433:../CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1434:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1435:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1436:../CMSIS/Include/core_cm4.h **** 
1437:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1438:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1439:../CMSIS/Include/core_cm4.h **** 
1440:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1441:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1442:../CMSIS/Include/core_cm4.h **** 
1443:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1444:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1445:../CMSIS/Include/core_cm4.h **** 
1446:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1447:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1448:../CMSIS/Include/core_cm4.h **** 
1449:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1450:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1451:../CMSIS/Include/core_cm4.h **** 
1452:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1453:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1454:../CMSIS/Include/core_cm4.h **** 
1455:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1456:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1457:../CMSIS/Include/core_cm4.h **** 
1458:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1459:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1460:../CMSIS/Include/core_cm4.h **** 
1461:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1462:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1463:../CMSIS/Include/core_cm4.h **** 
1464:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1465:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1466:../CMSIS/Include/core_cm4.h **** 
1467:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1468:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1469:../CMSIS/Include/core_cm4.h **** 
1470:../CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1471:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1472:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
ARM GAS  /tmp/ccyJgjqn.s 			page 61


1473:../CMSIS/Include/core_cm4.h **** 
1474:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1475:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1476:../CMSIS/Include/core_cm4.h **** 
1477:../CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1478:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1479:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1480:../CMSIS/Include/core_cm4.h **** 
1481:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1482:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1483:../CMSIS/Include/core_cm4.h **** 
1484:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1485:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1486:../CMSIS/Include/core_cm4.h **** 
1487:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1488:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1489:../CMSIS/Include/core_cm4.h **** 
1490:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1491:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1492:../CMSIS/Include/core_cm4.h **** 
1493:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1494:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1495:../CMSIS/Include/core_cm4.h **** 
1496:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1497:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1498:../CMSIS/Include/core_cm4.h **** 
1499:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1500:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1501:../CMSIS/Include/core_cm4.h **** 
1502:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1503:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1504:../CMSIS/Include/core_cm4.h **** 
1505:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1506:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1507:../CMSIS/Include/core_cm4.h **** 
1508:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1509:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1510:../CMSIS/Include/core_cm4.h **** 
1511:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1512:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1513:../CMSIS/Include/core_cm4.h **** 
1514:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1515:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1516:../CMSIS/Include/core_cm4.h **** 
1517:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1518:../CMSIS/Include/core_cm4.h **** 
1519:../CMSIS/Include/core_cm4.h **** 
1520:../CMSIS/Include/core_cm4.h **** /**
1521:../CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1522:../CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1523:../CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1524:../CMSIS/Include/core_cm4.h ****   @{
1525:../CMSIS/Include/core_cm4.h ****  */
1526:../CMSIS/Include/core_cm4.h **** 
1527:../CMSIS/Include/core_cm4.h **** /**
1528:../CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1529:../CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
ARM GAS  /tmp/ccyJgjqn.s 			page 62


1530:../CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1531:../CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1532:../CMSIS/Include/core_cm4.h **** */
1533:../CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1534:../CMSIS/Include/core_cm4.h **** 
1535:../CMSIS/Include/core_cm4.h **** /**
1536:../CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1537:../CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1538:../CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1539:../CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1540:../CMSIS/Include/core_cm4.h **** */
1541:../CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1542:../CMSIS/Include/core_cm4.h **** 
1543:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1544:../CMSIS/Include/core_cm4.h **** 
1545:../CMSIS/Include/core_cm4.h **** 
1546:../CMSIS/Include/core_cm4.h **** /**
1547:../CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1548:../CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1549:../CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1550:../CMSIS/Include/core_cm4.h ****   @{
1551:../CMSIS/Include/core_cm4.h ****  */
1552:../CMSIS/Include/core_cm4.h **** 
1553:../CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1554:../CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1555:../CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1556:../CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1557:../CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1558:../CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1559:../CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1560:../CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1561:../CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1562:../CMSIS/Include/core_cm4.h **** 
1563:../CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1564:../CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1565:../CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1566:../CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1567:../CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1568:../CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1569:../CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1570:../CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1571:../CMSIS/Include/core_cm4.h **** 
1572:../CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1573:../CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1574:../CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1575:../CMSIS/Include/core_cm4.h **** #endif
1576:../CMSIS/Include/core_cm4.h **** 
1577:../CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1578:../CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1579:../CMSIS/Include/core_cm4.h **** 
1580:../CMSIS/Include/core_cm4.h **** /*@} */
1581:../CMSIS/Include/core_cm4.h **** 
1582:../CMSIS/Include/core_cm4.h **** 
1583:../CMSIS/Include/core_cm4.h **** 
1584:../CMSIS/Include/core_cm4.h **** /*******************************************************************************
1585:../CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1586:../CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
ARM GAS  /tmp/ccyJgjqn.s 			page 63


1587:../CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1588:../CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1589:../CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1590:../CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1591:../CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1592:../CMSIS/Include/core_cm4.h **** /**
1593:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1594:../CMSIS/Include/core_cm4.h **** */
1595:../CMSIS/Include/core_cm4.h **** 
1596:../CMSIS/Include/core_cm4.h **** 
1597:../CMSIS/Include/core_cm4.h **** 
1598:../CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1599:../CMSIS/Include/core_cm4.h **** /**
1600:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1601:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1602:../CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1603:../CMSIS/Include/core_cm4.h ****   @{
1604:../CMSIS/Include/core_cm4.h ****  */
1605:../CMSIS/Include/core_cm4.h **** 
1606:../CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1607:../CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1608:../CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1609:../CMSIS/Include/core_cm4.h ****   #endif
1610:../CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1611:../CMSIS/Include/core_cm4.h **** #else
1612:../CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1613:../CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1614:../CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1615:../CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1616:../CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1617:../CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1618:../CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1619:../CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1620:../CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1621:../CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1622:../CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1623:../CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1624:../CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1625:../CMSIS/Include/core_cm4.h **** 
1626:../CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1627:../CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1628:../CMSIS/Include/core_cm4.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1629:../CMSIS/Include/core_cm4.h ****   #endif
1630:../CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1631:../CMSIS/Include/core_cm4.h **** #else
1632:../CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1633:../CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1634:../CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1635:../CMSIS/Include/core_cm4.h **** 
1636:../CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1637:../CMSIS/Include/core_cm4.h **** 
1638:../CMSIS/Include/core_cm4.h **** 
1639:../CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1640:../CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1641:../CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1642:../CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1643:../CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
ARM GAS  /tmp/ccyJgjqn.s 			page 64


1644:../CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1645:../CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1646:../CMSIS/Include/core_cm4.h **** 
1647:../CMSIS/Include/core_cm4.h **** 
1648:../CMSIS/Include/core_cm4.h **** /**
1649:../CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1650:../CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1651:../CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1652:../CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1653:../CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1654:../CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1655:../CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1656:../CMSIS/Include/core_cm4.h ****  */
1657:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1658:../CMSIS/Include/core_cm4.h **** {
1659:../CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1660:../CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1661:../CMSIS/Include/core_cm4.h **** 
1662:../CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1663:../CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1664:../CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1665:../CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1666:../CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1667:../CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1668:../CMSIS/Include/core_cm4.h **** }
1669:../CMSIS/Include/core_cm4.h **** 
1670:../CMSIS/Include/core_cm4.h **** 
1671:../CMSIS/Include/core_cm4.h **** /**
1672:../CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1673:../CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1674:../CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1675:../CMSIS/Include/core_cm4.h ****  */
1676:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1677:../CMSIS/Include/core_cm4.h **** {
1678:../CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1679:../CMSIS/Include/core_cm4.h **** }
1680:../CMSIS/Include/core_cm4.h **** 
1681:../CMSIS/Include/core_cm4.h **** 
1682:../CMSIS/Include/core_cm4.h **** /**
1683:../CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1684:../CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1685:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1686:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1687:../CMSIS/Include/core_cm4.h ****  */
1688:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 1471              		.loc 2 1688 22 view .LVU380
 1472              	.LBB18:
1689:../CMSIS/Include/core_cm4.h **** {
1690:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 1473              		.loc 2 1690 3 view .LVU381
1691:../CMSIS/Include/core_cm4.h ****   {
1692:../CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 1474              		.loc 2 1692 5 view .LVU382
 1475              		.loc 2 1692 43 is_stmt 0 view .LVU383
 1476 007e 094A     		ldr	r2, .L120+4
 1477 0080 8021     		movs	r1, #128
 1478 0082 5160     		str	r1, [r2, #4]
ARM GAS  /tmp/ccyJgjqn.s 			page 65


 1479              	.LVL122:
 1480              		.loc 2 1692 43 view .LVU384
 1481              	.LBE18:
 1482              	.LBE17:
 384:main.c        **** 
 385:main.c        ****   	USART3->CR1 |= USART_CR1_TE; // enable tx pin
 1483              		.loc 1 385 4 is_stmt 1 view .LVU385
 1484              		.loc 1 385 16 is_stmt 0 view .LVU386
 1485 0084 DA68     		ldr	r2, [r3, #12]
 1486 0086 42F00802 		orr	r2, r2, #8
 1487 008a DA60     		str	r2, [r3, #12]
 386:main.c        ****   	USART3->CR1 |= USART_CR1_RE; // enable rx pin
 1488              		.loc 1 386 4 is_stmt 1 view .LVU387
 1489              		.loc 1 386 16 is_stmt 0 view .LVU388
 1490 008c DA68     		ldr	r2, [r3, #12]
 1491 008e 42F00402 		orr	r2, r2, #4
 1492 0092 DA60     		str	r2, [r3, #12]
 387:main.c        **** 
 388:main.c        ****   	USART3->CR1 |= USART_CR1_UE; //enable usart3
 1493              		.loc 1 388 4 is_stmt 1 view .LVU389
 1494              		.loc 1 388 16 is_stmt 0 view .LVU390
 1495 0094 DA68     		ldr	r2, [r3, #12]
 1496 0096 42F40052 		orr	r2, r2, #8192
 1497 009a DA60     		str	r2, [r3, #12]
 389:main.c        **** 
 390:main.c        **** }
 1498              		.loc 1 390 1 view .LVU391
 1499 009c 7047     		bx	lr
 1500              	.L121:
 1501 009e 00BF     		.align	2
 1502              	.L120:
 1503 00a0 00380240 		.word	1073887232
 1504 00a4 00E100E0 		.word	-536813312
 1505              		.cfi_endproc
 1506              	.LFE146:
 1508              		.section	.text.SPI2Init,"ax",%progbits
 1509              		.align	1
 1510              		.global	SPI2Init
 1511              		.syntax unified
 1512              		.thumb
 1513              		.thumb_func
 1514              		.fpu fpv4-sp-d16
 1516              	SPI2Init:
 1517              	.LFB147:
 391:main.c        **** 
 392:main.c        **** void SPI2Init() {
 1518              		.loc 1 392 17 is_stmt 1 view -0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              		@ link register save eliminated.
 393:main.c        **** 
 394:main.c        ****     RCC->APB1ENR |= RCC_APB1ENR_SPI2EN;
 1523              		.loc 1 394 5 view .LVU393
 1524              		.loc 1 394 18 is_stmt 0 view .LVU394
 1525 0000 404B     		ldr	r3, .L123
 1526 0002 1A6C     		ldr	r2, [r3, #64]
ARM GAS  /tmp/ccyJgjqn.s 			page 66


 1527 0004 42F48042 		orr	r2, r2, #16384
 1528 0008 1A64     		str	r2, [r3, #64]
 395:main.c        **** 
 396:main.c        ****     RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 1529              		.loc 1 396 5 is_stmt 1 view .LVU395
 1530              		.loc 1 396 18 is_stmt 0 view .LVU396
 1531 000a 1A6B     		ldr	r2, [r3, #48]
 1532 000c 42F00202 		orr	r2, r2, #2
 1533 0010 1A63     		str	r2, [r3, #48]
 397:main.c        ****     RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 1534              		.loc 1 397 5 is_stmt 1 view .LVU397
 1535              		.loc 1 397 18 is_stmt 0 view .LVU398
 1536 0012 1A6B     		ldr	r2, [r3, #48]
 1537 0014 42F00802 		orr	r2, r2, #8
 1538 0018 1A63     		str	r2, [r3, #48]
 398:main.c        **** 
 399:main.c        ****     //gpio config
 400:main.c        ****     GPIOB->MODER &= ~(GPIO_MODER_MODER15_Msk);
 1539              		.loc 1 400 5 is_stmt 1 view .LVU399
 1540              		.loc 1 400 18 is_stmt 0 view .LVU400
 1541 001a 3B4A     		ldr	r2, .L123+4
 1542 001c 1368     		ldr	r3, [r2]
 1543 001e 23F04043 		bic	r3, r3, #-1073741824
 1544 0022 1360     		str	r3, [r2]
 401:main.c        ****   	GPIOB->MODER |=  GPIO_MODER_MODER15_1; //set PB15 to alternate mode
 1545              		.loc 1 401 4 is_stmt 1 view .LVU401
 1546              		.loc 1 401 17 is_stmt 0 view .LVU402
 1547 0024 1368     		ldr	r3, [r2]
 1548 0026 43F00043 		orr	r3, r3, #-2147483648
 1549 002a 1360     		str	r3, [r2]
 402:main.c        **** 
 403:main.c        ****     GPIOD->MODER &= ~(GPIO_MODER_MODER3_Msk);
 1550              		.loc 1 403 5 is_stmt 1 view .LVU403
 1551              		.loc 1 403 18 is_stmt 0 view .LVU404
 1552 002c 374B     		ldr	r3, .L123+8
 1553 002e 1968     		ldr	r1, [r3]
 1554 0030 21F0C001 		bic	r1, r1, #192
 1555 0034 1960     		str	r1, [r3]
 404:main.c        ****     GPIOD->MODER |=  GPIO_MODER_MODER3_1; //set PD3 to alternate mode
 1556              		.loc 1 404 5 is_stmt 1 view .LVU405
 1557              		.loc 1 404 18 is_stmt 0 view .LVU406
 1558 0036 1968     		ldr	r1, [r3]
 1559 0038 41F08001 		orr	r1, r1, #128
 1560 003c 1960     		str	r1, [r3]
 405:main.c        **** 
 406:main.c        ****     GPIOB->AFR[1] &= ~(GPIO_AFRH_AFSEL15_Msk);
 1561              		.loc 1 406 5 is_stmt 1 view .LVU407
 1562              		.loc 1 406 19 is_stmt 0 view .LVU408
 1563 003e 516A     		ldr	r1, [r2, #36]
 1564 0040 21F07041 		bic	r1, r1, #-268435456
 1565 0044 5162     		str	r1, [r2, #36]
 407:main.c        ****   	GPIOB->AFR[1] |= (GPIO_AFRH_AFSEL15_2|GPIO_AFRH_AFSEL15_0);
 1566              		.loc 1 407 4 is_stmt 1 view .LVU409
 1567              		.loc 1 407 18 is_stmt 0 view .LVU410
 1568 0046 516A     		ldr	r1, [r2, #36]
 1569 0048 41F0A041 		orr	r1, r1, #1342177280
 1570 004c 5162     		str	r1, [r2, #36]
ARM GAS  /tmp/ccyJgjqn.s 			page 67


 408:main.c        **** 
 409:main.c        ****     GPIOD->AFR[0] &= ~(GPIO_AFRL_AFSEL3_Msk);
 1571              		.loc 1 409 5 is_stmt 1 view .LVU411
 1572              		.loc 1 409 19 is_stmt 0 view .LVU412
 1573 004e 1A6A     		ldr	r2, [r3, #32]
 1574 0050 22F47042 		bic	r2, r2, #61440
 1575 0054 1A62     		str	r2, [r3, #32]
 410:main.c        ****   	GPIOD->AFR[0] |= (GPIO_AFRL_AFSEL3_2|GPIO_AFRL_AFSEL3_0);
 1576              		.loc 1 410 4 is_stmt 1 view .LVU413
 1577              		.loc 1 410 18 is_stmt 0 view .LVU414
 1578 0056 1A6A     		ldr	r2, [r3, #32]
 1579 0058 42F4A042 		orr	r2, r2, #20480
 1580 005c 1A62     		str	r2, [r3, #32]
 411:main.c        **** 
 412:main.c        ****     //cr1 config
 413:main.c        ****     SPI2->CR1 &= ~(SPI_CR1_BR_Msk);
 1581              		.loc 1 413 5 is_stmt 1 view .LVU415
 1582              		.loc 1 413 15 is_stmt 0 view .LVU416
 1583 005e A3F5EA33 		sub	r3, r3, #119808
 1584 0062 1A68     		ldr	r2, [r3]
 1585 0064 22F03802 		bic	r2, r2, #56
 1586 0068 1A60     		str	r2, [r3]
 414:main.c        ****     SPI2->CR1 |= SPI_CR1_BR_0;
 1587              		.loc 1 414 5 is_stmt 1 view .LVU417
 1588              		.loc 1 414 15 is_stmt 0 view .LVU418
 1589 006a 1A68     		ldr	r2, [r3]
 1590 006c 42F00802 		orr	r2, r2, #8
 1591 0070 1A60     		str	r2, [r3]
 415:main.c        ****     SPI2->CR1 |= SPI_CR1_BR_1;
 1592              		.loc 1 415 5 is_stmt 1 view .LVU419
 1593              		.loc 1 415 15 is_stmt 0 view .LVU420
 1594 0072 1A68     		ldr	r2, [r3]
 1595 0074 42F01002 		orr	r2, r2, #16
 1596 0078 1A60     		str	r2, [r3]
 416:main.c        ****     SPI2->CR1 |= SPI_CR1_BR_2;
 1597              		.loc 1 416 5 is_stmt 1 view .LVU421
 1598              		.loc 1 416 15 is_stmt 0 view .LVU422
 1599 007a 1A68     		ldr	r2, [r3]
 1600 007c 42F02002 		orr	r2, r2, #32
 1601 0080 1A60     		str	r2, [r3]
 417:main.c        **** 
 418:main.c        ****     SPI2->CR1 &= ~(SPI_CR1_CPOL_Msk);
 1602              		.loc 1 418 5 is_stmt 1 view .LVU423
 1603              		.loc 1 418 15 is_stmt 0 view .LVU424
 1604 0082 1A68     		ldr	r2, [r3]
 1605 0084 22F00202 		bic	r2, r2, #2
 1606 0088 1A60     		str	r2, [r3]
 419:main.c        ****     SPI2->CR1 &= ~(SPI_CR1_CPHA_Msk);
 1607              		.loc 1 419 5 is_stmt 1 view .LVU425
 1608              		.loc 1 419 15 is_stmt 0 view .LVU426
 1609 008a 1A68     		ldr	r2, [r3]
 1610 008c 22F00102 		bic	r2, r2, #1
 1611 0090 1A60     		str	r2, [r3]
 420:main.c        **** 
 421:main.c        ****     SPI2->CR1 &= ~(SPI_CR1_BIDIMODE_Msk);
 1612              		.loc 1 421 5 is_stmt 1 view .LVU427
 1613              		.loc 1 421 15 is_stmt 0 view .LVU428
ARM GAS  /tmp/ccyJgjqn.s 			page 68


 1614 0092 1A68     		ldr	r2, [r3]
 1615 0094 22F40042 		bic	r2, r2, #32768
 1616 0098 1A60     		str	r2, [r3]
 422:main.c        ****     SPI2->CR1 &= ~(SPI_CR1_RXONLY_Msk);
 1617              		.loc 1 422 5 is_stmt 1 view .LVU429
 1618              		.loc 1 422 15 is_stmt 0 view .LVU430
 1619 009a 1A68     		ldr	r2, [r3]
 1620 009c 22F48062 		bic	r2, r2, #1024
 1621 00a0 1A60     		str	r2, [r3]
 423:main.c        **** 
 424:main.c        ****     SPI2->CR1 &= ~(SPI_CR1_LSBFIRST_Msk);
 1622              		.loc 1 424 5 is_stmt 1 view .LVU431
 1623              		.loc 1 424 15 is_stmt 0 view .LVU432
 1624 00a2 1A68     		ldr	r2, [r3]
 1625 00a4 22F08002 		bic	r2, r2, #128
 1626 00a8 1A60     		str	r2, [r3]
 425:main.c        **** 
 426:main.c        ****     SPI2->CR1 &= ~(SPI_CR1_CRCEN_Msk);
 1627              		.loc 1 426 5 is_stmt 1 view .LVU433
 1628              		.loc 1 426 15 is_stmt 0 view .LVU434
 1629 00aa 1A68     		ldr	r2, [r3]
 1630 00ac 22F40052 		bic	r2, r2, #8192
 1631 00b0 1A60     		str	r2, [r3]
 427:main.c        ****     SPI2->CR1 &= ~(SPI_CR1_CRCNEXT_Msk);
 1632              		.loc 1 427 5 is_stmt 1 view .LVU435
 1633              		.loc 1 427 15 is_stmt 0 view .LVU436
 1634 00b2 1A68     		ldr	r2, [r3]
 1635 00b4 22F48052 		bic	r2, r2, #4096
 1636 00b8 1A60     		str	r2, [r3]
 428:main.c        **** 
 429:main.c        ****     SPI2->CR1 &= ~(SPI_CR1_SSM_Msk);
 1637              		.loc 1 429 5 is_stmt 1 view .LVU437
 1638              		.loc 1 429 15 is_stmt 0 view .LVU438
 1639 00ba 1A68     		ldr	r2, [r3]
 1640 00bc 22F40072 		bic	r2, r2, #512
 1641 00c0 1A60     		str	r2, [r3]
 430:main.c        ****     SPI2->CR1 |= SPI_CR1_SSM;
 1642              		.loc 1 430 5 is_stmt 1 view .LVU439
 1643              		.loc 1 430 15 is_stmt 0 view .LVU440
 1644 00c2 1A68     		ldr	r2, [r3]
 1645 00c4 42F40072 		orr	r2, r2, #512
 1646 00c8 1A60     		str	r2, [r3]
 431:main.c        ****     SPI2->CR1 &= ~(SPI_CR1_SSI_Msk);
 1647              		.loc 1 431 5 is_stmt 1 view .LVU441
 1648              		.loc 1 431 15 is_stmt 0 view .LVU442
 1649 00ca 1A68     		ldr	r2, [r3]
 1650 00cc 22F48072 		bic	r2, r2, #256
 1651 00d0 1A60     		str	r2, [r3]
 432:main.c        ****     SPI2->CR1 |= SPI_CR1_SSI;
 1652              		.loc 1 432 5 is_stmt 1 view .LVU443
 1653              		.loc 1 432 15 is_stmt 0 view .LVU444
 1654 00d2 1A68     		ldr	r2, [r3]
 1655 00d4 42F48072 		orr	r2, r2, #256
 1656 00d8 1A60     		str	r2, [r3]
 433:main.c        **** 
 434:main.c        ****     SPI2->CR1 &= ~(SPI_CR1_MSTR_Msk);
 1657              		.loc 1 434 5 is_stmt 1 view .LVU445
ARM GAS  /tmp/ccyJgjqn.s 			page 69


 1658              		.loc 1 434 15 is_stmt 0 view .LVU446
 1659 00da 1A68     		ldr	r2, [r3]
 1660 00dc 22F00402 		bic	r2, r2, #4
 1661 00e0 1A60     		str	r2, [r3]
 435:main.c        ****     SPI2->CR1 |= SPI_CR1_MSTR;
 1662              		.loc 1 435 5 is_stmt 1 view .LVU447
 1663              		.loc 1 435 15 is_stmt 0 view .LVU448
 1664 00e2 1A68     		ldr	r2, [r3]
 1665 00e4 42F00402 		orr	r2, r2, #4
 1666 00e8 1A60     		str	r2, [r3]
 436:main.c        **** 
 437:main.c        ****     SPI2->CR1 &= ~(SPI_CR1_DFF_Msk);
 1667              		.loc 1 437 5 is_stmt 1 view .LVU449
 1668              		.loc 1 437 15 is_stmt 0 view .LVU450
 1669 00ea 1A68     		ldr	r2, [r3]
 1670 00ec 22F40062 		bic	r2, r2, #2048
 1671 00f0 1A60     		str	r2, [r3]
 438:main.c        ****     SPI2->CR1 |= SPI_CR1_DFF;
 1672              		.loc 1 438 5 is_stmt 1 view .LVU451
 1673              		.loc 1 438 15 is_stmt 0 view .LVU452
 1674 00f2 1A68     		ldr	r2, [r3]
 1675 00f4 42F40062 		orr	r2, r2, #2048
 1676 00f8 1A60     		str	r2, [r3]
 439:main.c        **** 
 440:main.c        ****     SPI2->CR1 |= SPI_CR1_SPE;
 1677              		.loc 1 440 5 is_stmt 1 view .LVU453
 1678              		.loc 1 440 15 is_stmt 0 view .LVU454
 1679 00fa 1A68     		ldr	r2, [r3]
 1680 00fc 42F04002 		orr	r2, r2, #64
 1681 0100 1A60     		str	r2, [r3]
 441:main.c        **** 
 442:main.c        **** }
 1682              		.loc 1 442 1 view .LVU455
 1683 0102 7047     		bx	lr
 1684              	.L124:
 1685              		.align	2
 1686              	.L123:
 1687 0104 00380240 		.word	1073887232
 1688 0108 00040240 		.word	1073873920
 1689 010c 000C0240 		.word	1073875968
 1690              		.cfi_endproc
 1691              	.LFE147:
 1693              		.section	.text.SPI6Init,"ax",%progbits
 1694              		.align	1
 1695              		.global	SPI6Init
 1696              		.syntax unified
 1697              		.thumb
 1698              		.thumb_func
 1699              		.fpu fpv4-sp-d16
 1701              	SPI6Init:
 1702              	.LFB148:
 443:main.c        **** 
 444:main.c        **** void SPI6Init() {
 1703              		.loc 1 444 17 is_stmt 1 view -0
 1704              		.cfi_startproc
 1705              		@ args = 0, pretend = 0, frame = 0
 1706              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccyJgjqn.s 			page 70


 1707              		@ link register save eliminated.
 445:main.c        **** 
 446:main.c        ****     RCC->APB2ENR |= RCC_APB2ENR_SPI6EN;
 1708              		.loc 1 446 5 view .LVU457
 1709              		.loc 1 446 18 is_stmt 0 view .LVU458
 1710 0000 3E4B     		ldr	r3, .L126
 1711 0002 5A6C     		ldr	r2, [r3, #68]
 1712 0004 42F40012 		orr	r2, r2, #2097152
 1713 0008 5A64     		str	r2, [r3, #68]
 447:main.c        **** 
 448:main.c        ****     RCC->AHB1ENR |= RCC_AHB1ENR_GPIOGEN;
 1714              		.loc 1 448 5 is_stmt 1 view .LVU459
 1715              		.loc 1 448 18 is_stmt 0 view .LVU460
 1716 000a 1A6B     		ldr	r2, [r3, #48]
 1717 000c 42F04002 		orr	r2, r2, #64
 1718 0010 1A63     		str	r2, [r3, #48]
 449:main.c        **** 
 450:main.c        ****     //gpio config
 451:main.c        ****     GPIOG->MODER &= ~(GPIO_MODER_MODER14_Msk);
 1719              		.loc 1 451 5 is_stmt 1 view .LVU461
 1720              		.loc 1 451 18 is_stmt 0 view .LVU462
 1721 0012 A3F50053 		sub	r3, r3, #8192
 1722 0016 1A68     		ldr	r2, [r3]
 1723 0018 22F04052 		bic	r2, r2, #805306368
 1724 001c 1A60     		str	r2, [r3]
 452:main.c        ****   	GPIOG->MODER |=  GPIO_MODER_MODER14_1; //set PG14to alternate mode (MOSI)
 1725              		.loc 1 452 4 is_stmt 1 view .LVU463
 1726              		.loc 1 452 17 is_stmt 0 view .LVU464
 1727 001e 1A68     		ldr	r2, [r3]
 1728 0020 42F00052 		orr	r2, r2, #536870912
 1729 0024 1A60     		str	r2, [r3]
 453:main.c        **** 
 454:main.c        ****     GPIOG->MODER &= ~(GPIO_MODER_MODER13_Msk);
 1730              		.loc 1 454 5 is_stmt 1 view .LVU465
 1731              		.loc 1 454 18 is_stmt 0 view .LVU466
 1732 0026 1A68     		ldr	r2, [r3]
 1733 0028 22F04062 		bic	r2, r2, #201326592
 1734 002c 1A60     		str	r2, [r3]
 455:main.c        ****     GPIOG->MODER |=  GPIO_MODER_MODER13_1; //set PG13 to alternate mode (SCK)
 1735              		.loc 1 455 5 is_stmt 1 view .LVU467
 1736              		.loc 1 455 18 is_stmt 0 view .LVU468
 1737 002e 1A68     		ldr	r2, [r3]
 1738 0030 42F00062 		orr	r2, r2, #134217728
 1739 0034 1A60     		str	r2, [r3]
 456:main.c        **** 
 457:main.c        ****     GPIOG->AFR[1] &= ~(GPIO_AFRH_AFSEL14_Msk);
 1740              		.loc 1 457 5 is_stmt 1 view .LVU469
 1741              		.loc 1 457 19 is_stmt 0 view .LVU470
 1742 0036 5A6A     		ldr	r2, [r3, #36]
 1743 0038 22F07062 		bic	r2, r2, #251658240
 1744 003c 5A62     		str	r2, [r3, #36]
 458:main.c        ****   	GPIOG->AFR[1] |= (GPIO_AFRH_AFSEL14_2|GPIO_AFRH_AFSEL14_0);
 1745              		.loc 1 458 4 is_stmt 1 view .LVU471
 1746              		.loc 1 458 18 is_stmt 0 view .LVU472
 1747 003e 5A6A     		ldr	r2, [r3, #36]
 1748 0040 42F0A062 		orr	r2, r2, #83886080
 1749 0044 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/ccyJgjqn.s 			page 71


 459:main.c        **** 
 460:main.c        **** 	GPIOG->AFR[1] &= ~(GPIO_AFRH_AFSEL13_Msk);
 1750              		.loc 1 460 2 is_stmt 1 view .LVU473
 1751              		.loc 1 460 16 is_stmt 0 view .LVU474
 1752 0046 5A6A     		ldr	r2, [r3, #36]
 1753 0048 22F47002 		bic	r2, r2, #15728640
 1754 004c 5A62     		str	r2, [r3, #36]
 461:main.c        ****   	GPIOG->AFR[1] |= (GPIO_AFRH_AFSEL13_2|GPIO_AFRH_AFSEL13_0);
 1755              		.loc 1 461 4 is_stmt 1 view .LVU475
 1756              		.loc 1 461 18 is_stmt 0 view .LVU476
 1757 004e 5A6A     		ldr	r2, [r3, #36]
 1758 0050 42F4A002 		orr	r2, r2, #5242880
 1759 0054 5A62     		str	r2, [r3, #36]
 462:main.c        **** 
 463:main.c        ****     //cr1 config
 464:main.c        ****     SPI6->CR1 &= ~(SPI_CR1_BR_Msk);
 1760              		.loc 1 464 5 is_stmt 1 view .LVU477
 1761              		.loc 1 464 15 is_stmt 0 view .LVU478
 1762 0056 A3F54443 		sub	r3, r3, #50176
 1763 005a 1A68     		ldr	r2, [r3]
 1764 005c 22F03802 		bic	r2, r2, #56
 1765 0060 1A60     		str	r2, [r3]
 465:main.c        ****     SPI6->CR1 |= SPI_CR1_BR_0;
 1766              		.loc 1 465 5 is_stmt 1 view .LVU479
 1767              		.loc 1 465 15 is_stmt 0 view .LVU480
 1768 0062 1A68     		ldr	r2, [r3]
 1769 0064 42F00802 		orr	r2, r2, #8
 1770 0068 1A60     		str	r2, [r3]
 466:main.c        ****     SPI6->CR1 |= SPI_CR1_BR_1;
 1771              		.loc 1 466 5 is_stmt 1 view .LVU481
 1772              		.loc 1 466 15 is_stmt 0 view .LVU482
 1773 006a 1A68     		ldr	r2, [r3]
 1774 006c 42F01002 		orr	r2, r2, #16
 1775 0070 1A60     		str	r2, [r3]
 467:main.c        ****     SPI6->CR1 |= SPI_CR1_BR_2;
 1776              		.loc 1 467 5 is_stmt 1 view .LVU483
 1777              		.loc 1 467 15 is_stmt 0 view .LVU484
 1778 0072 1A68     		ldr	r2, [r3]
 1779 0074 42F02002 		orr	r2, r2, #32
 1780 0078 1A60     		str	r2, [r3]
 468:main.c        **** 
 469:main.c        ****     SPI6->CR1 &= ~(SPI_CR1_CPOL_Msk);
 1781              		.loc 1 469 5 is_stmt 1 view .LVU485
 1782              		.loc 1 469 15 is_stmt 0 view .LVU486
 1783 007a 1A68     		ldr	r2, [r3]
 1784 007c 22F00202 		bic	r2, r2, #2
 1785 0080 1A60     		str	r2, [r3]
 470:main.c        ****     SPI6->CR1 &= ~(SPI_CR1_CPHA_Msk);
 1786              		.loc 1 470 5 is_stmt 1 view .LVU487
 1787              		.loc 1 470 15 is_stmt 0 view .LVU488
 1788 0082 1A68     		ldr	r2, [r3]
 1789 0084 22F00102 		bic	r2, r2, #1
 1790 0088 1A60     		str	r2, [r3]
 471:main.c        **** 
 472:main.c        ****     SPI6->CR1 &= ~(SPI_CR1_BIDIMODE_Msk);
 1791              		.loc 1 472 5 is_stmt 1 view .LVU489
 1792              		.loc 1 472 15 is_stmt 0 view .LVU490
ARM GAS  /tmp/ccyJgjqn.s 			page 72


 1793 008a 1A68     		ldr	r2, [r3]
 1794 008c 22F40042 		bic	r2, r2, #32768
 1795 0090 1A60     		str	r2, [r3]
 473:main.c        ****     SPI6->CR1 &= ~(SPI_CR1_RXONLY_Msk);
 1796              		.loc 1 473 5 is_stmt 1 view .LVU491
 1797              		.loc 1 473 15 is_stmt 0 view .LVU492
 1798 0092 1A68     		ldr	r2, [r3]
 1799 0094 22F48062 		bic	r2, r2, #1024
 1800 0098 1A60     		str	r2, [r3]
 474:main.c        **** 
 475:main.c        ****     SPI6->CR1 &= ~(SPI_CR1_LSBFIRST_Msk);
 1801              		.loc 1 475 5 is_stmt 1 view .LVU493
 1802              		.loc 1 475 15 is_stmt 0 view .LVU494
 1803 009a 1A68     		ldr	r2, [r3]
 1804 009c 22F08002 		bic	r2, r2, #128
 1805 00a0 1A60     		str	r2, [r3]
 476:main.c        **** 
 477:main.c        ****     SPI6->CR1 &= ~(SPI_CR1_CRCEN_Msk);
 1806              		.loc 1 477 5 is_stmt 1 view .LVU495
 1807              		.loc 1 477 15 is_stmt 0 view .LVU496
 1808 00a2 1A68     		ldr	r2, [r3]
 1809 00a4 22F40052 		bic	r2, r2, #8192
 1810 00a8 1A60     		str	r2, [r3]
 478:main.c        ****     SPI6->CR1 &= ~(SPI_CR1_CRCNEXT_Msk);
 1811              		.loc 1 478 5 is_stmt 1 view .LVU497
 1812              		.loc 1 478 15 is_stmt 0 view .LVU498
 1813 00aa 1A68     		ldr	r2, [r3]
 1814 00ac 22F48052 		bic	r2, r2, #4096
 1815 00b0 1A60     		str	r2, [r3]
 479:main.c        **** 
 480:main.c        ****     SPI6->CR1 &= ~(SPI_CR1_SSM_Msk);
 1816              		.loc 1 480 5 is_stmt 1 view .LVU499
 1817              		.loc 1 480 15 is_stmt 0 view .LVU500
 1818 00b2 1A68     		ldr	r2, [r3]
 1819 00b4 22F40072 		bic	r2, r2, #512
 1820 00b8 1A60     		str	r2, [r3]
 481:main.c        ****     SPI6->CR1 |= SPI_CR1_SSM;
 1821              		.loc 1 481 5 is_stmt 1 view .LVU501
 1822              		.loc 1 481 15 is_stmt 0 view .LVU502
 1823 00ba 1A68     		ldr	r2, [r3]
 1824 00bc 42F40072 		orr	r2, r2, #512
 1825 00c0 1A60     		str	r2, [r3]
 482:main.c        ****     SPI6->CR1 &= ~(SPI_CR1_SSI_Msk);
 1826              		.loc 1 482 5 is_stmt 1 view .LVU503
 1827              		.loc 1 482 15 is_stmt 0 view .LVU504
 1828 00c2 1A68     		ldr	r2, [r3]
 1829 00c4 22F48072 		bic	r2, r2, #256
 1830 00c8 1A60     		str	r2, [r3]
 483:main.c        ****     SPI6->CR1 |= SPI_CR1_SSI;
 1831              		.loc 1 483 5 is_stmt 1 view .LVU505
 1832              		.loc 1 483 15 is_stmt 0 view .LVU506
 1833 00ca 1A68     		ldr	r2, [r3]
 1834 00cc 42F48072 		orr	r2, r2, #256
 1835 00d0 1A60     		str	r2, [r3]
 484:main.c        **** 
 485:main.c        ****     SPI6->CR1 &= ~(SPI_CR1_MSTR_Msk);
 1836              		.loc 1 485 5 is_stmt 1 view .LVU507
ARM GAS  /tmp/ccyJgjqn.s 			page 73


 1837              		.loc 1 485 15 is_stmt 0 view .LVU508
 1838 00d2 1A68     		ldr	r2, [r3]
 1839 00d4 22F00402 		bic	r2, r2, #4
 1840 00d8 1A60     		str	r2, [r3]
 486:main.c        ****     SPI6->CR1 |= SPI_CR1_MSTR;
 1841              		.loc 1 486 5 is_stmt 1 view .LVU509
 1842              		.loc 1 486 15 is_stmt 0 view .LVU510
 1843 00da 1A68     		ldr	r2, [r3]
 1844 00dc 42F00402 		orr	r2, r2, #4
 1845 00e0 1A60     		str	r2, [r3]
 487:main.c        **** 
 488:main.c        ****     SPI6->CR1 &= ~(SPI_CR1_DFF_Msk);
 1846              		.loc 1 488 5 is_stmt 1 view .LVU511
 1847              		.loc 1 488 15 is_stmt 0 view .LVU512
 1848 00e2 1A68     		ldr	r2, [r3]
 1849 00e4 22F40062 		bic	r2, r2, #2048
 1850 00e8 1A60     		str	r2, [r3]
 489:main.c        ****     SPI6->CR1 |= SPI_CR1_DFF;
 1851              		.loc 1 489 5 is_stmt 1 view .LVU513
 1852              		.loc 1 489 15 is_stmt 0 view .LVU514
 1853 00ea 1A68     		ldr	r2, [r3]
 1854 00ec 42F40062 		orr	r2, r2, #2048
 1855 00f0 1A60     		str	r2, [r3]
 490:main.c        **** 
 491:main.c        ****     SPI6->CR1 |= SPI_CR1_SPE;
 1856              		.loc 1 491 5 is_stmt 1 view .LVU515
 1857              		.loc 1 491 15 is_stmt 0 view .LVU516
 1858 00f2 1A68     		ldr	r2, [r3]
 1859 00f4 42F04002 		orr	r2, r2, #64
 1860 00f8 1A60     		str	r2, [r3]
 492:main.c        **** 
 493:main.c        **** }
 1861              		.loc 1 493 1 view .LVU517
 1862 00fa 7047     		bx	lr
 1863              	.L127:
 1864              		.align	2
 1865              	.L126:
 1866 00fc 00380240 		.word	1073887232
 1867              		.cfi_endproc
 1868              	.LFE148:
 1870              		.section	.text.rclkRise,"ax",%progbits
 1871              		.align	1
 1872              		.global	rclkRise
 1873              		.syntax unified
 1874              		.thumb
 1875              		.thumb_func
 1876              		.fpu fpv4-sp-d16
 1878              	rclkRise:
 1879              	.LFB149:
 494:main.c        **** 
 495:main.c        **** void rclkRise() { // rising edge RCLK
 1880              		.loc 1 495 17 is_stmt 1 view -0
 1881              		.cfi_startproc
 1882              		@ args = 0, pretend = 0, frame = 0
 1883              		@ frame_needed = 0, uses_anonymous_args = 0
 1884 0000 10B5     		push	{r4, lr}
 1885              	.LCFI14:
ARM GAS  /tmp/ccyJgjqn.s 			page 74


 1886              		.cfi_def_cfa_offset 8
 1887              		.cfi_offset 4, -8
 1888              		.cfi_offset 14, -4
 496:main.c        **** 
 497:main.c        **** 	GPIOG->BSRR |= GPIO_BSRR_BR10;
 1889              		.loc 1 497 2 view .LVU519
 1890              		.loc 1 497 14 is_stmt 0 view .LVU520
 1891 0002 074C     		ldr	r4, .L130
 1892 0004 A369     		ldr	r3, [r4, #24]
 1893 0006 43F08063 		orr	r3, r3, #67108864
 1894 000a A361     		str	r3, [r4, #24]
 498:main.c        ****     delayMcs(300);
 1895              		.loc 1 498 5 is_stmt 1 view .LVU521
 1896 000c 4FF49670 		mov	r0, #300
 1897 0010 FFF7FEFF 		bl	delayMcs
 1898              	.LVL123:
 499:main.c        **** 	GPIOG->BSRR |= GPIO_BSRR_BS10;
 1899              		.loc 1 499 2 view .LVU522
 1900              		.loc 1 499 14 is_stmt 0 view .LVU523
 1901 0014 A369     		ldr	r3, [r4, #24]
 1902 0016 43F48063 		orr	r3, r3, #1024
 1903 001a A361     		str	r3, [r4, #24]
 500:main.c        **** 
 501:main.c        **** }
 1904              		.loc 1 501 1 view .LVU524
 1905 001c 10BD     		pop	{r4, pc}
 1906              	.L131:
 1907 001e 00BF     		.align	2
 1908              	.L130:
 1909 0020 00180240 		.word	1073879040
 1910              		.cfi_endproc
 1911              	.LFE149:
 1913              		.section	.text.registerUpdate,"ax",%progbits
 1914              		.align	1
 1915              		.global	registerUpdate
 1916              		.syntax unified
 1917              		.thumb
 1918              		.thumb_func
 1919              		.fpu fpv4-sp-d16
 1921              	registerUpdate:
 1922              	.LFB150:
 502:main.c        **** 
 503:main.c        **** void registerUpdate() { // copies shift register to non-shift register
 1923              		.loc 1 503 23 is_stmt 1 view -0
 1924              		.cfi_startproc
 1925              		@ args = 0, pretend = 0, frame = 0
 1926              		@ frame_needed = 0, uses_anonymous_args = 0
 1927 0000 08B5     		push	{r3, lr}
 1928              	.LCFI15:
 1929              		.cfi_def_cfa_offset 8
 1930              		.cfi_offset 3, -8
 1931              		.cfi_offset 14, -4
 504:main.c        **** 
 505:main.c        **** 	rclkRise();
 1932              		.loc 1 505 2 view .LVU526
 1933 0002 FFF7FEFF 		bl	rclkRise
 1934              	.LVL124:
ARM GAS  /tmp/ccyJgjqn.s 			page 75


 506:main.c        **** 
 507:main.c        **** }
 1935              		.loc 1 507 1 is_stmt 0 view .LVU527
 1936 0006 08BD     		pop	{r3, pc}
 1937              		.cfi_endproc
 1938              	.LFE150:
 1940              		.section	.text.setDigit,"ax",%progbits
 1941              		.align	1
 1942              		.global	setDigit
 1943              		.syntax unified
 1944              		.thumb
 1945              		.thumb_func
 1946              		.fpu fpv4-sp-d16
 1948              	setDigit:
 1949              	.LVL125:
 1950              	.LFB151:
 508:main.c        **** 
 509:main.c        **** void setDigit(uint16_t digit, uint16_t led_num) { // sets symbol on selected led
 1951              		.loc 1 509 49 is_stmt 1 view -0
 1952              		.cfi_startproc
 1953              		@ args = 0, pretend = 0, frame = 0
 1954              		@ frame_needed = 0, uses_anonymous_args = 0
 1955              		.loc 1 509 49 is_stmt 0 view .LVU529
 1956 0000 08B5     		push	{r3, lr}
 1957              	.LCFI16:
 1958              		.cfi_def_cfa_offset 8
 1959              		.cfi_offset 3, -8
 1960              		.cfi_offset 14, -4
 510:main.c        **** 
 511:main.c        **** 	if((led_num > NUMBER_OF_LEDS) || (led_num < 1)) { blinkLed(); return; }
 1961              		.loc 1 511 2 is_stmt 1 view .LVU530
 1962              		.loc 1 511 32 is_stmt 0 view .LVU531
 1963 0002 4B1E     		subs	r3, r1, #1
 1964 0004 9BB2     		uxth	r3, r3
 1965              		.loc 1 511 4 view .LVU532
 1966 0006 032B     		cmp	r3, #3
 1967 0008 0DD8     		bhi	.L138
 512:main.c        ****     sendViaSPI2(digit | led_array[led_num - 1] | KEY_EVERY);
 1968              		.loc 1 512 5 is_stmt 1 view .LVU533
 1969              		.loc 1 512 43 is_stmt 0 view .LVU534
 1970 000a 0139     		subs	r1, r1, #1
 1971              	.LVL126:
 1972              		.loc 1 512 34 view .LVU535
 1973 000c 074B     		ldr	r3, .L139
 1974 000e 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 1975              		.loc 1 512 5 view .LVU536
 1976 0012 1843     		orrs	r0, r0, r3
 1977              	.LVL127:
 1978              		.loc 1 512 5 view .LVU537
 1979 0014 40F4E060 		orr	r0, r0, #1792
 1980 0018 40F00100 		orr	r0, r0, #1
 1981 001c FFF7FEFF 		bl	sendViaSPI2
 1982              	.LVL128:
 513:main.c        **** 	registerUpdate();
 1983              		.loc 1 513 2 is_stmt 1 view .LVU538
 1984 0020 FFF7FEFF 		bl	registerUpdate
 1985              	.LVL129:
ARM GAS  /tmp/ccyJgjqn.s 			page 76


 1986              	.L134:
 514:main.c        **** 
 515:main.c        **** }
 1987              		.loc 1 515 1 is_stmt 0 view .LVU539
 1988 0024 08BD     		pop	{r3, pc}
 1989              	.LVL130:
 1990              	.L138:
 511:main.c        ****     sendViaSPI2(digit | led_array[led_num - 1] | KEY_EVERY);
 1991              		.loc 1 511 52 is_stmt 1 discriminator 1 view .LVU540
 1992 0026 FFF7FEFF 		bl	blinkLed
 1993              	.LVL131:
 511:main.c        ****     sendViaSPI2(digit | led_array[led_num - 1] | KEY_EVERY);
 1994              		.loc 1 511 64 discriminator 1 view .LVU541
 1995 002a FBE7     		b	.L134
 1996              	.L140:
 1997              		.align	2
 1998              	.L139:
 1999 002c 00000000 		.word	.LANCHOR7
 2000              		.cfi_endproc
 2001              	.LFE151:
 2003              		.section	.text.driveShield,"ax",%progbits
 2004              		.align	1
 2005              		.global	driveShield
 2006              		.syntax unified
 2007              		.thumb
 2008              		.thumb_func
 2009              		.fpu fpv4-sp-d16
 2011              	driveShield:
 2012              	.LFB152:
 516:main.c        **** 
 517:main.c        **** void driveShield() { // main function to control extension shield
 2013              		.loc 1 517 20 view -0
 2014              		.cfi_startproc
 2015              		@ args = 0, pretend = 0, frame = 0
 2016              		@ frame_needed = 0, uses_anonymous_args = 0
 2017 0000 10B5     		push	{r4, lr}
 2018              	.LCFI17:
 2019              		.cfi_def_cfa_offset 8
 2020              		.cfi_offset 4, -8
 2021              		.cfi_offset 14, -4
 518:main.c        **** 
 519:main.c        **** 	if((displayValue < 0) || (displayValue > 9999)) { blinkLed(); return; }
 2022              		.loc 1 519 2 view .LVU543
 2023              		.loc 1 519 24 is_stmt 0 view .LVU544
 2024 0002 254B     		ldr	r3, .L151
 2025 0004 1B88     		ldrh	r3, [r3]
 2026              		.loc 1 519 4 view .LVU545
 2027 0006 42F20F72 		movw	r2, #9999
 2028 000a 9342     		cmp	r3, r2
 2029 000c 13D8     		bhi	.L149
 520:main.c        **** 
 521:main.c        **** 	if((sTicks >= 1000000) && displayValue) { //each second changes displayValue
 2030              		.loc 1 521 2 is_stmt 1 view .LVU546
 2031              		.loc 1 521 13 is_stmt 0 view .LVU547
 2032 000e 234A     		ldr	r2, .L151+4
 2033 0010 1168     		ldr	r1, [r2]
 2034              		.loc 1 521 4 view .LVU548
ARM GAS  /tmp/ccyJgjqn.s 			page 77


 2035 0012 234A     		ldr	r2, .L151+8
 2036 0014 9142     		cmp	r1, r2
 2037 0016 0CDD     		ble	.L144
 2038              		.loc 1 521 25 discriminator 1 view .LVU549
 2039 0018 5BB1     		cbz	r3, .L144
 522:main.c        ****         sTicks = 0;
 2040              		.loc 1 522 9 is_stmt 1 view .LVU550
 2041              		.loc 1 522 16 is_stmt 0 view .LVU551
 2042 001a 204A     		ldr	r2, .L151+4
 2043 001c 0021     		movs	r1, #0
 2044 001e 1160     		str	r1, [r2]
 523:main.c        **** 		switch (displayValue) {
 2045              		.loc 1 523 3 is_stmt 1 view .LVU552
 2046 0020 012B     		cmp	r3, #1
 2047 0022 0BD0     		beq	.L150
 524:main.c        **** 			case 1:  {
 525:main.c        **** 				displayValue--;
 526:main.c        **** 				writeToEEPROM(displayValue,BINARY);
 527:main.c        **** 				SPI6->CR1 |= SPI_CR1_SPE;
 528:main.c        **** 			} break;
 529:main.c        **** 			default: {
 530:main.c        **** 				displayValue--;
 2048              		.loc 1 530 5 view .LVU553
 2049              		.loc 1 530 17 is_stmt 0 view .LVU554
 2050 0024 013B     		subs	r3, r3, #1
 2051 0026 98B2     		uxth	r0, r3
 2052 0028 1B4B     		ldr	r3, .L151
 2053 002a 1880     		strh	r0, [r3]	@ movhi
 531:main.c        **** 				writeToEEPROM(displayValue,BINARY);
 2054              		.loc 1 531 5 is_stmt 1 view .LVU555
 2055 002c 0121     		movs	r1, #1
 2056 002e FFF7FEFF 		bl	writeToEEPROM
 2057              	.LVL132:
 532:main.c        **** 			} break;
 2058              		.loc 1 532 6 view .LVU556
 2059              	.L144:
 517:main.c        **** 
 2060              		.loc 1 517 20 is_stmt 0 discriminator 1 view .LVU557
 2061 0032 0024     		movs	r4, #0
 2062 0034 2DE0     		b	.L146
 2063              	.L149:
 519:main.c        **** 
 2064              		.loc 1 519 52 is_stmt 1 discriminator 1 view .LVU558
 2065 0036 FFF7FEFF 		bl	blinkLed
 2066              	.LVL133:
 519:main.c        **** 
 2067              		.loc 1 519 64 discriminator 1 view .LVU559
 2068 003a 2CE0     		b	.L141
 2069              	.L150:
 525:main.c        **** 				writeToEEPROM(displayValue,BINARY);
 2070              		.loc 1 525 5 view .LVU560
 525:main.c        **** 				writeToEEPROM(displayValue,BINARY);
 2071              		.loc 1 525 17 is_stmt 0 view .LVU561
 2072 003c 013B     		subs	r3, r3, #1
 2073 003e 98B2     		uxth	r0, r3
 2074 0040 154B     		ldr	r3, .L151
 2075 0042 1880     		strh	r0, [r3]	@ movhi
ARM GAS  /tmp/ccyJgjqn.s 			page 78


 526:main.c        **** 				SPI6->CR1 |= SPI_CR1_SPE;
 2076              		.loc 1 526 5 is_stmt 1 view .LVU562
 2077 0044 0121     		movs	r1, #1
 2078 0046 FFF7FEFF 		bl	writeToEEPROM
 2079              	.LVL134:
 527:main.c        **** 			} break;
 2080              		.loc 1 527 5 view .LVU563
 527:main.c        **** 			} break;
 2081              		.loc 1 527 15 is_stmt 0 view .LVU564
 2082 004a 164A     		ldr	r2, .L151+12
 2083 004c 1368     		ldr	r3, [r2]
 2084 004e 43F04003 		orr	r3, r3, #64
 2085 0052 1360     		str	r3, [r2]
 528:main.c        **** 			default: {
 2086              		.loc 1 528 6 is_stmt 1 view .LVU565
 528:main.c        **** 			default: {
 2087              		.loc 1 528 4 is_stmt 0 view .LVU566
 2088 0054 EDE7     		b	.L144
 2089              	.LVL135:
 2090              	.L147:
 2091              	.LBB19:
 533:main.c        **** 		}
 534:main.c        ****     }
 535:main.c        **** 
 536:main.c        ****     for(int i = 0; i < NUMBER_OF_LEDS; i++) { // blinks displayValue on display
 537:main.c        **** 		setDigit(digit_array[((displayValue/power(10,i)) % 10)],NUMBER_OF_LEDS - i);
 2092              		.loc 1 537 3 is_stmt 1 discriminator 3 view .LVU567
 2093              		.loc 1 537 39 is_stmt 0 discriminator 3 view .LVU568
 2094 0056 2146     		mov	r1, r4
 2095 0058 0A20     		movs	r0, #10
 2096 005a FFF7FEFF 		bl	power
 2097              	.LVL136:
 2098              		.loc 1 537 38 discriminator 3 view .LVU569
 2099 005e 0E4B     		ldr	r3, .L151
 2100 0060 1B88     		ldrh	r3, [r3]
 2101 0062 93FBF0F0 		sdiv	r0, r3, r0
 2102              		.loc 1 537 52 discriminator 3 view .LVU570
 2103 0066 104A     		ldr	r2, .L151+16
 2104 0068 82FB0032 		smull	r3, r2, r2, r0
 2105 006c C317     		asrs	r3, r0, #31
 2106 006e C3EBA203 		rsb	r3, r3, r2, asr #2
 2107 0072 03EB8303 		add	r3, r3, r3, lsl #2
 2108 0076 A0EB4303 		sub	r3, r0, r3, lsl #1
 2109              		.loc 1 537 3 discriminator 3 view .LVU571
 2110 007a C4F10401 		rsb	r1, r4, #4
 2111 007e 89B2     		uxth	r1, r1
 2112 0080 0A4A     		ldr	r2, .L151+20
 2113 0082 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 2114 0086 FFF7FEFF 		bl	setDigit
 2115              	.LVL137:
 538:main.c        **** 		delayMs(3);
 2116              		.loc 1 538 3 is_stmt 1 discriminator 3 view .LVU572
 2117 008a 0320     		movs	r0, #3
 2118 008c FFF7FEFF 		bl	delayMs
 2119              	.LVL138:
 536:main.c        **** 		setDigit(digit_array[((displayValue/power(10,i)) % 10)],NUMBER_OF_LEDS - i);
 2120              		.loc 1 536 40 discriminator 3 view .LVU573
ARM GAS  /tmp/ccyJgjqn.s 			page 79


 536:main.c        **** 		setDigit(digit_array[((displayValue/power(10,i)) % 10)],NUMBER_OF_LEDS - i);
 2121              		.loc 1 536 41 is_stmt 0 discriminator 3 view .LVU574
 2122 0090 0134     		adds	r4, r4, #1
 2123              	.LVL139:
 2124              	.L146:
 536:main.c        **** 		setDigit(digit_array[((displayValue/power(10,i)) % 10)],NUMBER_OF_LEDS - i);
 2125              		.loc 1 536 20 is_stmt 1 discriminator 1 view .LVU575
 536:main.c        **** 		setDigit(digit_array[((displayValue/power(10,i)) % 10)],NUMBER_OF_LEDS - i);
 2126              		.loc 1 536 5 is_stmt 0 discriminator 1 view .LVU576
 2127 0092 032C     		cmp	r4, #3
 2128 0094 DFDD     		ble	.L147
 2129              	.LVL140:
 2130              	.L141:
 536:main.c        **** 		setDigit(digit_array[((displayValue/power(10,i)) % 10)],NUMBER_OF_LEDS - i);
 2131              		.loc 1 536 5 discriminator 1 view .LVU577
 2132              	.LBE19:
 539:main.c        **** 	}
 540:main.c        **** 
 541:main.c        **** }
 2133              		.loc 1 541 1 view .LVU578
 2134 0096 10BD     		pop	{r4, pc}
 2135              	.L152:
 2136              		.align	2
 2137              	.L151:
 2138 0098 00000000 		.word	.LANCHOR6
 2139 009c 00000000 		.word	.LANCHOR3
 2140 00a0 3F420F00 		.word	999999
 2141 00a4 00540140 		.word	1073828864
 2142 00a8 67666666 		.word	1717986919
 2143 00ac 00000000 		.word	.LANCHOR8
 2144              		.cfi_endproc
 2145              	.LFE152:
 2147              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2148              		.align	2
 2149              	.LC3:
 2150 0000 0A0D0A0D 		.ascii	"\012\015\012\015\000"
 2150      00
 2151 0005 000000   		.align	2
 2152              	.LC4:
 2153 0008 456E7465 		.ascii	"Enter value to send on display:\012\015\000"
 2153      72207661 
 2153      6C756520 
 2153      746F2073 
 2153      656E6420 
 2154              		.section	.text.main,"ax",%progbits
 2155              		.align	1
 2156              		.global	main
 2157              		.syntax unified
 2158              		.thumb
 2159              		.thumb_func
 2160              		.fpu fpv4-sp-d16
 2162              	main:
 2163              	.LFB153:
 542:main.c        **** 
 543:main.c        **** int main(void)
 544:main.c        **** {
 2164              		.loc 1 544 1 is_stmt 1 view -0
ARM GAS  /tmp/ccyJgjqn.s 			page 80


 2165              		.cfi_startproc
 2166              		@ Volatile: function does not return.
 2167              		@ args = 0, pretend = 0, frame = 0
 2168              		@ frame_needed = 0, uses_anonymous_args = 0
 2169 0000 08B5     		push	{r3, lr}
 2170              	.LCFI18:
 2171              		.cfi_def_cfa_offset 8
 2172              		.cfi_offset 3, -8
 2173              		.cfi_offset 14, -4
 545:main.c        **** 
 546:main.c        ****     set_sysclk_max();
 2174              		.loc 1 546 5 view .LVU580
 2175 0002 FFF7FEFF 		bl	set_sysclk_max
 2176              	.LVL141:
 547:main.c        ****   	UART3Init();
 2177              		.loc 1 547 4 view .LVU581
 2178 0006 FFF7FEFF 		bl	UART3Init
 2179              	.LVL142:
 548:main.c        ****     SPI2Init();
 2180              		.loc 1 548 5 view .LVU582
 2181 000a FFF7FEFF 		bl	SPI2Init
 2182              	.LVL143:
 549:main.c        **** 	SPI6Init();
 2183              		.loc 1 549 2 view .LVU583
 2184 000e FFF7FEFF 		bl	SPI6Init
 2185              	.LVL144:
 550:main.c        **** 
 551:main.c        **** 	SPI6->CR1 &= ~SPI_CR1_SPE; //disable SPI6
 2186              		.loc 1 551 2 view .LVU584
 2187              		.loc 1 551 12 is_stmt 0 view .LVU585
 2188 0012 2C4A     		ldr	r2, .L157
 2189 0014 1368     		ldr	r3, [r2]
 2190 0016 23F04003 		bic	r3, r3, #64
 2191 001a 1360     		str	r3, [r2]
 552:main.c        **** 
 553:main.c        ****     RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN; //enable led pins
 2192              		.loc 1 553 5 is_stmt 1 view .LVU586
 2193              		.loc 1 553 18 is_stmt 0 view .LVU587
 2194 001c 2A4B     		ldr	r3, .L157+4
 2195 001e 1A6B     		ldr	r2, [r3, #48]
 2196 0020 42F00102 		orr	r2, r2, #1
 2197 0024 1A63     		str	r2, [r3, #48]
 554:main.c        ****     GPIOA->MODER |= GPIO_MODER_MODER7_0;
 2198              		.loc 1 554 5 is_stmt 1 view .LVU588
 2199              		.loc 1 554 18 is_stmt 0 view .LVU589
 2200 0026 2949     		ldr	r1, .L157+8
 2201 0028 0A68     		ldr	r2, [r1]
 2202 002a 42F48042 		orr	r2, r2, #16384
 2203 002e 0A60     		str	r2, [r1]
 555:main.c        **** 
 556:main.c        **** 	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOHEN;
 2204              		.loc 1 556 2 is_stmt 1 view .LVU590
 2205              		.loc 1 556 15 is_stmt 0 view .LVU591
 2206 0030 1A6B     		ldr	r2, [r3, #48]
 2207 0032 42F08002 		orr	r2, r2, #128
 2208 0036 1A63     		str	r2, [r3, #48]
 557:main.c        **** 	GPIOH->MODER &= ~(GPIO_MODER_MODER6_Msk); // CS output mode
ARM GAS  /tmp/ccyJgjqn.s 			page 81


 2209              		.loc 1 557 2 is_stmt 1 view .LVU592
 2210              		.loc 1 557 15 is_stmt 0 view .LVU593
 2211 0038 254A     		ldr	r2, .L157+12
 2212 003a 1168     		ldr	r1, [r2]
 2213 003c 21F44051 		bic	r1, r1, #12288
 2214 0040 1160     		str	r1, [r2]
 558:main.c        **** 	GPIOH->MODER |= GPIO_MODER_MODER6_0;
 2215              		.loc 1 558 2 is_stmt 1 view .LVU594
 2216              		.loc 1 558 15 is_stmt 0 view .LVU595
 2217 0042 1168     		ldr	r1, [r2]
 2218 0044 41F48051 		orr	r1, r1, #4096
 2219 0048 1160     		str	r1, [r2]
 559:main.c        **** 
 560:main.c        ****     RCC->AHB1ENR |= RCC_AHB1ENR_GPIOGEN;  // enable GPIOG clock
 2220              		.loc 1 560 5 is_stmt 1 view .LVU596
 2221              		.loc 1 560 18 is_stmt 0 view .LVU597
 2222 004a 1A6B     		ldr	r2, [r3, #48]
 2223 004c 42F04002 		orr	r2, r2, #64
 2224 0050 1A63     		str	r2, [r3, #48]
 561:main.c        ****     GPIOG->MODER &= ~(GPIO_MODER_MODER10_Msk); //rclk
 2225              		.loc 1 561 5 is_stmt 1 view .LVU598
 2226              		.loc 1 561 18 is_stmt 0 view .LVU599
 2227 0052 A3F50053 		sub	r3, r3, #8192
 2228 0056 1A68     		ldr	r2, [r3]
 2229 0058 22F44012 		bic	r2, r2, #3145728
 2230 005c 1A60     		str	r2, [r3]
 562:main.c        ****   	GPIOG->MODER |=  GPIO_MODER_MODER10_0;
 2231              		.loc 1 562 4 is_stmt 1 view .LVU600
 2232              		.loc 1 562 17 is_stmt 0 view .LVU601
 2233 005e 1A68     		ldr	r2, [r3]
 2234 0060 42F48012 		orr	r2, r2, #1048576
 2235 0064 1A60     		str	r2, [r3]
 563:main.c        ****     GPIOG->BSRR |= GPIO_BSRR_BR10;
 2236              		.loc 1 563 5 is_stmt 1 view .LVU602
 2237              		.loc 1 563 17 is_stmt 0 view .LVU603
 2238 0066 9A69     		ldr	r2, [r3, #24]
 2239 0068 42F08062 		orr	r2, r2, #67108864
 2240 006c 9A61     		str	r2, [r3, #24]
 564:main.c        **** 
 565:main.c        **** 
 566:main.c        ****   	SysTick_Config(SystemCoreClock/(800000/9));
 2241              		.loc 1 566 4 is_stmt 1 view .LVU604
 2242 006e 194B     		ldr	r3, .L157+16
 2243 0070 1B68     		ldr	r3, [r3]
 2244 0072 DB08     		lsrs	r3, r3, #3
 2245 0074 184A     		ldr	r2, .L157+20
 2246 0076 A2FB0323 		umull	r2, r3, r2, r3
 2247 007a 9B0A     		lsrs	r3, r3, #10
 2248              	.LVL145:
 2249              	.LBB20:
 2250              	.LBI20:
1693:../CMSIS/Include/core_cm4.h ****   }
1694:../CMSIS/Include/core_cm4.h **** }
1695:../CMSIS/Include/core_cm4.h **** 
1696:../CMSIS/Include/core_cm4.h **** 
1697:../CMSIS/Include/core_cm4.h **** /**
1698:../CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
ARM GAS  /tmp/ccyJgjqn.s 			page 82


1699:../CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1700:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1701:../CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1702:../CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1703:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1704:../CMSIS/Include/core_cm4.h ****  */
1705:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1706:../CMSIS/Include/core_cm4.h **** {
1707:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1708:../CMSIS/Include/core_cm4.h ****   {
1709:../CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1710:../CMSIS/Include/core_cm4.h ****   }
1711:../CMSIS/Include/core_cm4.h ****   else
1712:../CMSIS/Include/core_cm4.h ****   {
1713:../CMSIS/Include/core_cm4.h ****     return(0U);
1714:../CMSIS/Include/core_cm4.h ****   }
1715:../CMSIS/Include/core_cm4.h **** }
1716:../CMSIS/Include/core_cm4.h **** 
1717:../CMSIS/Include/core_cm4.h **** 
1718:../CMSIS/Include/core_cm4.h **** /**
1719:../CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1720:../CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1721:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1722:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1723:../CMSIS/Include/core_cm4.h ****  */
1724:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1725:../CMSIS/Include/core_cm4.h **** {
1726:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1727:../CMSIS/Include/core_cm4.h ****   {
1728:../CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1729:../CMSIS/Include/core_cm4.h ****     __DSB();
1730:../CMSIS/Include/core_cm4.h ****     __ISB();
1731:../CMSIS/Include/core_cm4.h ****   }
1732:../CMSIS/Include/core_cm4.h **** }
1733:../CMSIS/Include/core_cm4.h **** 
1734:../CMSIS/Include/core_cm4.h **** 
1735:../CMSIS/Include/core_cm4.h **** /**
1736:../CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1737:../CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1738:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1739:../CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1740:../CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1741:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1742:../CMSIS/Include/core_cm4.h ****  */
1743:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1744:../CMSIS/Include/core_cm4.h **** {
1745:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1746:../CMSIS/Include/core_cm4.h ****   {
1747:../CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1748:../CMSIS/Include/core_cm4.h ****   }
1749:../CMSIS/Include/core_cm4.h ****   else
1750:../CMSIS/Include/core_cm4.h ****   {
1751:../CMSIS/Include/core_cm4.h ****     return(0U);
1752:../CMSIS/Include/core_cm4.h ****   }
1753:../CMSIS/Include/core_cm4.h **** }
1754:../CMSIS/Include/core_cm4.h **** 
1755:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccyJgjqn.s 			page 83


1756:../CMSIS/Include/core_cm4.h **** /**
1757:../CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1758:../CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1759:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1760:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1761:../CMSIS/Include/core_cm4.h ****  */
1762:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1763:../CMSIS/Include/core_cm4.h **** {
1764:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1765:../CMSIS/Include/core_cm4.h ****   {
1766:../CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1767:../CMSIS/Include/core_cm4.h ****   }
1768:../CMSIS/Include/core_cm4.h **** }
1769:../CMSIS/Include/core_cm4.h **** 
1770:../CMSIS/Include/core_cm4.h **** 
1771:../CMSIS/Include/core_cm4.h **** /**
1772:../CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1773:../CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1774:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1775:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1776:../CMSIS/Include/core_cm4.h ****  */
1777:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1778:../CMSIS/Include/core_cm4.h **** {
1779:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1780:../CMSIS/Include/core_cm4.h ****   {
1781:../CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1782:../CMSIS/Include/core_cm4.h ****   }
1783:../CMSIS/Include/core_cm4.h **** }
1784:../CMSIS/Include/core_cm4.h **** 
1785:../CMSIS/Include/core_cm4.h **** 
1786:../CMSIS/Include/core_cm4.h **** /**
1787:../CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1788:../CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1789:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1790:../CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1791:../CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1792:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1793:../CMSIS/Include/core_cm4.h ****  */
1794:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1795:../CMSIS/Include/core_cm4.h **** {
1796:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1797:../CMSIS/Include/core_cm4.h ****   {
1798:../CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1799:../CMSIS/Include/core_cm4.h ****   }
1800:../CMSIS/Include/core_cm4.h ****   else
1801:../CMSIS/Include/core_cm4.h ****   {
1802:../CMSIS/Include/core_cm4.h ****     return(0U);
1803:../CMSIS/Include/core_cm4.h ****   }
1804:../CMSIS/Include/core_cm4.h **** }
1805:../CMSIS/Include/core_cm4.h **** 
1806:../CMSIS/Include/core_cm4.h **** 
1807:../CMSIS/Include/core_cm4.h **** /**
1808:../CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1809:../CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1810:../CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1811:../CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1812:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
ARM GAS  /tmp/ccyJgjqn.s 			page 84


1813:../CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1814:../CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1815:../CMSIS/Include/core_cm4.h ****  */
1816:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1817:../CMSIS/Include/core_cm4.h **** {
1818:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1819:../CMSIS/Include/core_cm4.h ****   {
1820:../CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1821:../CMSIS/Include/core_cm4.h ****   }
1822:../CMSIS/Include/core_cm4.h ****   else
1823:../CMSIS/Include/core_cm4.h ****   {
1824:../CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1825:../CMSIS/Include/core_cm4.h ****   }
1826:../CMSIS/Include/core_cm4.h **** }
1827:../CMSIS/Include/core_cm4.h **** 
1828:../CMSIS/Include/core_cm4.h **** 
1829:../CMSIS/Include/core_cm4.h **** /**
1830:../CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1831:../CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1832:../CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1833:../CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1834:../CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1835:../CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1836:../CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1837:../CMSIS/Include/core_cm4.h ****  */
1838:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1839:../CMSIS/Include/core_cm4.h **** {
1840:../CMSIS/Include/core_cm4.h **** 
1841:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1842:../CMSIS/Include/core_cm4.h ****   {
1843:../CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1844:../CMSIS/Include/core_cm4.h ****   }
1845:../CMSIS/Include/core_cm4.h ****   else
1846:../CMSIS/Include/core_cm4.h ****   {
1847:../CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1848:../CMSIS/Include/core_cm4.h ****   }
1849:../CMSIS/Include/core_cm4.h **** }
1850:../CMSIS/Include/core_cm4.h **** 
1851:../CMSIS/Include/core_cm4.h **** 
1852:../CMSIS/Include/core_cm4.h **** /**
1853:../CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1854:../CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1855:../CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1856:../CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1857:../CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1858:../CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1859:../CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1860:../CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1861:../CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1862:../CMSIS/Include/core_cm4.h ****  */
1863:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1864:../CMSIS/Include/core_cm4.h **** {
1865:../CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1866:../CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1867:../CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1868:../CMSIS/Include/core_cm4.h **** 
1869:../CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
ARM GAS  /tmp/ccyJgjqn.s 			page 85


1870:../CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1871:../CMSIS/Include/core_cm4.h **** 
1872:../CMSIS/Include/core_cm4.h ****   return (
1873:../CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1874:../CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1875:../CMSIS/Include/core_cm4.h ****          );
1876:../CMSIS/Include/core_cm4.h **** }
1877:../CMSIS/Include/core_cm4.h **** 
1878:../CMSIS/Include/core_cm4.h **** 
1879:../CMSIS/Include/core_cm4.h **** /**
1880:../CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1881:../CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1882:../CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1883:../CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1884:../CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1885:../CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1886:../CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1887:../CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1888:../CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1889:../CMSIS/Include/core_cm4.h ****  */
1890:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1891:../CMSIS/Include/core_cm4.h **** {
1892:../CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1893:../CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1894:../CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1895:../CMSIS/Include/core_cm4.h **** 
1896:../CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1897:../CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1898:../CMSIS/Include/core_cm4.h **** 
1899:../CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1900:../CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1901:../CMSIS/Include/core_cm4.h **** }
1902:../CMSIS/Include/core_cm4.h **** 
1903:../CMSIS/Include/core_cm4.h **** 
1904:../CMSIS/Include/core_cm4.h **** /**
1905:../CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1906:../CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1907:../CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1908:../CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1909:../CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1910:../CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1911:../CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1912:../CMSIS/Include/core_cm4.h ****  */
1913:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1914:../CMSIS/Include/core_cm4.h **** {
1915:../CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1916:../CMSIS/Include/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1917:../CMSIS/Include/core_cm4.h **** }
1918:../CMSIS/Include/core_cm4.h **** 
1919:../CMSIS/Include/core_cm4.h **** 
1920:../CMSIS/Include/core_cm4.h **** /**
1921:../CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1922:../CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1923:../CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1924:../CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1925:../CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1926:../CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
ARM GAS  /tmp/ccyJgjqn.s 			page 86


1927:../CMSIS/Include/core_cm4.h ****  */
1928:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1929:../CMSIS/Include/core_cm4.h **** {
1930:../CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1931:../CMSIS/Include/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1932:../CMSIS/Include/core_cm4.h **** }
1933:../CMSIS/Include/core_cm4.h **** 
1934:../CMSIS/Include/core_cm4.h **** 
1935:../CMSIS/Include/core_cm4.h **** /**
1936:../CMSIS/Include/core_cm4.h ****   \brief   System Reset
1937:../CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1938:../CMSIS/Include/core_cm4.h ****  */
1939:../CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1940:../CMSIS/Include/core_cm4.h **** {
1941:../CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1942:../CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1943:../CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1944:../CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1945:../CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1946:../CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1947:../CMSIS/Include/core_cm4.h **** 
1948:../CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1949:../CMSIS/Include/core_cm4.h ****   {
1950:../CMSIS/Include/core_cm4.h ****     __NOP();
1951:../CMSIS/Include/core_cm4.h ****   }
1952:../CMSIS/Include/core_cm4.h **** }
1953:../CMSIS/Include/core_cm4.h **** 
1954:../CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1955:../CMSIS/Include/core_cm4.h **** 
1956:../CMSIS/Include/core_cm4.h **** /* ##########################  MPU functions  #################################### */
1957:../CMSIS/Include/core_cm4.h **** 
1958:../CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1959:../CMSIS/Include/core_cm4.h **** 
1960:../CMSIS/Include/core_cm4.h **** #include "mpu_armv7.h"
1961:../CMSIS/Include/core_cm4.h **** 
1962:../CMSIS/Include/core_cm4.h **** #endif
1963:../CMSIS/Include/core_cm4.h **** 
1964:../CMSIS/Include/core_cm4.h **** 
1965:../CMSIS/Include/core_cm4.h **** /* ##########################  FPU functions  #################################### */
1966:../CMSIS/Include/core_cm4.h **** /**
1967:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1968:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
1969:../CMSIS/Include/core_cm4.h ****   \brief    Function that provides FPU type.
1970:../CMSIS/Include/core_cm4.h ****   @{
1971:../CMSIS/Include/core_cm4.h ****  */
1972:../CMSIS/Include/core_cm4.h **** 
1973:../CMSIS/Include/core_cm4.h **** /**
1974:../CMSIS/Include/core_cm4.h ****   \brief   get FPU type
1975:../CMSIS/Include/core_cm4.h ****   \details returns the FPU type
1976:../CMSIS/Include/core_cm4.h ****   \returns
1977:../CMSIS/Include/core_cm4.h ****    - \b  0: No FPU
1978:../CMSIS/Include/core_cm4.h ****    - \b  1: Single precision FPU
1979:../CMSIS/Include/core_cm4.h ****    - \b  2: Double + Single precision FPU
1980:../CMSIS/Include/core_cm4.h ****  */
1981:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
1982:../CMSIS/Include/core_cm4.h **** {
1983:../CMSIS/Include/core_cm4.h ****   uint32_t mvfr0;
ARM GAS  /tmp/ccyJgjqn.s 			page 87


1984:../CMSIS/Include/core_cm4.h **** 
1985:../CMSIS/Include/core_cm4.h ****   mvfr0 = FPU->MVFR0;
1986:../CMSIS/Include/core_cm4.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1987:../CMSIS/Include/core_cm4.h ****   {
1988:../CMSIS/Include/core_cm4.h ****     return 1U;           /* Single precision FPU */
1989:../CMSIS/Include/core_cm4.h ****   }
1990:../CMSIS/Include/core_cm4.h ****   else
1991:../CMSIS/Include/core_cm4.h ****   {
1992:../CMSIS/Include/core_cm4.h ****     return 0U;           /* No FPU */
1993:../CMSIS/Include/core_cm4.h ****   }
1994:../CMSIS/Include/core_cm4.h **** }
1995:../CMSIS/Include/core_cm4.h **** 
1996:../CMSIS/Include/core_cm4.h **** 
1997:../CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_FpuFunctions */
1998:../CMSIS/Include/core_cm4.h **** 
1999:../CMSIS/Include/core_cm4.h **** 
2000:../CMSIS/Include/core_cm4.h **** 
2001:../CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
2002:../CMSIS/Include/core_cm4.h **** /**
2003:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
2004:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2005:../CMSIS/Include/core_cm4.h ****   \brief    Functions that configure the System.
2006:../CMSIS/Include/core_cm4.h ****   @{
2007:../CMSIS/Include/core_cm4.h ****  */
2008:../CMSIS/Include/core_cm4.h **** 
2009:../CMSIS/Include/core_cm4.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2010:../CMSIS/Include/core_cm4.h **** 
2011:../CMSIS/Include/core_cm4.h **** /**
2012:../CMSIS/Include/core_cm4.h ****   \brief   System Tick Configuration
2013:../CMSIS/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2014:../CMSIS/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
2015:../CMSIS/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2016:../CMSIS/Include/core_cm4.h ****   \return          0  Function succeeded.
2017:../CMSIS/Include/core_cm4.h ****   \return          1  Function failed.
2018:../CMSIS/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2019:../CMSIS/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2020:../CMSIS/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
2021:../CMSIS/Include/core_cm4.h ****  */
2022:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 2251              		.loc 2 2022 26 view .LVU605
 2252              	.LBB21:
2023:../CMSIS/Include/core_cm4.h **** {
2024:../CMSIS/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 2253              		.loc 2 2024 3 view .LVU606
 2254              		.loc 2 2024 14 is_stmt 0 view .LVU607
 2255 007c 013B     		subs	r3, r3, #1
 2256              	.LVL146:
 2257              		.loc 2 2024 6 view .LVU608
 2258 007e B3F1807F 		cmp	r3, #16777216
 2259 0082 09D2     		bcs	.L154
2025:../CMSIS/Include/core_cm4.h ****   {
2026:../CMSIS/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
2027:../CMSIS/Include/core_cm4.h ****   }
2028:../CMSIS/Include/core_cm4.h **** 
2029:../CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 2260              		.loc 2 2029 3 is_stmt 1 view .LVU609
 2261              		.loc 2 2029 18 is_stmt 0 view .LVU610
ARM GAS  /tmp/ccyJgjqn.s 			page 88


 2262 0084 154A     		ldr	r2, .L157+24
 2263 0086 5360     		str	r3, [r2, #4]
2030:../CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 2264              		.loc 2 2030 3 is_stmt 1 view .LVU611
 2265              	.LVL147:
 2266              	.LBB22:
 2267              	.LBI22:
1816:../CMSIS/Include/core_cm4.h **** {
 2268              		.loc 2 1816 22 view .LVU612
 2269              	.LBB23:
1818:../CMSIS/Include/core_cm4.h ****   {
 2270              		.loc 2 1818 3 view .LVU613
1824:../CMSIS/Include/core_cm4.h ****   }
 2271              		.loc 2 1824 5 view .LVU614
1824:../CMSIS/Include/core_cm4.h ****   }
 2272              		.loc 2 1824 46 is_stmt 0 view .LVU615
 2273 0088 154B     		ldr	r3, .L157+28
 2274              	.LVL148:
1824:../CMSIS/Include/core_cm4.h ****   }
 2275              		.loc 2 1824 46 view .LVU616
 2276 008a F021     		movs	r1, #240
 2277 008c 83F82310 		strb	r1, [r3, #35]
 2278              	.LVL149:
1824:../CMSIS/Include/core_cm4.h ****   }
 2279              		.loc 2 1824 46 view .LVU617
 2280              	.LBE23:
 2281              	.LBE22:
2031:../CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 2282              		.loc 2 2031 3 is_stmt 1 view .LVU618
 2283              		.loc 2 2031 18 is_stmt 0 view .LVU619
 2284 0090 0023     		movs	r3, #0
 2285 0092 9360     		str	r3, [r2, #8]
2032:../CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 2286              		.loc 2 2032 3 is_stmt 1 view .LVU620
 2287              		.loc 2 2032 18 is_stmt 0 view .LVU621
 2288 0094 0723     		movs	r3, #7
 2289 0096 1360     		str	r3, [r2]
2033:../CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
2034:../CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2035:../CMSIS/Include/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 2290              		.loc 2 2035 3 is_stmt 1 view .LVU622
 2291              	.L154:
 2292              		.loc 2 2035 3 is_stmt 0 view .LVU623
 2293              	.LBE21:
 2294              	.LBE20:
 567:main.c        **** 
 568:main.c        ****     sendViaUsart3("\n\r\n\r");
 2295              		.loc 1 568 5 is_stmt 1 view .LVU624
 2296 0098 1248     		ldr	r0, .L157+32
 2297 009a FFF7FEFF 		bl	sendViaUsart3
 2298              	.LVL150:
 569:main.c        **** 	sendViaUsart3("Enter value to send on display:\n\r");
 2299              		.loc 1 569 2 view .LVU625
 2300 009e 1248     		ldr	r0, .L157+36
 2301 00a0 FFF7FEFF 		bl	sendViaUsart3
 2302              	.LVL151:
 570:main.c        **** 
ARM GAS  /tmp/ccyJgjqn.s 			page 89


 571:main.c        ****     displayValue = 9999;
 2303              		.loc 1 571 5 view .LVU626
 2304              		.loc 1 571 18 is_stmt 0 view .LVU627
 2305 00a4 114C     		ldr	r4, .L157+40
 2306 00a6 42F20F73 		movw	r3, #9999
 2307 00aa 2380     		strh	r3, [r4]	@ movhi
 572:main.c        **** 	enableEEPROM();
 2308              		.loc 1 572 2 is_stmt 1 view .LVU628
 2309 00ac FFF7FEFF 		bl	enableEEPROM
 2310              	.LVL152:
 573:main.c        **** 	writeToEEPROM(displayValue,BINARY);
 2311              		.loc 1 573 2 view .LVU629
 2312 00b0 0121     		movs	r1, #1
 2313 00b2 2088     		ldrh	r0, [r4]
 2314 00b4 FFF7FEFF 		bl	writeToEEPROM
 2315              	.LVL153:
 574:main.c        **** 	sTicks = 0;
 2316              		.loc 1 574 2 view .LVU630
 2317              		.loc 1 574 9 is_stmt 0 view .LVU631
 2318 00b8 0D4B     		ldr	r3, .L157+44
 2319 00ba 0022     		movs	r2, #0
 2320 00bc 1A60     		str	r2, [r3]
 2321              	.L155:
 575:main.c        **** 
 576:main.c        ****     while(1) {
 2322              		.loc 1 576 5 is_stmt 1 discriminator 1 view .LVU632
 577:main.c        **** 
 578:main.c        **** 		driveShield();
 2323              		.loc 1 578 3 discriminator 1 view .LVU633
 2324 00be FFF7FEFF 		bl	driveShield
 2325              	.LVL154:
 576:main.c        **** 
 2326              		.loc 1 576 10 discriminator 1 view .LVU634
 2327 00c2 FCE7     		b	.L155
 2328              	.L158:
 2329              		.align	2
 2330              	.L157:
 2331 00c4 00540140 		.word	1073828864
 2332 00c8 00380240 		.word	1073887232
 2333 00cc 00000240 		.word	1073872896
 2334 00d0 001C0240 		.word	1073880064
 2335 00d4 00000000 		.word	SystemCoreClock
 2336 00d8 B1DB9717 		.word	395828145
 2337 00dc 10E000E0 		.word	-536813552
 2338 00e0 00ED00E0 		.word	-536810240
 2339 00e4 00000000 		.word	.LC3
 2340 00e8 08000000 		.word	.LC4
 2341 00ec 00000000 		.word	.LANCHOR6
 2342 00f0 00000000 		.word	.LANCHOR3
 2343              		.cfi_endproc
 2344              	.LFE153:
 2346              		.comm	itoa_output,12,4
 2347              		.global	displayValueUsart3Symbols
 2348              		.global	displayValueUsart3
 2349              		.global	displayValue
 2350              		.global	sTicks
 2351              		.global	ticks
ARM GAS  /tmp/ccyJgjqn.s 			page 90


 2352              		.global	digit_array
 2353              		.global	key_array
 2354              		.global	led_array
 2355              		.global	errorInvalidValue
 2356              		.global	errorInvalidMode
 2357              		.section	.rodata
 2358              		.align	2
 2359              	.LC5:
 2360 0000 4552524F 		.ascii	"ERROR: Value should vary between 0 and 9999\012\015"
 2360      523A2056 
 2360      616C7565 
 2360      2073686F 
 2360      756C6420 
 2361 002d 0000     		.ascii	"\000\000"
 2362 002f 00       		.space	1
 2363              	.LC6:
 2364 0030 4552524F 		.ascii	"ERROR: Invalid memory output mode\012\015\000\000"
 2364      523A2049 
 2364      6E76616C 
 2364      6964206D 
 2364      656D6F72 
 2365              		.section	.bss.displayValueUsart3,"aw",%nobits
 2366              		.align	1
 2367              		.set	.LANCHOR5,. + 0
 2370              	displayValueUsart3:
 2371 0000 0000     		.space	2
 2372              		.section	.bss.displayValueUsart3Symbols,"aw",%nobits
 2373              		.align	1
 2374              		.set	.LANCHOR4,. + 0
 2377              	displayValueUsart3Symbols:
 2378 0000 0000     		.space	2
 2379              		.section	.bss.sTicks,"aw",%nobits
 2380              		.align	2
 2381              		.set	.LANCHOR3,. + 0
 2384              	sTicks:
 2385 0000 00000000 		.space	4
 2386              		.section	.bss.ticks,"aw",%nobits
 2387              		.align	2
 2388              		.set	.LANCHOR0,. + 0
 2391              	ticks:
 2392 0000 00000000 		.space	4
 2393              		.section	.data.digit_array,"aw"
 2394              		.align	2
 2395              		.set	.LANCHOR8,. + 0
 2398              	digit_array:
 2399 0000 9858     		.short	22680
 2400 0002 8040     		.short	16512
 2401 0004 8898     		.short	-26488
 2402 0006 88D0     		.short	-12152
 2403 0008 90C0     		.short	-16240
 2404 000a 18D0     		.short	-12264
 2405 000c 18D8     		.short	-10216
 2406 000e 8840     		.short	16520
 2407 0010 98D8     		.short	-10088
 2408 0012 98D0     		.short	-12136
 2409              		.section	.data.displayValue,"aw"
 2410              		.align	1
ARM GAS  /tmp/ccyJgjqn.s 			page 91


 2411              		.set	.LANCHOR6,. + 0
 2414              	displayValue:
 2415 0000 0F27     		.short	9999
 2416              		.section	.data.errorInvalidMode,"aw"
 2417              		.align	2
 2418              		.set	.LANCHOR2,. + 0
 2421              	errorInvalidMode:
 2422 0000 30000000 		.word	.LC6
 2423              		.section	.data.errorInvalidValue,"aw"
 2424              		.align	2
 2425              		.set	.LANCHOR1,. + 0
 2428              	errorInvalidValue:
 2429 0000 00000000 		.word	.LC5
 2430              		.section	.data.key_array,"aw"
 2431              		.align	2
 2434              	key_array:
 2435 0000 0002     		.short	512
 2436 0002 0001     		.short	256
 2437 0004 0100     		.short	1
 2438 0006 0004     		.short	1024
 2439              		.section	.data.led_array,"aw"
 2440              		.align	2
 2441              		.set	.LANCHOR7,. + 0
 2444              	led_array:
 2445 0000 0400     		.short	4
 2446 0002 2000     		.short	32
 2447 0004 4000     		.short	64
 2448 0006 0200     		.short	2
 2449              		.text
 2450              	.Letext0:
 2451              		.file 3 "../CMSIS/Device/ST/STM32F4xx/Include/stm32f469xx.h"
 2452              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 2453              		.file 5 "../CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2454              		.file 6 "./util/util.h"
ARM GAS  /tmp/ccyJgjqn.s 			page 92


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccyJgjqn.s:18     .text.delayMs:0000000000000000 $t
     /tmp/ccyJgjqn.s:26     .text.delayMs:0000000000000000 delayMs
     /tmp/ccyJgjqn.s:58     .text.delayMs:0000000000000018 $d
     /tmp/ccyJgjqn.s:63     .text.delayMcs:0000000000000000 $t
     /tmp/ccyJgjqn.s:70     .text.delayMcs:0000000000000000 delayMcs
     /tmp/ccyJgjqn.s:98     .text.delayMcs:0000000000000010 $d
     /tmp/ccyJgjqn.s:103    .text.blinkLed:0000000000000000 $t
     /tmp/ccyJgjqn.s:110    .text.blinkLed:0000000000000000 blinkLed
     /tmp/ccyJgjqn.s:141    .text.blinkLed:000000000000001c $d
     /tmp/ccyJgjqn.s:146    .text.sendViaUsart3:0000000000000000 $t
     /tmp/ccyJgjqn.s:153    .text.sendViaUsart3:0000000000000000 sendViaUsart3
     /tmp/ccyJgjqn.s:207    .text.sendViaUsart3:0000000000000028 $d
     /tmp/ccyJgjqn.s:212    .text.sendViaSPI6:0000000000000000 $t
     /tmp/ccyJgjqn.s:219    .text.sendViaSPI6:0000000000000000 sendViaSPI6
     /tmp/ccyJgjqn.s:246    .text.sendViaSPI6:0000000000000010 $d
     /tmp/ccyJgjqn.s:251    .text.sendViaSPI2:0000000000000000 $t
     /tmp/ccyJgjqn.s:258    .text.sendViaSPI2:0000000000000000 sendViaSPI2
     /tmp/ccyJgjqn.s:285    .text.sendViaSPI2:0000000000000010 $d
     /tmp/ccyJgjqn.s:290    .text.csUp:0000000000000000 $t
     /tmp/ccyJgjqn.s:297    .text.csUp:0000000000000000 csUp
     /tmp/ccyJgjqn.s:315    .text.csUp:000000000000000c $d
     /tmp/ccyJgjqn.s:320    .text.csDown:0000000000000000 $t
     /tmp/ccyJgjqn.s:327    .text.csDown:0000000000000000 csDown
     /tmp/ccyJgjqn.s:345    .text.csDown:000000000000000c $d
     /tmp/ccyJgjqn.s:350    .text.enableEEPROM:0000000000000000 $t
     /tmp/ccyJgjqn.s:357    .text.enableEEPROM:0000000000000000 enableEEPROM
     /tmp/ccyJgjqn.s:444    .rodata.writeToEEPROM.str1.4:0000000000000000 $d
     /tmp/ccyJgjqn.s:448    .text.writeToEEPROM:0000000000000000 $t
     /tmp/ccyJgjqn.s:455    .text.writeToEEPROM:0000000000000000 writeToEEPROM
     /tmp/ccyJgjqn.s:649    .text.writeToEEPROM:000000000000011c $d
     /tmp/ccyJgjqn.s:659    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccyJgjqn.s:666    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccyJgjqn.s:725    .text.SysTick_Handler:000000000000004c $d
     /tmp/ccyJgjqn.s:734    .text.power:0000000000000000 $t
     /tmp/ccyJgjqn.s:741    .text.power:0000000000000000 power
     /tmp/ccyJgjqn.s:796    .text.strlen:0000000000000000 $t
     /tmp/ccyJgjqn.s:803    .text.strlen:0000000000000000 strlen
     /tmp/ccyJgjqn.s:850    .rodata.itoa.str1.4:0000000000000000 $d
     /tmp/ccyJgjqn.s:854    .text.itoa:0000000000000000 $t
     /tmp/ccyJgjqn.s:861    .text.itoa:0000000000000000 itoa
     /tmp/ccyJgjqn.s:1000   .text.itoa:000000000000006c $d
                            *COM*:000000000000000c itoa_output
     /tmp/ccyJgjqn.s:1007   .text.isize:0000000000000000 $t
     /tmp/ccyJgjqn.s:1014   .text.isize:0000000000000000 isize
     /tmp/ccyJgjqn.s:1080   .text.isize:000000000000002c $d
     /tmp/ccyJgjqn.s:1085   .rodata.USART3_IRQHandler.str1.4:0000000000000000 $d
     /tmp/ccyJgjqn.s:1089   .text.USART3_IRQHandler:0000000000000000 $t
     /tmp/ccyJgjqn.s:1096   .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
     /tmp/ccyJgjqn.s:1360   .text.USART3_IRQHandler:0000000000000108 $d
     /tmp/ccyJgjqn.s:1375   .text.UART3Init:0000000000000000 $t
     /tmp/ccyJgjqn.s:1382   .text.UART3Init:0000000000000000 UART3Init
     /tmp/ccyJgjqn.s:1503   .text.UART3Init:00000000000000a0 $d
     /tmp/ccyJgjqn.s:1509   .text.SPI2Init:0000000000000000 $t
     /tmp/ccyJgjqn.s:1516   .text.SPI2Init:0000000000000000 SPI2Init
     /tmp/ccyJgjqn.s:1687   .text.SPI2Init:0000000000000104 $d
ARM GAS  /tmp/ccyJgjqn.s 			page 93


     /tmp/ccyJgjqn.s:1694   .text.SPI6Init:0000000000000000 $t
     /tmp/ccyJgjqn.s:1701   .text.SPI6Init:0000000000000000 SPI6Init
     /tmp/ccyJgjqn.s:1866   .text.SPI6Init:00000000000000fc $d
     /tmp/ccyJgjqn.s:1871   .text.rclkRise:0000000000000000 $t
     /tmp/ccyJgjqn.s:1878   .text.rclkRise:0000000000000000 rclkRise
     /tmp/ccyJgjqn.s:1909   .text.rclkRise:0000000000000020 $d
     /tmp/ccyJgjqn.s:1914   .text.registerUpdate:0000000000000000 $t
     /tmp/ccyJgjqn.s:1921   .text.registerUpdate:0000000000000000 registerUpdate
     /tmp/ccyJgjqn.s:1941   .text.setDigit:0000000000000000 $t
     /tmp/ccyJgjqn.s:1948   .text.setDigit:0000000000000000 setDigit
     /tmp/ccyJgjqn.s:1999   .text.setDigit:000000000000002c $d
     /tmp/ccyJgjqn.s:2004   .text.driveShield:0000000000000000 $t
     /tmp/ccyJgjqn.s:2011   .text.driveShield:0000000000000000 driveShield
     /tmp/ccyJgjqn.s:2138   .text.driveShield:0000000000000098 $d
     /tmp/ccyJgjqn.s:2148   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccyJgjqn.s:2155   .text.main:0000000000000000 $t
     /tmp/ccyJgjqn.s:2162   .text.main:0000000000000000 main
     /tmp/ccyJgjqn.s:2331   .text.main:00000000000000c4 $d
     /tmp/ccyJgjqn.s:2377   .bss.displayValueUsart3Symbols:0000000000000000 displayValueUsart3Symbols
     /tmp/ccyJgjqn.s:2370   .bss.displayValueUsart3:0000000000000000 displayValueUsart3
     /tmp/ccyJgjqn.s:2414   .data.displayValue:0000000000000000 displayValue
     /tmp/ccyJgjqn.s:2384   .bss.sTicks:0000000000000000 sTicks
     /tmp/ccyJgjqn.s:2391   .bss.ticks:0000000000000000 ticks
     /tmp/ccyJgjqn.s:2398   .data.digit_array:0000000000000000 digit_array
     /tmp/ccyJgjqn.s:2434   .data.key_array:0000000000000000 key_array
     /tmp/ccyJgjqn.s:2444   .data.led_array:0000000000000000 led_array
     /tmp/ccyJgjqn.s:2428   .data.errorInvalidValue:0000000000000000 errorInvalidValue
     /tmp/ccyJgjqn.s:2421   .data.errorInvalidMode:0000000000000000 errorInvalidMode
     /tmp/ccyJgjqn.s:2358   .rodata:0000000000000000 $d
     /tmp/ccyJgjqn.s:2366   .bss.displayValueUsart3:0000000000000000 $d
     /tmp/ccyJgjqn.s:2373   .bss.displayValueUsart3Symbols:0000000000000000 $d
     /tmp/ccyJgjqn.s:2380   .bss.sTicks:0000000000000000 $d
     /tmp/ccyJgjqn.s:2387   .bss.ticks:0000000000000000 $d
     /tmp/ccyJgjqn.s:2394   .data.digit_array:0000000000000000 $d
     /tmp/ccyJgjqn.s:2410   .data.displayValue:0000000000000000 $d
     /tmp/ccyJgjqn.s:2417   .data.errorInvalidMode:0000000000000000 $d
     /tmp/ccyJgjqn.s:2424   .data.errorInvalidValue:0000000000000000 $d
     /tmp/ccyJgjqn.s:2431   .data.key_array:0000000000000000 $d
     /tmp/ccyJgjqn.s:2440   .data.led_array:0000000000000000 $d

UNDEFINED SYMBOLS
set_sysclk_max
SystemCoreClock
