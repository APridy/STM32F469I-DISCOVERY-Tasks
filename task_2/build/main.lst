ARM GAS  /tmp/ccTO0K2N.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.delayMs,"ax",%progbits
  18              		.align	1
  19              		.global	delayMs
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	delayMs:
  27              	.LVL0:
  28              	.LFB130:
  29              		.file 1 "main.c"
   1:main.c        **** #include "stm32f4xx.h"
   2:main.c        **** #include "util.h"
   3:main.c        **** 
   4:main.c        **** volatile int ticks = 0;
   5:main.c        **** 
   6:main.c        **** void delayMs(int ms) { // delay in miliseconds
  30              		.loc 1 6 22 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
   7:main.c        ****     ticks = 0;
  35              		.loc 1 7 5 view .LVU1
  36              		.loc 1 7 11 is_stmt 0 view .LVU2
  37 0000 034B     		ldr	r3, .L3
  38 0002 0022     		movs	r2, #0
  39 0004 1A60     		str	r2, [r3]
   8:main.c        ****     while(ticks < ms);
  40              		.loc 1 8 5 is_stmt 1 view .LVU3
  41              	.L2:
  42              		.loc 1 8 22 discriminator 1 view .LVU4
  43              		.loc 1 8 10 discriminator 1 view .LVU5
  44              		.loc 1 8 17 is_stmt 0 discriminator 1 view .LVU6
  45 0006 024B     		ldr	r3, .L3
  46 0008 1B68     		ldr	r3, [r3]
  47              		.loc 1 8 10 discriminator 1 view .LVU7
  48 000a 8342     		cmp	r3, r0
  49 000c FBDB     		blt	.L2
   9:main.c        **** }
ARM GAS  /tmp/ccTO0K2N.s 			page 2


  50              		.loc 1 9 1 view .LVU8
  51 000e 7047     		bx	lr
  52              	.L4:
  53              		.align	2
  54              	.L3:
  55 0010 00000000 		.word	.LANCHOR0
  56              		.cfi_endproc
  57              	.LFE130:
  59              		.section	.text.SysTick_Handler,"ax",%progbits
  60              		.align	1
  61              		.global	SysTick_Handler
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	SysTick_Handler:
  68              	.LFB131:
  10:main.c        **** 
  11:main.c        **** void SysTick_Handler(void) { // redefinition of SysTick_Handler
  69              		.loc 1 11 28 is_stmt 1 view -0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  12:main.c        ****     ticks++;
  74              		.loc 1 12 5 view .LVU10
  75              		.loc 1 12 10 is_stmt 0 view .LVU11
  76 0000 024A     		ldr	r2, .L6
  77 0002 1368     		ldr	r3, [r2]
  78 0004 0133     		adds	r3, r3, #1
  79 0006 1360     		str	r3, [r2]
  13:main.c        **** }
  80              		.loc 1 13 1 view .LVU12
  81 0008 7047     		bx	lr
  82              	.L7:
  83 000a 00BF     		.align	2
  84              	.L6:
  85 000c 00000000 		.word	.LANCHOR0
  86              		.cfi_endproc
  87              	.LFE131:
  89              		.section	.text.txUp,"ax",%progbits
  90              		.align	1
  91              		.global	txUp
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu fpv4-sp-d16
  97              	txUp:
  98              	.LFB132:
  14:main.c        **** 
  15:main.c        **** void txUp() {
  99              		.loc 1 15 13 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
  16:main.c        ****     GPIOG->BSRR |= GPIO_BSRR_BS14;
ARM GAS  /tmp/ccTO0K2N.s 			page 3


 104              		.loc 1 16 5 view .LVU14
 105              		.loc 1 16 17 is_stmt 0 view .LVU15
 106 0000 024A     		ldr	r2, .L9
 107 0002 9369     		ldr	r3, [r2, #24]
 108 0004 43F48043 		orr	r3, r3, #16384
 109 0008 9361     		str	r3, [r2, #24]
  17:main.c        **** }
 110              		.loc 1 17 1 view .LVU16
 111 000a 7047     		bx	lr
 112              	.L10:
 113              		.align	2
 114              	.L9:
 115 000c 00180240 		.word	1073879040
 116              		.cfi_endproc
 117              	.LFE132:
 119              		.section	.text.txDown,"ax",%progbits
 120              		.align	1
 121              		.global	txDown
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu fpv4-sp-d16
 127              	txDown:
 128              	.LFB133:
  18:main.c        **** 
  19:main.c        **** void txDown() {
 129              		.loc 1 19 15 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
  20:main.c        ****     GPIOG->BSRR |= GPIO_BSRR_BR14;
 134              		.loc 1 20 5 view .LVU18
 135              		.loc 1 20 17 is_stmt 0 view .LVU19
 136 0000 024A     		ldr	r2, .L12
 137 0002 9369     		ldr	r3, [r2, #24]
 138 0004 43F08043 		orr	r3, r3, #1073741824
 139 0008 9361     		str	r3, [r2, #24]
  21:main.c        **** }
 140              		.loc 1 21 1 view .LVU20
 141 000a 7047     		bx	lr
 142              	.L13:
 143              		.align	2
 144              	.L12:
 145 000c 00180240 		.word	1073879040
 146              		.cfi_endproc
 147              	.LFE133:
 149              		.section	.text.sendViaUsart,"ax",%progbits
 150              		.align	1
 151              		.global	sendViaUsart
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 155              		.fpu fpv4-sp-d16
 157              	sendViaUsart:
 158              	.LVL1:
 159              	.LFB134:
ARM GAS  /tmp/ccTO0K2N.s 			page 4


  22:main.c        **** 
  23:main.c        **** void sendViaUsart(const char* msg) {
 160              		.loc 1 23 36 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		.loc 1 23 36 is_stmt 0 view .LVU22
 165 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 166              	.LCFI0:
 167              		.cfi_def_cfa_offset 24
 168              		.cfi_offset 3, -24
 169              		.cfi_offset 4, -20
 170              		.cfi_offset 5, -16
 171              		.cfi_offset 6, -12
 172              		.cfi_offset 7, -8
 173              		.cfi_offset 14, -4
 174 0002 0746     		mov	r7, r0
  24:main.c        **** 
  25:main.c        ****     for(int i = 0; msg[i] != '\0'; i++) {
 175              		.loc 1 25 5 is_stmt 1 view .LVU23
 176              	.LBB8:
 177              		.loc 1 25 9 view .LVU24
 178              	.LVL2:
 179              		.loc 1 25 13 is_stmt 0 view .LVU25
 180 0004 0026     		movs	r6, #0
 181              		.loc 1 25 5 view .LVU26
 182 0006 15E0     		b	.L15
 183              	.LVL3:
 184              	.L17:
 185              	.LBB9:
  26:main.c        ****         txDown();
  27:main.c        ****         delayMs(1);
  28:main.c        ****         for(int j = 0; j < 8; j++) {
  29:main.c        ****             if((msg[i] >> j) & 1) { txUp(); }
  30:main.c        ****             else txDown();
 186              		.loc 1 30 18 is_stmt 1 view .LVU27
 187 0008 FFF7FEFF 		bl	txDown
 188              	.LVL4:
 189              	.L18:
  31:main.c        ****             delayMs(1);
 190              		.loc 1 31 13 discriminator 2 view .LVU28
 191 000c 0120     		movs	r0, #1
 192 000e FFF7FEFF 		bl	delayMs
 193              	.LVL5:
  28:main.c        ****             if((msg[i] >> j) & 1) { txUp(); }
 194              		.loc 1 28 31 discriminator 2 view .LVU29
  28:main.c        ****             if((msg[i] >> j) & 1) { txUp(); }
 195              		.loc 1 28 32 is_stmt 0 discriminator 2 view .LVU30
 196 0012 0134     		adds	r4, r4, #1
 197              	.LVL6:
 198              	.L16:
  28:main.c        ****             if((msg[i] >> j) & 1) { txUp(); }
 199              		.loc 1 28 24 is_stmt 1 discriminator 1 view .LVU31
  28:main.c        ****             if((msg[i] >> j) & 1) { txUp(); }
 200              		.loc 1 28 9 is_stmt 0 discriminator 1 view .LVU32
 201 0014 072C     		cmp	r4, #7
 202 0016 07DC     		bgt	.L22
ARM GAS  /tmp/ccTO0K2N.s 			page 5


  29:main.c        ****             else txDown();
 203              		.loc 1 29 13 is_stmt 1 view .LVU33
  29:main.c        ****             else txDown();
 204              		.loc 1 29 20 is_stmt 0 view .LVU34
 205 0018 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  29:main.c        ****             else txDown();
 206              		.loc 1 29 24 view .LVU35
 207 001a 2341     		asrs	r3, r3, r4
  29:main.c        ****             else txDown();
 208              		.loc 1 29 15 view .LVU36
 209 001c 13F0010F 		tst	r3, #1
 210 0020 F2D0     		beq	.L17
  29:main.c        ****             else txDown();
 211              		.loc 1 29 37 is_stmt 1 discriminator 1 view .LVU37
 212 0022 FFF7FEFF 		bl	txUp
 213              	.LVL7:
 214 0026 F1E7     		b	.L18
 215              	.L22:
 216              	.LBE9:
  32:main.c        ****         }
  33:main.c        ****         txUp();
 217              		.loc 1 33 9 discriminator 2 view .LVU38
 218 0028 FFF7FEFF 		bl	txUp
 219              	.LVL8:
  34:main.c        ****         delayMs(1);
 220              		.loc 1 34 9 discriminator 2 view .LVU39
 221 002c 0120     		movs	r0, #1
 222 002e FFF7FEFF 		bl	delayMs
 223              	.LVL9:
  25:main.c        ****         txDown();
 224              		.loc 1 25 36 discriminator 2 view .LVU40
  25:main.c        ****         txDown();
 225              		.loc 1 25 37 is_stmt 0 discriminator 2 view .LVU41
 226 0032 0136     		adds	r6, r6, #1
 227              	.LVL10:
 228              	.L15:
  25:main.c        ****         txDown();
 229              		.loc 1 25 20 is_stmt 1 discriminator 1 view .LVU42
  25:main.c        ****         txDown();
 230              		.loc 1 25 23 is_stmt 0 discriminator 1 view .LVU43
 231 0034 BD19     		adds	r5, r7, r6
 232 0036 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
  25:main.c        ****         txDown();
 233              		.loc 1 25 5 discriminator 1 view .LVU44
 234 0038 33B1     		cbz	r3, .L23
  26:main.c        ****         delayMs(1);
 235              		.loc 1 26 9 is_stmt 1 view .LVU45
 236 003a FFF7FEFF 		bl	txDown
 237              	.LVL11:
  27:main.c        ****         for(int j = 0; j < 8; j++) {
 238              		.loc 1 27 9 view .LVU46
 239 003e 0120     		movs	r0, #1
 240 0040 FFF7FEFF 		bl	delayMs
 241              	.LVL12:
  28:main.c        ****             if((msg[i] >> j) & 1) { txUp(); }
 242              		.loc 1 28 9 view .LVU47
 243              	.LBB10:
ARM GAS  /tmp/ccTO0K2N.s 			page 6


  28:main.c        ****             if((msg[i] >> j) & 1) { txUp(); }
 244              		.loc 1 28 13 view .LVU48
  28:main.c        ****             if((msg[i] >> j) & 1) { txUp(); }
 245              		.loc 1 28 17 is_stmt 0 view .LVU49
 246 0044 0024     		movs	r4, #0
  28:main.c        ****             if((msg[i] >> j) & 1) { txUp(); }
 247              		.loc 1 28 9 view .LVU50
 248 0046 E5E7     		b	.L16
 249              	.LVL13:
 250              	.L23:
  28:main.c        ****             if((msg[i] >> j) & 1) { txUp(); }
 251              		.loc 1 28 9 view .LVU51
 252              	.LBE10:
 253              	.LBE8:
  35:main.c        ****     }
  36:main.c        **** 
  37:main.c        **** }
 254              		.loc 1 37 1 view .LVU52
 255 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 256              		.loc 1 37 1 view .LVU53
 257              		.cfi_endproc
 258              	.LFE134:
 260              		.section	.text.UART6Config,"ax",%progbits
 261              		.align	1
 262              		.global	UART6Config
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu fpv4-sp-d16
 268              	UART6Config:
 269              	.LFB135:
  38:main.c        **** 
  39:main.c        **** void UART6Config() {
 270              		.loc 1 39 20 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
  40:main.c        **** 
  41:main.c        ****     RCC->APB2ENR |= RCC_APB2ENR_USART6EN;  // enable USART6 clock, bit 5 on APB2ENR
 275              		.loc 1 41 5 view .LVU55
 276              		.loc 1 41 18 is_stmt 0 view .LVU56
 277 0000 134B     		ldr	r3, .L25
 278 0002 5A6C     		ldr	r2, [r3, #68]
 279 0004 42F02002 		orr	r2, r2, #32
 280 0008 5A64     		str	r2, [r3, #68]
  42:main.c        ****     RCC->AHB1ENR |= RCC_AHB1ENR_GPIOGEN;  // enable GPIOG clock, bit 6 on AHB1ENR
 281              		.loc 1 42 5 is_stmt 1 view .LVU57
 282              		.loc 1 42 18 is_stmt 0 view .LVU58
 283 000a 1A6B     		ldr	r2, [r3, #48]
 284 000c 42F04002 		orr	r2, r2, #64
 285 0010 1A63     		str	r2, [r3, #48]
  43:main.c        **** 
  44:main.c        ****     GPIOG->MODER &= ~(GPIO_MODER_MODER14_Msk);
 286              		.loc 1 44 5 is_stmt 1 view .LVU59
 287              		.loc 1 44 18 is_stmt 0 view .LVU60
 288 0012 A3F50053 		sub	r3, r3, #8192
ARM GAS  /tmp/ccTO0K2N.s 			page 7


 289 0016 1A68     		ldr	r2, [r3]
 290 0018 22F04052 		bic	r2, r2, #805306368
 291 001c 1A60     		str	r2, [r3]
  45:main.c        ****     GPIOG->MODER |= GPIO_MODER_MODER14_0; //set PG14 to output mode (USART6_TX pin)
 292              		.loc 1 45 5 is_stmt 1 view .LVU61
 293              		.loc 1 45 18 is_stmt 0 view .LVU62
 294 001e 1A68     		ldr	r2, [r3]
 295 0020 42F08052 		orr	r2, r2, #268435456
 296 0024 1A60     		str	r2, [r3]
  46:main.c        ****     GPIOG->MODER &= ~(GPIO_MODER_MODER9_Msk);
 297              		.loc 1 46 5 is_stmt 1 view .LVU63
 298              		.loc 1 46 18 is_stmt 0 view .LVU64
 299 0026 1A68     		ldr	r2, [r3]
 300 0028 22F44022 		bic	r2, r2, #786432
 301 002c 1A60     		str	r2, [r3]
  47:main.c        ****     GPIOG->MODER |= GPIO_MODER_MODER14_0; //set PG9 to output mode (USART6_RX pin)
 302              		.loc 1 47 5 is_stmt 1 view .LVU65
 303              		.loc 1 47 18 is_stmt 0 view .LVU66
 304 002e 1A68     		ldr	r2, [r3]
 305 0030 42F08052 		orr	r2, r2, #268435456
 306 0034 1A60     		str	r2, [r3]
  48:main.c        **** 
  49:main.c        ****     GPIOG->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED14_Msk|GPIO_OSPEEDR_OSPEED9_Msk);
 307              		.loc 1 49 5 is_stmt 1 view .LVU67
 308              		.loc 1 49 20 is_stmt 0 view .LVU68
 309 0036 9A68     		ldr	r2, [r3, #8]
 310 0038 22F04052 		bic	r2, r2, #805306368
 311 003c 22F44022 		bic	r2, r2, #786432
 312 0040 9A60     		str	r2, [r3, #8]
  50:main.c        ****     GPIOG->OSPEEDR |= (GPIO_OSPEEDR_OSPEED14_1|GPIO_OSPEEDR_OSPEED9_1); // Set USART6_TX and USART6
 313              		.loc 1 50 5 is_stmt 1 view .LVU69
 314              		.loc 1 50 20 is_stmt 0 view .LVU70
 315 0042 9A68     		ldr	r2, [r3, #8]
 316 0044 42F00052 		orr	r2, r2, #536870912
 317 0048 42F40022 		orr	r2, r2, #524288
 318 004c 9A60     		str	r2, [r3, #8]
  51:main.c        **** 
  52:main.c        **** }
 319              		.loc 1 52 1 view .LVU71
 320 004e 7047     		bx	lr
 321              	.L26:
 322              		.align	2
 323              	.L25:
 324 0050 00380240 		.word	1073887232
 325              		.cfi_endproc
 326              	.LFE135:
 328              		.section	.text.main,"ax",%progbits
 329              		.align	1
 330              		.global	main
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu fpv4-sp-d16
 336              	main:
 337              	.LFB136:
  53:main.c        **** 
  54:main.c        **** char* msg = "Tony Pridybailo\n\r\0";
ARM GAS  /tmp/ccTO0K2N.s 			page 8


  55:main.c        **** 
  56:main.c        **** int main(void) {
 338              		.loc 1 56 16 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ Volatile: function does not return.
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343 0000 08B5     		push	{r3, lr}
 344              	.LCFI1:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 3, -8
 347              		.cfi_offset 14, -4
  57:main.c        **** 
  58:main.c        ****     set_sysclk_max();
 348              		.loc 1 58 5 view .LVU73
 349 0002 FFF7FEFF 		bl	set_sysclk_max
 350              	.LVL14:
  59:main.c        ****     UART6Config();
 351              		.loc 1 59 5 view .LVU74
 352 0006 FFF7FEFF 		bl	UART6Config
 353              	.LVL15:
  60:main.c        ****     SysTick_Config(SystemCoreClock/(820)); //configuring systick for delay function
 354              		.loc 1 60 5 view .LVU75
 355 000a 0F4B     		ldr	r3, .L31
 356 000c 1B68     		ldr	r3, [r3]
 357 000e 0F4A     		ldr	r2, .L31+4
 358 0010 A2FB0323 		umull	r2, r3, r2, r3
 359 0014 1B0A     		lsrs	r3, r3, #8
 360              	.LVL16:
 361              	.LBB11:
 362              	.LBI11:
 363              		.file 2 "../CMSIS/Include/core_cm4.h"
   1:../CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:../CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:../CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../CMSIS/Include/core_cm4.h ****  * @version  V5.0.8
   5:../CMSIS/Include/core_cm4.h ****  * @date     04. June 2018
   6:../CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:../CMSIS/Include/core_cm4.h **** /*
   8:../CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../CMSIS/Include/core_cm4.h ****  *
  10:../CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../CMSIS/Include/core_cm4.h ****  *
  12:../CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:../CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:../CMSIS/Include/core_cm4.h ****  *
  16:../CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../CMSIS/Include/core_cm4.h ****  *
  18:../CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:../CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:../CMSIS/Include/core_cm4.h ****  */
  24:../CMSIS/Include/core_cm4.h **** 
  25:../CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
ARM GAS  /tmp/ccTO0K2N.s 			page 9


  26:../CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:../CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../CMSIS/Include/core_cm4.h **** #endif
  30:../CMSIS/Include/core_cm4.h **** 
  31:../CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../CMSIS/Include/core_cm4.h **** 
  34:../CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:../CMSIS/Include/core_cm4.h **** 
  36:../CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:../CMSIS/Include/core_cm4.h ****  extern "C" {
  38:../CMSIS/Include/core_cm4.h **** #endif
  39:../CMSIS/Include/core_cm4.h **** 
  40:../CMSIS/Include/core_cm4.h **** /**
  41:../CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../CMSIS/Include/core_cm4.h **** 
  44:../CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../CMSIS/Include/core_cm4.h **** 
  47:../CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:../CMSIS/Include/core_cm4.h **** 
  50:../CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:../CMSIS/Include/core_cm4.h ****  */
  53:../CMSIS/Include/core_cm4.h **** 
  54:../CMSIS/Include/core_cm4.h **** 
  55:../CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:../CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:../CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:../CMSIS/Include/core_cm4.h **** /**
  59:../CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:../CMSIS/Include/core_cm4.h ****   @{
  61:../CMSIS/Include/core_cm4.h ****  */
  62:../CMSIS/Include/core_cm4.h **** 
  63:../CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:../CMSIS/Include/core_cm4.h **** 
  65:../CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:../CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:../CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:../CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:../CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:../CMSIS/Include/core_cm4.h **** 
  71:../CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:../CMSIS/Include/core_cm4.h **** 
  73:../CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:../CMSIS/Include/core_cm4.h **** */
  76:../CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:../CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:../CMSIS/Include/core_cm4.h ****     #else
  81:../CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
ARM GAS  /tmp/ccTO0K2N.s 			page 10


  83:../CMSIS/Include/core_cm4.h ****     #endif
  84:../CMSIS/Include/core_cm4.h ****   #else
  85:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:../CMSIS/Include/core_cm4.h ****   #endif
  87:../CMSIS/Include/core_cm4.h **** 
  88:../CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:../CMSIS/Include/core_cm4.h ****   #if defined __ARM_PCS_VFP
  90:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:../CMSIS/Include/core_cm4.h ****     #else
  93:../CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:../CMSIS/Include/core_cm4.h ****     #endif
  96:../CMSIS/Include/core_cm4.h ****   #else
  97:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:../CMSIS/Include/core_cm4.h ****   #endif
  99:../CMSIS/Include/core_cm4.h **** 
 100:../CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:../CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:../CMSIS/Include/core_cm4.h ****     #else
 105:../CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:../CMSIS/Include/core_cm4.h ****     #endif
 108:../CMSIS/Include/core_cm4.h ****   #else
 109:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:../CMSIS/Include/core_cm4.h ****   #endif
 111:../CMSIS/Include/core_cm4.h **** 
 112:../CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:../CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:../CMSIS/Include/core_cm4.h ****     #else
 117:../CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:../CMSIS/Include/core_cm4.h ****     #endif
 120:../CMSIS/Include/core_cm4.h ****   #else
 121:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:../CMSIS/Include/core_cm4.h ****   #endif
 123:../CMSIS/Include/core_cm4.h **** 
 124:../CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:../CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:../CMSIS/Include/core_cm4.h ****     #else
 129:../CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:../CMSIS/Include/core_cm4.h ****     #endif
 132:../CMSIS/Include/core_cm4.h ****   #else
 133:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:../CMSIS/Include/core_cm4.h ****   #endif
 135:../CMSIS/Include/core_cm4.h **** 
 136:../CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:../CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
ARM GAS  /tmp/ccTO0K2N.s 			page 11


 140:../CMSIS/Include/core_cm4.h ****     #else
 141:../CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:../CMSIS/Include/core_cm4.h ****     #endif
 144:../CMSIS/Include/core_cm4.h ****   #else
 145:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:../CMSIS/Include/core_cm4.h ****   #endif
 147:../CMSIS/Include/core_cm4.h **** 
 148:../CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:../CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:../CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:../CMSIS/Include/core_cm4.h ****     #else
 153:../CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:../CMSIS/Include/core_cm4.h ****     #endif
 156:../CMSIS/Include/core_cm4.h ****   #else
 157:../CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:../CMSIS/Include/core_cm4.h ****   #endif
 159:../CMSIS/Include/core_cm4.h **** 
 160:../CMSIS/Include/core_cm4.h **** #endif
 161:../CMSIS/Include/core_cm4.h **** 
 162:../CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:../CMSIS/Include/core_cm4.h **** 
 164:../CMSIS/Include/core_cm4.h **** 
 165:../CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:../CMSIS/Include/core_cm4.h **** }
 167:../CMSIS/Include/core_cm4.h **** #endif
 168:../CMSIS/Include/core_cm4.h **** 
 169:../CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:../CMSIS/Include/core_cm4.h **** 
 171:../CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:../CMSIS/Include/core_cm4.h **** 
 173:../CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:../CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:../CMSIS/Include/core_cm4.h **** 
 176:../CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:../CMSIS/Include/core_cm4.h ****  extern "C" {
 178:../CMSIS/Include/core_cm4.h **** #endif
 179:../CMSIS/Include/core_cm4.h **** 
 180:../CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:../CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:../CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:../CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:../CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:../CMSIS/Include/core_cm4.h ****   #endif
 186:../CMSIS/Include/core_cm4.h **** 
 187:../CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:../CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:../CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:../CMSIS/Include/core_cm4.h ****   #endif
 191:../CMSIS/Include/core_cm4.h **** 
 192:../CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:../CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:../CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:../CMSIS/Include/core_cm4.h ****   #endif
 196:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccTO0K2N.s 			page 12


 197:../CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:../CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:../CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:../CMSIS/Include/core_cm4.h ****   #endif
 201:../CMSIS/Include/core_cm4.h **** 
 202:../CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:../CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:../CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:../CMSIS/Include/core_cm4.h ****   #endif
 206:../CMSIS/Include/core_cm4.h **** #endif
 207:../CMSIS/Include/core_cm4.h **** 
 208:../CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:../CMSIS/Include/core_cm4.h **** /**
 210:../CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:../CMSIS/Include/core_cm4.h **** 
 212:../CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:../CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:../CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:../CMSIS/Include/core_cm4.h **** */
 216:../CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:../CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:../CMSIS/Include/core_cm4.h **** #else
 219:../CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:../CMSIS/Include/core_cm4.h **** #endif
 221:../CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:../CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:../CMSIS/Include/core_cm4.h **** 
 224:../CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 225:../CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:../CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:../CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:../CMSIS/Include/core_cm4.h **** 
 229:../CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:../CMSIS/Include/core_cm4.h **** 
 231:../CMSIS/Include/core_cm4.h **** 
 232:../CMSIS/Include/core_cm4.h **** 
 233:../CMSIS/Include/core_cm4.h **** /*******************************************************************************
 234:../CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 235:../CMSIS/Include/core_cm4.h ****   Core Register contain:
 236:../CMSIS/Include/core_cm4.h ****   - Core Register
 237:../CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 238:../CMSIS/Include/core_cm4.h ****   - Core SCB Register
 239:../CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 240:../CMSIS/Include/core_cm4.h ****   - Core Debug Register
 241:../CMSIS/Include/core_cm4.h ****   - Core MPU Register
 242:../CMSIS/Include/core_cm4.h ****   - Core FPU Register
 243:../CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 244:../CMSIS/Include/core_cm4.h **** /**
 245:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:../CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:../CMSIS/Include/core_cm4.h **** */
 248:../CMSIS/Include/core_cm4.h **** 
 249:../CMSIS/Include/core_cm4.h **** /**
 250:../CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:../CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:../CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 253:../CMSIS/Include/core_cm4.h ****   @{
ARM GAS  /tmp/ccTO0K2N.s 			page 13


 254:../CMSIS/Include/core_cm4.h ****  */
 255:../CMSIS/Include/core_cm4.h **** 
 256:../CMSIS/Include/core_cm4.h **** /**
 257:../CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:../CMSIS/Include/core_cm4.h ****  */
 259:../CMSIS/Include/core_cm4.h **** typedef union
 260:../CMSIS/Include/core_cm4.h **** {
 261:../CMSIS/Include/core_cm4.h ****   struct
 262:../CMSIS/Include/core_cm4.h ****   {
 263:../CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:../CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:../CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:../CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:../CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:../CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:../CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:../CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:../CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:../CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:../CMSIS/Include/core_cm4.h **** } APSR_Type;
 274:../CMSIS/Include/core_cm4.h **** 
 275:../CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 276:../CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:../CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:../CMSIS/Include/core_cm4.h **** 
 279:../CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:../CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:../CMSIS/Include/core_cm4.h **** 
 282:../CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:../CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:../CMSIS/Include/core_cm4.h **** 
 285:../CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:../CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:../CMSIS/Include/core_cm4.h **** 
 288:../CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:../CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:../CMSIS/Include/core_cm4.h **** 
 291:../CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:../CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:../CMSIS/Include/core_cm4.h **** 
 294:../CMSIS/Include/core_cm4.h **** 
 295:../CMSIS/Include/core_cm4.h **** /**
 296:../CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:../CMSIS/Include/core_cm4.h ****  */
 298:../CMSIS/Include/core_cm4.h **** typedef union
 299:../CMSIS/Include/core_cm4.h **** {
 300:../CMSIS/Include/core_cm4.h ****   struct
 301:../CMSIS/Include/core_cm4.h ****   {
 302:../CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:../CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:../CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../CMSIS/Include/core_cm4.h **** } IPSR_Type;
 307:../CMSIS/Include/core_cm4.h **** 
 308:../CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 309:../CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:../CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
ARM GAS  /tmp/ccTO0K2N.s 			page 14


 311:../CMSIS/Include/core_cm4.h **** 
 312:../CMSIS/Include/core_cm4.h **** 
 313:../CMSIS/Include/core_cm4.h **** /**
 314:../CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:../CMSIS/Include/core_cm4.h ****  */
 316:../CMSIS/Include/core_cm4.h **** typedef union
 317:../CMSIS/Include/core_cm4.h **** {
 318:../CMSIS/Include/core_cm4.h ****   struct
 319:../CMSIS/Include/core_cm4.h ****   {
 320:../CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:../CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:../CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:../CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:../CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:../CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:../CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:../CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:../CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:../CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:../CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:../CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:../CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:../CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:../CMSIS/Include/core_cm4.h **** } xPSR_Type;
 335:../CMSIS/Include/core_cm4.h **** 
 336:../CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 337:../CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:../CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:../CMSIS/Include/core_cm4.h **** 
 340:../CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:../CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:../CMSIS/Include/core_cm4.h **** 
 343:../CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:../CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:../CMSIS/Include/core_cm4.h **** 
 346:../CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:../CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:../CMSIS/Include/core_cm4.h **** 
 349:../CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:../CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:../CMSIS/Include/core_cm4.h **** 
 352:../CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:../CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:../CMSIS/Include/core_cm4.h **** 
 355:../CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:../CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:../CMSIS/Include/core_cm4.h **** 
 358:../CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:../CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:../CMSIS/Include/core_cm4.h **** 
 361:../CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:../CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:../CMSIS/Include/core_cm4.h **** 
 364:../CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:../CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:../CMSIS/Include/core_cm4.h **** 
 367:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccTO0K2N.s 			page 15


 368:../CMSIS/Include/core_cm4.h **** /**
 369:../CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:../CMSIS/Include/core_cm4.h ****  */
 371:../CMSIS/Include/core_cm4.h **** typedef union
 372:../CMSIS/Include/core_cm4.h **** {
 373:../CMSIS/Include/core_cm4.h ****   struct
 374:../CMSIS/Include/core_cm4.h ****   {
 375:../CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:../CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:../CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:../CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:../CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:../CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:../CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 382:../CMSIS/Include/core_cm4.h **** 
 383:../CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 384:../CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:../CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:../CMSIS/Include/core_cm4.h **** 
 387:../CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:../CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:../CMSIS/Include/core_cm4.h **** 
 390:../CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:../CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:../CMSIS/Include/core_cm4.h **** 
 393:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:../CMSIS/Include/core_cm4.h **** 
 395:../CMSIS/Include/core_cm4.h **** 
 396:../CMSIS/Include/core_cm4.h **** /**
 397:../CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:../CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:../CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:../CMSIS/Include/core_cm4.h ****   @{
 401:../CMSIS/Include/core_cm4.h ****  */
 402:../CMSIS/Include/core_cm4.h **** 
 403:../CMSIS/Include/core_cm4.h **** /**
 404:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:../CMSIS/Include/core_cm4.h ****  */
 406:../CMSIS/Include/core_cm4.h **** typedef struct
 407:../CMSIS/Include/core_cm4.h **** {
 408:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:../CMSIS/Include/core_cm4.h ****         uint32_t RSERVED1[24U];
 412:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:../CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:../CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:../CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 422:../CMSIS/Include/core_cm4.h **** 
 423:../CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:../CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
ARM GAS  /tmp/ccTO0K2N.s 			page 16


 425:../CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:../CMSIS/Include/core_cm4.h **** 
 427:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:../CMSIS/Include/core_cm4.h **** 
 429:../CMSIS/Include/core_cm4.h **** 
 430:../CMSIS/Include/core_cm4.h **** /**
 431:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:../CMSIS/Include/core_cm4.h ****   @{
 435:../CMSIS/Include/core_cm4.h ****  */
 436:../CMSIS/Include/core_cm4.h **** 
 437:../CMSIS/Include/core_cm4.h **** /**
 438:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:../CMSIS/Include/core_cm4.h ****  */
 440:../CMSIS/Include/core_cm4.h **** typedef struct
 441:../CMSIS/Include/core_cm4.h **** {
 442:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:../CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:../CMSIS/Include/core_cm4.h **** } SCB_Type;
 464:../CMSIS/Include/core_cm4.h **** 
 465:../CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:../CMSIS/Include/core_cm4.h **** 
 469:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:../CMSIS/Include/core_cm4.h **** 
 472:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:../CMSIS/Include/core_cm4.h **** 
 475:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:../CMSIS/Include/core_cm4.h **** 
 478:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:../CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:../CMSIS/Include/core_cm4.h **** 
 481:../CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
ARM GAS  /tmp/ccTO0K2N.s 			page 17


 482:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:../CMSIS/Include/core_cm4.h **** 
 485:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:../CMSIS/Include/core_cm4.h **** 
 488:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:../CMSIS/Include/core_cm4.h **** 
 491:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:../CMSIS/Include/core_cm4.h **** 
 494:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:../CMSIS/Include/core_cm4.h **** 
 497:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:../CMSIS/Include/core_cm4.h **** 
 500:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:../CMSIS/Include/core_cm4.h **** 
 503:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:../CMSIS/Include/core_cm4.h **** 
 506:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:../CMSIS/Include/core_cm4.h **** 
 509:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:../CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:../CMSIS/Include/core_cm4.h **** 
 512:../CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:../CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:../CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:../CMSIS/Include/core_cm4.h **** 
 516:../CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:../CMSIS/Include/core_cm4.h **** 
 520:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:../CMSIS/Include/core_cm4.h **** 
 523:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:../CMSIS/Include/core_cm4.h **** 
 526:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:../CMSIS/Include/core_cm4.h **** 
 529:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:../CMSIS/Include/core_cm4.h **** 
 532:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:../CMSIS/Include/core_cm4.h **** 
 535:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:../CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:../CMSIS/Include/core_cm4.h **** 
 538:../CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
ARM GAS  /tmp/ccTO0K2N.s 			page 18


 539:../CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:../CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:../CMSIS/Include/core_cm4.h **** 
 542:../CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:../CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:../CMSIS/Include/core_cm4.h **** 
 545:../CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:../CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:../CMSIS/Include/core_cm4.h **** 
 548:../CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:../CMSIS/Include/core_cm4.h **** 
 552:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:../CMSIS/Include/core_cm4.h **** 
 555:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:../CMSIS/Include/core_cm4.h **** 
 558:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:../CMSIS/Include/core_cm4.h **** 
 561:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:../CMSIS/Include/core_cm4.h **** 
 564:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:../CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:../CMSIS/Include/core_cm4.h **** 
 567:../CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:../CMSIS/Include/core_cm4.h **** 
 571:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:../CMSIS/Include/core_cm4.h **** 
 574:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:../CMSIS/Include/core_cm4.h **** 
 577:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:../CMSIS/Include/core_cm4.h **** 
 580:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:../CMSIS/Include/core_cm4.h **** 
 583:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:../CMSIS/Include/core_cm4.h **** 
 586:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:../CMSIS/Include/core_cm4.h **** 
 589:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:../CMSIS/Include/core_cm4.h **** 
 592:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:../CMSIS/Include/core_cm4.h **** 
 595:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
ARM GAS  /tmp/ccTO0K2N.s 			page 19


 596:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:../CMSIS/Include/core_cm4.h **** 
 598:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:../CMSIS/Include/core_cm4.h **** 
 601:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:../CMSIS/Include/core_cm4.h **** 
 604:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:../CMSIS/Include/core_cm4.h **** 
 607:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:../CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:../CMSIS/Include/core_cm4.h **** 
 610:../CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:../CMSIS/Include/core_cm4.h **** 
 614:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:../CMSIS/Include/core_cm4.h **** 
 617:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:../CMSIS/Include/core_cm4.h **** 
 620:../CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:../CMSIS/Include/core_cm4.h **** 
 624:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:../CMSIS/Include/core_cm4.h **** 
 627:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:../CMSIS/Include/core_cm4.h **** 
 630:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:../CMSIS/Include/core_cm4.h **** 
 633:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:../CMSIS/Include/core_cm4.h **** 
 636:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:../CMSIS/Include/core_cm4.h **** 
 639:../CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:../CMSIS/Include/core_cm4.h **** 
 643:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:../CMSIS/Include/core_cm4.h **** 
 646:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:../CMSIS/Include/core_cm4.h **** 
 649:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:../CMSIS/Include/core_cm4.h **** 
 652:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
ARM GAS  /tmp/ccTO0K2N.s 			page 20


 653:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:../CMSIS/Include/core_cm4.h **** 
 655:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:../CMSIS/Include/core_cm4.h **** 
 658:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:../CMSIS/Include/core_cm4.h **** 
 661:../CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:../CMSIS/Include/core_cm4.h **** 
 665:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:../CMSIS/Include/core_cm4.h **** 
 668:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:../CMSIS/Include/core_cm4.h **** 
 671:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:../CMSIS/Include/core_cm4.h **** 
 674:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:../CMSIS/Include/core_cm4.h **** 
 677:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:../CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:../CMSIS/Include/core_cm4.h **** 
 680:../CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:../CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:../CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:../CMSIS/Include/core_cm4.h **** 
 684:../CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:../CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:../CMSIS/Include/core_cm4.h **** 
 687:../CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:../CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:../CMSIS/Include/core_cm4.h **** 
 690:../CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:../CMSIS/Include/core_cm4.h **** 
 694:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:../CMSIS/Include/core_cm4.h **** 
 697:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:../CMSIS/Include/core_cm4.h **** 
 700:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:../CMSIS/Include/core_cm4.h **** 
 703:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:../CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:../CMSIS/Include/core_cm4.h **** 
 706:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:../CMSIS/Include/core_cm4.h **** 
 708:../CMSIS/Include/core_cm4.h **** 
 709:../CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccTO0K2N.s 			page 21


 710:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:../CMSIS/Include/core_cm4.h ****   @{
 714:../CMSIS/Include/core_cm4.h ****  */
 715:../CMSIS/Include/core_cm4.h **** 
 716:../CMSIS/Include/core_cm4.h **** /**
 717:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:../CMSIS/Include/core_cm4.h ****  */
 719:../CMSIS/Include/core_cm4.h **** typedef struct
 720:../CMSIS/Include/core_cm4.h **** {
 721:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:../CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 725:../CMSIS/Include/core_cm4.h **** 
 726:../CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:../CMSIS/Include/core_cm4.h **** 
 730:../CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:../CMSIS/Include/core_cm4.h **** 
 734:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:../CMSIS/Include/core_cm4.h **** 
 737:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:../CMSIS/Include/core_cm4.h **** 
 740:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:../CMSIS/Include/core_cm4.h **** 
 743:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:../CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:../CMSIS/Include/core_cm4.h **** 
 746:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:../CMSIS/Include/core_cm4.h **** 
 748:../CMSIS/Include/core_cm4.h **** 
 749:../CMSIS/Include/core_cm4.h **** /**
 750:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:../CMSIS/Include/core_cm4.h ****   @{
 754:../CMSIS/Include/core_cm4.h ****  */
 755:../CMSIS/Include/core_cm4.h **** 
 756:../CMSIS/Include/core_cm4.h **** /**
 757:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:../CMSIS/Include/core_cm4.h ****  */
 759:../CMSIS/Include/core_cm4.h **** typedef struct
 760:../CMSIS/Include/core_cm4.h **** {
 761:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:../CMSIS/Include/core_cm4.h **** } SysTick_Type;
 766:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccTO0K2N.s 			page 22


 767:../CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:../CMSIS/Include/core_cm4.h **** 
 771:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:../CMSIS/Include/core_cm4.h **** 
 774:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:../CMSIS/Include/core_cm4.h **** 
 777:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:../CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:../CMSIS/Include/core_cm4.h **** 
 780:../CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:../CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:../CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:../CMSIS/Include/core_cm4.h **** 
 784:../CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:../CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:../CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:../CMSIS/Include/core_cm4.h **** 
 788:../CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:../CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:../CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:../CMSIS/Include/core_cm4.h **** 
 792:../CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:../CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:../CMSIS/Include/core_cm4.h **** 
 795:../CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:../CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:../CMSIS/Include/core_cm4.h **** 
 798:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:../CMSIS/Include/core_cm4.h **** 
 800:../CMSIS/Include/core_cm4.h **** 
 801:../CMSIS/Include/core_cm4.h **** /**
 802:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:../CMSIS/Include/core_cm4.h ****   @{
 806:../CMSIS/Include/core_cm4.h ****  */
 807:../CMSIS/Include/core_cm4.h **** 
 808:../CMSIS/Include/core_cm4.h **** /**
 809:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:../CMSIS/Include/core_cm4.h ****  */
 811:../CMSIS/Include/core_cm4.h **** typedef struct
 812:../CMSIS/Include/core_cm4.h **** {
 813:../CMSIS/Include/core_cm4.h ****   __OM  union
 814:../CMSIS/Include/core_cm4.h ****   {
 815:../CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:../CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:../CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:../CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
ARM GAS  /tmp/ccTO0K2N.s 			page 23


 824:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[29U];
 826:../CMSIS/Include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 827:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 828:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 829:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 830:../CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 831:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 832:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 833:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 834:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 835:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 836:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 837:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 838:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 839:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 840:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 841:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 842:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 843:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 844:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 845:../CMSIS/Include/core_cm4.h **** } ITM_Type;
 846:../CMSIS/Include/core_cm4.h **** 
 847:../CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 848:../CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 849:../CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 850:../CMSIS/Include/core_cm4.h **** 
 851:../CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 852:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 853:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 854:../CMSIS/Include/core_cm4.h **** 
 855:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 856:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 857:../CMSIS/Include/core_cm4.h **** 
 858:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 859:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 860:../CMSIS/Include/core_cm4.h **** 
 861:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 862:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 863:../CMSIS/Include/core_cm4.h **** 
 864:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 865:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 866:../CMSIS/Include/core_cm4.h **** 
 867:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 868:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 869:../CMSIS/Include/core_cm4.h **** 
 870:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 871:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 872:../CMSIS/Include/core_cm4.h **** 
 873:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 874:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 875:../CMSIS/Include/core_cm4.h **** 
 876:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 877:../CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 878:../CMSIS/Include/core_cm4.h **** 
 879:../CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 880:../CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
ARM GAS  /tmp/ccTO0K2N.s 			page 24


 881:../CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 882:../CMSIS/Include/core_cm4.h **** 
 883:../CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 884:../CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 885:../CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 886:../CMSIS/Include/core_cm4.h **** 
 887:../CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 888:../CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 889:../CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 890:../CMSIS/Include/core_cm4.h **** 
 891:../CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 892:../CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 893:../CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 894:../CMSIS/Include/core_cm4.h **** 
 895:../CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 896:../CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 897:../CMSIS/Include/core_cm4.h **** 
 898:../CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 899:../CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 900:../CMSIS/Include/core_cm4.h **** 
 901:../CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 902:../CMSIS/Include/core_cm4.h **** 
 903:../CMSIS/Include/core_cm4.h **** 
 904:../CMSIS/Include/core_cm4.h **** /**
 905:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 906:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 907:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 908:../CMSIS/Include/core_cm4.h ****   @{
 909:../CMSIS/Include/core_cm4.h ****  */
 910:../CMSIS/Include/core_cm4.h **** 
 911:../CMSIS/Include/core_cm4.h **** /**
 912:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 913:../CMSIS/Include/core_cm4.h ****  */
 914:../CMSIS/Include/core_cm4.h **** typedef struct
 915:../CMSIS/Include/core_cm4.h **** {
 916:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 917:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 918:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 919:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 920:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 921:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 922:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 923:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 924:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 925:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 926:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 927:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 928:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 929:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 930:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 931:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 932:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 933:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 934:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 935:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 936:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 937:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
ARM GAS  /tmp/ccTO0K2N.s 			page 25


 938:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 939:../CMSIS/Include/core_cm4.h **** } DWT_Type;
 940:../CMSIS/Include/core_cm4.h **** 
 941:../CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 942:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 943:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 944:../CMSIS/Include/core_cm4.h **** 
 945:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 946:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 947:../CMSIS/Include/core_cm4.h **** 
 948:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 949:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 950:../CMSIS/Include/core_cm4.h **** 
 951:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 952:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 953:../CMSIS/Include/core_cm4.h **** 
 954:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 955:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 956:../CMSIS/Include/core_cm4.h **** 
 957:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 958:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 959:../CMSIS/Include/core_cm4.h **** 
 960:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 961:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 962:../CMSIS/Include/core_cm4.h **** 
 963:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 964:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 965:../CMSIS/Include/core_cm4.h **** 
 966:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 967:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 968:../CMSIS/Include/core_cm4.h **** 
 969:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 970:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 971:../CMSIS/Include/core_cm4.h **** 
 972:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 973:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 974:../CMSIS/Include/core_cm4.h **** 
 975:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 976:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 977:../CMSIS/Include/core_cm4.h **** 
 978:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 979:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 980:../CMSIS/Include/core_cm4.h **** 
 981:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 982:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 983:../CMSIS/Include/core_cm4.h **** 
 984:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 985:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 986:../CMSIS/Include/core_cm4.h **** 
 987:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 988:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 989:../CMSIS/Include/core_cm4.h **** 
 990:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 991:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 992:../CMSIS/Include/core_cm4.h **** 
 993:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 994:../CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
ARM GAS  /tmp/ccTO0K2N.s 			page 26


 995:../CMSIS/Include/core_cm4.h **** 
 996:../CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 997:../CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 998:../CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 999:../CMSIS/Include/core_cm4.h **** 
1000:../CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
1001:../CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1002:../CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1003:../CMSIS/Include/core_cm4.h **** 
1004:../CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
1005:../CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1006:../CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1007:../CMSIS/Include/core_cm4.h **** 
1008:../CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
1009:../CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1010:../CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1011:../CMSIS/Include/core_cm4.h **** 
1012:../CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1013:../CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1014:../CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1015:../CMSIS/Include/core_cm4.h **** 
1016:../CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1017:../CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1018:../CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1019:../CMSIS/Include/core_cm4.h **** 
1020:../CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1021:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1022:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1023:../CMSIS/Include/core_cm4.h **** 
1024:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1025:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1026:../CMSIS/Include/core_cm4.h **** 
1027:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1028:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1029:../CMSIS/Include/core_cm4.h **** 
1030:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1031:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1032:../CMSIS/Include/core_cm4.h **** 
1033:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1034:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1035:../CMSIS/Include/core_cm4.h **** 
1036:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1037:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1038:../CMSIS/Include/core_cm4.h **** 
1039:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1040:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1041:../CMSIS/Include/core_cm4.h **** 
1042:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1043:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1044:../CMSIS/Include/core_cm4.h **** 
1045:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1046:../CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1047:../CMSIS/Include/core_cm4.h **** 
1048:../CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1049:../CMSIS/Include/core_cm4.h **** 
1050:../CMSIS/Include/core_cm4.h **** 
1051:../CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccTO0K2N.s 			page 27


1052:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1053:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1054:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1055:../CMSIS/Include/core_cm4.h ****   @{
1056:../CMSIS/Include/core_cm4.h ****  */
1057:../CMSIS/Include/core_cm4.h **** 
1058:../CMSIS/Include/core_cm4.h **** /**
1059:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1060:../CMSIS/Include/core_cm4.h ****  */
1061:../CMSIS/Include/core_cm4.h **** typedef struct
1062:../CMSIS/Include/core_cm4.h **** {
1063:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1064:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1065:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1066:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1067:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1068:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1069:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1070:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1071:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1072:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1073:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1074:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1075:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1076:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1077:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1078:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1079:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1080:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1081:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1082:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1083:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1084:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1085:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1086:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1087:../CMSIS/Include/core_cm4.h **** } TPI_Type;
1088:../CMSIS/Include/core_cm4.h **** 
1089:../CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1090:../CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1091:../CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1092:../CMSIS/Include/core_cm4.h **** 
1093:../CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1094:../CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1095:../CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1096:../CMSIS/Include/core_cm4.h **** 
1097:../CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1098:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1099:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1100:../CMSIS/Include/core_cm4.h **** 
1101:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1102:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1103:../CMSIS/Include/core_cm4.h **** 
1104:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1105:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1106:../CMSIS/Include/core_cm4.h **** 
1107:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1108:../CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
ARM GAS  /tmp/ccTO0K2N.s 			page 28


1109:../CMSIS/Include/core_cm4.h **** 
1110:../CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1111:../CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1112:../CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1113:../CMSIS/Include/core_cm4.h **** 
1114:../CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1115:../CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1116:../CMSIS/Include/core_cm4.h **** 
1117:../CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1118:../CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1119:../CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1120:../CMSIS/Include/core_cm4.h **** 
1121:../CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1122:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1123:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1124:../CMSIS/Include/core_cm4.h **** 
1125:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1126:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1127:../CMSIS/Include/core_cm4.h **** 
1128:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1129:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1130:../CMSIS/Include/core_cm4.h **** 
1131:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1132:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1133:../CMSIS/Include/core_cm4.h **** 
1134:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1135:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1136:../CMSIS/Include/core_cm4.h **** 
1137:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1138:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1139:../CMSIS/Include/core_cm4.h **** 
1140:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1141:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1142:../CMSIS/Include/core_cm4.h **** 
1143:../CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1144:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1145:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1146:../CMSIS/Include/core_cm4.h **** 
1147:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1148:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1149:../CMSIS/Include/core_cm4.h **** 
1150:../CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1151:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1152:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1153:../CMSIS/Include/core_cm4.h **** 
1154:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1155:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1156:../CMSIS/Include/core_cm4.h **** 
1157:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1158:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1159:../CMSIS/Include/core_cm4.h **** 
1160:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1161:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1162:../CMSIS/Include/core_cm4.h **** 
1163:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1164:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1165:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccTO0K2N.s 			page 29


1166:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1167:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1168:../CMSIS/Include/core_cm4.h **** 
1169:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1170:../CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1171:../CMSIS/Include/core_cm4.h **** 
1172:../CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1173:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1174:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1175:../CMSIS/Include/core_cm4.h **** 
1176:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1177:../CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1178:../CMSIS/Include/core_cm4.h **** 
1179:../CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1180:../CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1181:../CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1182:../CMSIS/Include/core_cm4.h **** 
1183:../CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1184:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1185:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1186:../CMSIS/Include/core_cm4.h **** 
1187:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1188:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1189:../CMSIS/Include/core_cm4.h **** 
1190:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1191:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1192:../CMSIS/Include/core_cm4.h **** 
1193:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1194:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1195:../CMSIS/Include/core_cm4.h **** 
1196:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1197:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1198:../CMSIS/Include/core_cm4.h **** 
1199:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1200:../CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1201:../CMSIS/Include/core_cm4.h **** 
1202:../CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1203:../CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1204:../CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1205:../CMSIS/Include/core_cm4.h **** 
1206:../CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1207:../CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1208:../CMSIS/Include/core_cm4.h **** 
1209:../CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1210:../CMSIS/Include/core_cm4.h **** 
1211:../CMSIS/Include/core_cm4.h **** 
1212:../CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1213:../CMSIS/Include/core_cm4.h **** /**
1214:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1215:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1216:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1217:../CMSIS/Include/core_cm4.h ****   @{
1218:../CMSIS/Include/core_cm4.h ****  */
1219:../CMSIS/Include/core_cm4.h **** 
1220:../CMSIS/Include/core_cm4.h **** /**
1221:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1222:../CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccTO0K2N.s 			page 30


1223:../CMSIS/Include/core_cm4.h **** typedef struct
1224:../CMSIS/Include/core_cm4.h **** {
1225:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1226:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1227:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1228:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1229:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1230:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1231:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1232:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1233:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1234:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1235:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1236:../CMSIS/Include/core_cm4.h **** } MPU_Type;
1237:../CMSIS/Include/core_cm4.h **** 
1238:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1239:../CMSIS/Include/core_cm4.h **** 
1240:../CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1241:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1242:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1243:../CMSIS/Include/core_cm4.h **** 
1244:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1245:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1246:../CMSIS/Include/core_cm4.h **** 
1247:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1248:../CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1249:../CMSIS/Include/core_cm4.h **** 
1250:../CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1251:../CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1252:../CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1253:../CMSIS/Include/core_cm4.h **** 
1254:../CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1255:../CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1256:../CMSIS/Include/core_cm4.h **** 
1257:../CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1258:../CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1259:../CMSIS/Include/core_cm4.h **** 
1260:../CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1261:../CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1262:../CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1263:../CMSIS/Include/core_cm4.h **** 
1264:../CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1265:../CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1266:../CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1267:../CMSIS/Include/core_cm4.h **** 
1268:../CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1269:../CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1270:../CMSIS/Include/core_cm4.h **** 
1271:../CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1272:../CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1273:../CMSIS/Include/core_cm4.h **** 
1274:../CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1275:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1276:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1277:../CMSIS/Include/core_cm4.h **** 
1278:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1279:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
ARM GAS  /tmp/ccTO0K2N.s 			page 31


1280:../CMSIS/Include/core_cm4.h **** 
1281:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1282:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1283:../CMSIS/Include/core_cm4.h **** 
1284:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1285:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1286:../CMSIS/Include/core_cm4.h **** 
1287:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1288:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1289:../CMSIS/Include/core_cm4.h **** 
1290:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1291:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1292:../CMSIS/Include/core_cm4.h **** 
1293:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1294:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1295:../CMSIS/Include/core_cm4.h **** 
1296:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1297:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1298:../CMSIS/Include/core_cm4.h **** 
1299:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1300:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1301:../CMSIS/Include/core_cm4.h **** 
1302:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1303:../CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1304:../CMSIS/Include/core_cm4.h **** 
1305:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1306:../CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1307:../CMSIS/Include/core_cm4.h **** 
1308:../CMSIS/Include/core_cm4.h **** 
1309:../CMSIS/Include/core_cm4.h **** /**
1310:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1311:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1312:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1313:../CMSIS/Include/core_cm4.h ****   @{
1314:../CMSIS/Include/core_cm4.h ****  */
1315:../CMSIS/Include/core_cm4.h **** 
1316:../CMSIS/Include/core_cm4.h **** /**
1317:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1318:../CMSIS/Include/core_cm4.h ****  */
1319:../CMSIS/Include/core_cm4.h **** typedef struct
1320:../CMSIS/Include/core_cm4.h **** {
1321:../CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1322:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1323:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1324:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1325:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1326:../CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1327:../CMSIS/Include/core_cm4.h **** } FPU_Type;
1328:../CMSIS/Include/core_cm4.h **** 
1329:../CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1330:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1331:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1332:../CMSIS/Include/core_cm4.h **** 
1333:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1334:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1335:../CMSIS/Include/core_cm4.h **** 
1336:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
ARM GAS  /tmp/ccTO0K2N.s 			page 32


1337:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1338:../CMSIS/Include/core_cm4.h **** 
1339:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1340:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1341:../CMSIS/Include/core_cm4.h **** 
1342:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1343:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1344:../CMSIS/Include/core_cm4.h **** 
1345:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1346:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1347:../CMSIS/Include/core_cm4.h **** 
1348:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1349:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1350:../CMSIS/Include/core_cm4.h **** 
1351:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1352:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1353:../CMSIS/Include/core_cm4.h **** 
1354:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1355:../CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1356:../CMSIS/Include/core_cm4.h **** 
1357:../CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1358:../CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1359:../CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1360:../CMSIS/Include/core_cm4.h **** 
1361:../CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1362:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1363:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1364:../CMSIS/Include/core_cm4.h **** 
1365:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1366:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1367:../CMSIS/Include/core_cm4.h **** 
1368:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1369:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1370:../CMSIS/Include/core_cm4.h **** 
1371:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1372:../CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1373:../CMSIS/Include/core_cm4.h **** 
1374:../CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1375:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1376:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1377:../CMSIS/Include/core_cm4.h **** 
1378:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1379:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1380:../CMSIS/Include/core_cm4.h **** 
1381:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1382:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1383:../CMSIS/Include/core_cm4.h **** 
1384:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1385:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1386:../CMSIS/Include/core_cm4.h **** 
1387:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1388:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1389:../CMSIS/Include/core_cm4.h **** 
1390:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1391:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1392:../CMSIS/Include/core_cm4.h **** 
1393:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
ARM GAS  /tmp/ccTO0K2N.s 			page 33


1394:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1395:../CMSIS/Include/core_cm4.h **** 
1396:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1397:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1398:../CMSIS/Include/core_cm4.h **** 
1399:../CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1400:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1401:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1402:../CMSIS/Include/core_cm4.h **** 
1403:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1404:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1405:../CMSIS/Include/core_cm4.h **** 
1406:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1407:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1408:../CMSIS/Include/core_cm4.h **** 
1409:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1410:../CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1411:../CMSIS/Include/core_cm4.h **** 
1412:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1413:../CMSIS/Include/core_cm4.h **** 
1414:../CMSIS/Include/core_cm4.h **** 
1415:../CMSIS/Include/core_cm4.h **** /**
1416:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1417:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1418:../CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1419:../CMSIS/Include/core_cm4.h ****   @{
1420:../CMSIS/Include/core_cm4.h ****  */
1421:../CMSIS/Include/core_cm4.h **** 
1422:../CMSIS/Include/core_cm4.h **** /**
1423:../CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1424:../CMSIS/Include/core_cm4.h ****  */
1425:../CMSIS/Include/core_cm4.h **** typedef struct
1426:../CMSIS/Include/core_cm4.h **** {
1427:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1428:../CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1429:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1430:../CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1431:../CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1432:../CMSIS/Include/core_cm4.h **** 
1433:../CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1434:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1435:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1436:../CMSIS/Include/core_cm4.h **** 
1437:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1438:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1439:../CMSIS/Include/core_cm4.h **** 
1440:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1441:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1442:../CMSIS/Include/core_cm4.h **** 
1443:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1444:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1445:../CMSIS/Include/core_cm4.h **** 
1446:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1447:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1448:../CMSIS/Include/core_cm4.h **** 
1449:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1450:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
ARM GAS  /tmp/ccTO0K2N.s 			page 34


1451:../CMSIS/Include/core_cm4.h **** 
1452:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1453:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1454:../CMSIS/Include/core_cm4.h **** 
1455:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1456:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1457:../CMSIS/Include/core_cm4.h **** 
1458:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1459:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1460:../CMSIS/Include/core_cm4.h **** 
1461:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1462:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1463:../CMSIS/Include/core_cm4.h **** 
1464:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1465:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1466:../CMSIS/Include/core_cm4.h **** 
1467:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1468:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1469:../CMSIS/Include/core_cm4.h **** 
1470:../CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1471:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1472:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1473:../CMSIS/Include/core_cm4.h **** 
1474:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1475:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1476:../CMSIS/Include/core_cm4.h **** 
1477:../CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1478:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1479:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1480:../CMSIS/Include/core_cm4.h **** 
1481:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1482:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1483:../CMSIS/Include/core_cm4.h **** 
1484:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1485:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1486:../CMSIS/Include/core_cm4.h **** 
1487:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1488:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1489:../CMSIS/Include/core_cm4.h **** 
1490:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1491:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1492:../CMSIS/Include/core_cm4.h **** 
1493:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1494:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1495:../CMSIS/Include/core_cm4.h **** 
1496:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1497:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1498:../CMSIS/Include/core_cm4.h **** 
1499:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1500:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1501:../CMSIS/Include/core_cm4.h **** 
1502:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1503:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1504:../CMSIS/Include/core_cm4.h **** 
1505:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1506:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1507:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccTO0K2N.s 			page 35


1508:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1509:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1510:../CMSIS/Include/core_cm4.h **** 
1511:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1512:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1513:../CMSIS/Include/core_cm4.h **** 
1514:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1515:../CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1516:../CMSIS/Include/core_cm4.h **** 
1517:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1518:../CMSIS/Include/core_cm4.h **** 
1519:../CMSIS/Include/core_cm4.h **** 
1520:../CMSIS/Include/core_cm4.h **** /**
1521:../CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1522:../CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1523:../CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1524:../CMSIS/Include/core_cm4.h ****   @{
1525:../CMSIS/Include/core_cm4.h ****  */
1526:../CMSIS/Include/core_cm4.h **** 
1527:../CMSIS/Include/core_cm4.h **** /**
1528:../CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1529:../CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1530:../CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1531:../CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1532:../CMSIS/Include/core_cm4.h **** */
1533:../CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1534:../CMSIS/Include/core_cm4.h **** 
1535:../CMSIS/Include/core_cm4.h **** /**
1536:../CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1537:../CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1538:../CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1539:../CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1540:../CMSIS/Include/core_cm4.h **** */
1541:../CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1542:../CMSIS/Include/core_cm4.h **** 
1543:../CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1544:../CMSIS/Include/core_cm4.h **** 
1545:../CMSIS/Include/core_cm4.h **** 
1546:../CMSIS/Include/core_cm4.h **** /**
1547:../CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1548:../CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1549:../CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1550:../CMSIS/Include/core_cm4.h ****   @{
1551:../CMSIS/Include/core_cm4.h ****  */
1552:../CMSIS/Include/core_cm4.h **** 
1553:../CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1554:../CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1555:../CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1556:../CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1557:../CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1558:../CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1559:../CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1560:../CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1561:../CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1562:../CMSIS/Include/core_cm4.h **** 
1563:../CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1564:../CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
ARM GAS  /tmp/ccTO0K2N.s 			page 36


1565:../CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1566:../CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1567:../CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1568:../CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1569:../CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1570:../CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1571:../CMSIS/Include/core_cm4.h **** 
1572:../CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1573:../CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1574:../CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1575:../CMSIS/Include/core_cm4.h **** #endif
1576:../CMSIS/Include/core_cm4.h **** 
1577:../CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1578:../CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1579:../CMSIS/Include/core_cm4.h **** 
1580:../CMSIS/Include/core_cm4.h **** /*@} */
1581:../CMSIS/Include/core_cm4.h **** 
1582:../CMSIS/Include/core_cm4.h **** 
1583:../CMSIS/Include/core_cm4.h **** 
1584:../CMSIS/Include/core_cm4.h **** /*******************************************************************************
1585:../CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1586:../CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1587:../CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1588:../CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1589:../CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1590:../CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1591:../CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1592:../CMSIS/Include/core_cm4.h **** /**
1593:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1594:../CMSIS/Include/core_cm4.h **** */
1595:../CMSIS/Include/core_cm4.h **** 
1596:../CMSIS/Include/core_cm4.h **** 
1597:../CMSIS/Include/core_cm4.h **** 
1598:../CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1599:../CMSIS/Include/core_cm4.h **** /**
1600:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1601:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1602:../CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1603:../CMSIS/Include/core_cm4.h ****   @{
1604:../CMSIS/Include/core_cm4.h ****  */
1605:../CMSIS/Include/core_cm4.h **** 
1606:../CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1607:../CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1608:../CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1609:../CMSIS/Include/core_cm4.h ****   #endif
1610:../CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1611:../CMSIS/Include/core_cm4.h **** #else
1612:../CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1613:../CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1614:../CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1615:../CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1616:../CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1617:../CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1618:../CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1619:../CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1620:../CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1621:../CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
ARM GAS  /tmp/ccTO0K2N.s 			page 37


1622:../CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1623:../CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1624:../CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1625:../CMSIS/Include/core_cm4.h **** 
1626:../CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1627:../CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1628:../CMSIS/Include/core_cm4.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1629:../CMSIS/Include/core_cm4.h ****   #endif
1630:../CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1631:../CMSIS/Include/core_cm4.h **** #else
1632:../CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1633:../CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1634:../CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1635:../CMSIS/Include/core_cm4.h **** 
1636:../CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1637:../CMSIS/Include/core_cm4.h **** 
1638:../CMSIS/Include/core_cm4.h **** 
1639:../CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1640:../CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1641:../CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1642:../CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1643:../CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1644:../CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1645:../CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1646:../CMSIS/Include/core_cm4.h **** 
1647:../CMSIS/Include/core_cm4.h **** 
1648:../CMSIS/Include/core_cm4.h **** /**
1649:../CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1650:../CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1651:../CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1652:../CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1653:../CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1654:../CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1655:../CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1656:../CMSIS/Include/core_cm4.h ****  */
1657:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1658:../CMSIS/Include/core_cm4.h **** {
1659:../CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1660:../CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1661:../CMSIS/Include/core_cm4.h **** 
1662:../CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1663:../CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1664:../CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1665:../CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1666:../CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1667:../CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1668:../CMSIS/Include/core_cm4.h **** }
1669:../CMSIS/Include/core_cm4.h **** 
1670:../CMSIS/Include/core_cm4.h **** 
1671:../CMSIS/Include/core_cm4.h **** /**
1672:../CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1673:../CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1674:../CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1675:../CMSIS/Include/core_cm4.h ****  */
1676:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1677:../CMSIS/Include/core_cm4.h **** {
1678:../CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
ARM GAS  /tmp/ccTO0K2N.s 			page 38


1679:../CMSIS/Include/core_cm4.h **** }
1680:../CMSIS/Include/core_cm4.h **** 
1681:../CMSIS/Include/core_cm4.h **** 
1682:../CMSIS/Include/core_cm4.h **** /**
1683:../CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1684:../CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1685:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1686:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1687:../CMSIS/Include/core_cm4.h ****  */
1688:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1689:../CMSIS/Include/core_cm4.h **** {
1690:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1691:../CMSIS/Include/core_cm4.h ****   {
1692:../CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1693:../CMSIS/Include/core_cm4.h ****   }
1694:../CMSIS/Include/core_cm4.h **** }
1695:../CMSIS/Include/core_cm4.h **** 
1696:../CMSIS/Include/core_cm4.h **** 
1697:../CMSIS/Include/core_cm4.h **** /**
1698:../CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1699:../CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1700:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1701:../CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1702:../CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1703:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1704:../CMSIS/Include/core_cm4.h ****  */
1705:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1706:../CMSIS/Include/core_cm4.h **** {
1707:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1708:../CMSIS/Include/core_cm4.h ****   {
1709:../CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1710:../CMSIS/Include/core_cm4.h ****   }
1711:../CMSIS/Include/core_cm4.h ****   else
1712:../CMSIS/Include/core_cm4.h ****   {
1713:../CMSIS/Include/core_cm4.h ****     return(0U);
1714:../CMSIS/Include/core_cm4.h ****   }
1715:../CMSIS/Include/core_cm4.h **** }
1716:../CMSIS/Include/core_cm4.h **** 
1717:../CMSIS/Include/core_cm4.h **** 
1718:../CMSIS/Include/core_cm4.h **** /**
1719:../CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1720:../CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1721:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1722:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1723:../CMSIS/Include/core_cm4.h ****  */
1724:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1725:../CMSIS/Include/core_cm4.h **** {
1726:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1727:../CMSIS/Include/core_cm4.h ****   {
1728:../CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1729:../CMSIS/Include/core_cm4.h ****     __DSB();
1730:../CMSIS/Include/core_cm4.h ****     __ISB();
1731:../CMSIS/Include/core_cm4.h ****   }
1732:../CMSIS/Include/core_cm4.h **** }
1733:../CMSIS/Include/core_cm4.h **** 
1734:../CMSIS/Include/core_cm4.h **** 
1735:../CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccTO0K2N.s 			page 39


1736:../CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1737:../CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1738:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1739:../CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1740:../CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1741:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1742:../CMSIS/Include/core_cm4.h ****  */
1743:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1744:../CMSIS/Include/core_cm4.h **** {
1745:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1746:../CMSIS/Include/core_cm4.h ****   {
1747:../CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1748:../CMSIS/Include/core_cm4.h ****   }
1749:../CMSIS/Include/core_cm4.h ****   else
1750:../CMSIS/Include/core_cm4.h ****   {
1751:../CMSIS/Include/core_cm4.h ****     return(0U);
1752:../CMSIS/Include/core_cm4.h ****   }
1753:../CMSIS/Include/core_cm4.h **** }
1754:../CMSIS/Include/core_cm4.h **** 
1755:../CMSIS/Include/core_cm4.h **** 
1756:../CMSIS/Include/core_cm4.h **** /**
1757:../CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1758:../CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1759:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1760:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1761:../CMSIS/Include/core_cm4.h ****  */
1762:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1763:../CMSIS/Include/core_cm4.h **** {
1764:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1765:../CMSIS/Include/core_cm4.h ****   {
1766:../CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1767:../CMSIS/Include/core_cm4.h ****   }
1768:../CMSIS/Include/core_cm4.h **** }
1769:../CMSIS/Include/core_cm4.h **** 
1770:../CMSIS/Include/core_cm4.h **** 
1771:../CMSIS/Include/core_cm4.h **** /**
1772:../CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1773:../CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1774:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1775:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1776:../CMSIS/Include/core_cm4.h ****  */
1777:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1778:../CMSIS/Include/core_cm4.h **** {
1779:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1780:../CMSIS/Include/core_cm4.h ****   {
1781:../CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1782:../CMSIS/Include/core_cm4.h ****   }
1783:../CMSIS/Include/core_cm4.h **** }
1784:../CMSIS/Include/core_cm4.h **** 
1785:../CMSIS/Include/core_cm4.h **** 
1786:../CMSIS/Include/core_cm4.h **** /**
1787:../CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1788:../CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1789:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1790:../CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1791:../CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1792:../CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
ARM GAS  /tmp/ccTO0K2N.s 			page 40


1793:../CMSIS/Include/core_cm4.h ****  */
1794:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1795:../CMSIS/Include/core_cm4.h **** {
1796:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1797:../CMSIS/Include/core_cm4.h ****   {
1798:../CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1799:../CMSIS/Include/core_cm4.h ****   }
1800:../CMSIS/Include/core_cm4.h ****   else
1801:../CMSIS/Include/core_cm4.h ****   {
1802:../CMSIS/Include/core_cm4.h ****     return(0U);
1803:../CMSIS/Include/core_cm4.h ****   }
1804:../CMSIS/Include/core_cm4.h **** }
1805:../CMSIS/Include/core_cm4.h **** 
1806:../CMSIS/Include/core_cm4.h **** 
1807:../CMSIS/Include/core_cm4.h **** /**
1808:../CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1809:../CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1810:../CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1811:../CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1812:../CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1813:../CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1814:../CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1815:../CMSIS/Include/core_cm4.h ****  */
1816:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1817:../CMSIS/Include/core_cm4.h **** {
1818:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1819:../CMSIS/Include/core_cm4.h ****   {
1820:../CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1821:../CMSIS/Include/core_cm4.h ****   }
1822:../CMSIS/Include/core_cm4.h ****   else
1823:../CMSIS/Include/core_cm4.h ****   {
1824:../CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1825:../CMSIS/Include/core_cm4.h ****   }
1826:../CMSIS/Include/core_cm4.h **** }
1827:../CMSIS/Include/core_cm4.h **** 
1828:../CMSIS/Include/core_cm4.h **** 
1829:../CMSIS/Include/core_cm4.h **** /**
1830:../CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1831:../CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1832:../CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1833:../CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1834:../CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1835:../CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1836:../CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1837:../CMSIS/Include/core_cm4.h ****  */
1838:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1839:../CMSIS/Include/core_cm4.h **** {
1840:../CMSIS/Include/core_cm4.h **** 
1841:../CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1842:../CMSIS/Include/core_cm4.h ****   {
1843:../CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1844:../CMSIS/Include/core_cm4.h ****   }
1845:../CMSIS/Include/core_cm4.h ****   else
1846:../CMSIS/Include/core_cm4.h ****   {
1847:../CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1848:../CMSIS/Include/core_cm4.h ****   }
1849:../CMSIS/Include/core_cm4.h **** }
ARM GAS  /tmp/ccTO0K2N.s 			page 41


1850:../CMSIS/Include/core_cm4.h **** 
1851:../CMSIS/Include/core_cm4.h **** 
1852:../CMSIS/Include/core_cm4.h **** /**
1853:../CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1854:../CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1855:../CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1856:../CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1857:../CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1858:../CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1859:../CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1860:../CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1861:../CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1862:../CMSIS/Include/core_cm4.h ****  */
1863:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1864:../CMSIS/Include/core_cm4.h **** {
1865:../CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1866:../CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1867:../CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1868:../CMSIS/Include/core_cm4.h **** 
1869:../CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1870:../CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1871:../CMSIS/Include/core_cm4.h **** 
1872:../CMSIS/Include/core_cm4.h ****   return (
1873:../CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1874:../CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1875:../CMSIS/Include/core_cm4.h ****          );
1876:../CMSIS/Include/core_cm4.h **** }
1877:../CMSIS/Include/core_cm4.h **** 
1878:../CMSIS/Include/core_cm4.h **** 
1879:../CMSIS/Include/core_cm4.h **** /**
1880:../CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1881:../CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1882:../CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1883:../CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1884:../CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1885:../CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1886:../CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1887:../CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1888:../CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1889:../CMSIS/Include/core_cm4.h ****  */
1890:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1891:../CMSIS/Include/core_cm4.h **** {
1892:../CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1893:../CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1894:../CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1895:../CMSIS/Include/core_cm4.h **** 
1896:../CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1897:../CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1898:../CMSIS/Include/core_cm4.h **** 
1899:../CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1900:../CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1901:../CMSIS/Include/core_cm4.h **** }
1902:../CMSIS/Include/core_cm4.h **** 
1903:../CMSIS/Include/core_cm4.h **** 
1904:../CMSIS/Include/core_cm4.h **** /**
1905:../CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1906:../CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
ARM GAS  /tmp/ccTO0K2N.s 			page 42


1907:../CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1908:../CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1909:../CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1910:../CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1911:../CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1912:../CMSIS/Include/core_cm4.h ****  */
1913:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1914:../CMSIS/Include/core_cm4.h **** {
1915:../CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1916:../CMSIS/Include/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1917:../CMSIS/Include/core_cm4.h **** }
1918:../CMSIS/Include/core_cm4.h **** 
1919:../CMSIS/Include/core_cm4.h **** 
1920:../CMSIS/Include/core_cm4.h **** /**
1921:../CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1922:../CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1923:../CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1924:../CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1925:../CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1926:../CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1927:../CMSIS/Include/core_cm4.h ****  */
1928:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1929:../CMSIS/Include/core_cm4.h **** {
1930:../CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1931:../CMSIS/Include/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1932:../CMSIS/Include/core_cm4.h **** }
1933:../CMSIS/Include/core_cm4.h **** 
1934:../CMSIS/Include/core_cm4.h **** 
1935:../CMSIS/Include/core_cm4.h **** /**
1936:../CMSIS/Include/core_cm4.h ****   \brief   System Reset
1937:../CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1938:../CMSIS/Include/core_cm4.h ****  */
1939:../CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1940:../CMSIS/Include/core_cm4.h **** {
1941:../CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1942:../CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1943:../CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1944:../CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1945:../CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1946:../CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1947:../CMSIS/Include/core_cm4.h **** 
1948:../CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1949:../CMSIS/Include/core_cm4.h ****   {
1950:../CMSIS/Include/core_cm4.h ****     __NOP();
1951:../CMSIS/Include/core_cm4.h ****   }
1952:../CMSIS/Include/core_cm4.h **** }
1953:../CMSIS/Include/core_cm4.h **** 
1954:../CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1955:../CMSIS/Include/core_cm4.h **** 
1956:../CMSIS/Include/core_cm4.h **** /* ##########################  MPU functions  #################################### */
1957:../CMSIS/Include/core_cm4.h **** 
1958:../CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1959:../CMSIS/Include/core_cm4.h **** 
1960:../CMSIS/Include/core_cm4.h **** #include "mpu_armv7.h"
1961:../CMSIS/Include/core_cm4.h **** 
1962:../CMSIS/Include/core_cm4.h **** #endif
1963:../CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccTO0K2N.s 			page 43


1964:../CMSIS/Include/core_cm4.h **** 
1965:../CMSIS/Include/core_cm4.h **** /* ##########################  FPU functions  #################################### */
1966:../CMSIS/Include/core_cm4.h **** /**
1967:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1968:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
1969:../CMSIS/Include/core_cm4.h ****   \brief    Function that provides FPU type.
1970:../CMSIS/Include/core_cm4.h ****   @{
1971:../CMSIS/Include/core_cm4.h ****  */
1972:../CMSIS/Include/core_cm4.h **** 
1973:../CMSIS/Include/core_cm4.h **** /**
1974:../CMSIS/Include/core_cm4.h ****   \brief   get FPU type
1975:../CMSIS/Include/core_cm4.h ****   \details returns the FPU type
1976:../CMSIS/Include/core_cm4.h ****   \returns
1977:../CMSIS/Include/core_cm4.h ****    - \b  0: No FPU
1978:../CMSIS/Include/core_cm4.h ****    - \b  1: Single precision FPU
1979:../CMSIS/Include/core_cm4.h ****    - \b  2: Double + Single precision FPU
1980:../CMSIS/Include/core_cm4.h ****  */
1981:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
1982:../CMSIS/Include/core_cm4.h **** {
1983:../CMSIS/Include/core_cm4.h ****   uint32_t mvfr0;
1984:../CMSIS/Include/core_cm4.h **** 
1985:../CMSIS/Include/core_cm4.h ****   mvfr0 = FPU->MVFR0;
1986:../CMSIS/Include/core_cm4.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1987:../CMSIS/Include/core_cm4.h ****   {
1988:../CMSIS/Include/core_cm4.h ****     return 1U;           /* Single precision FPU */
1989:../CMSIS/Include/core_cm4.h ****   }
1990:../CMSIS/Include/core_cm4.h ****   else
1991:../CMSIS/Include/core_cm4.h ****   {
1992:../CMSIS/Include/core_cm4.h ****     return 0U;           /* No FPU */
1993:../CMSIS/Include/core_cm4.h ****   }
1994:../CMSIS/Include/core_cm4.h **** }
1995:../CMSIS/Include/core_cm4.h **** 
1996:../CMSIS/Include/core_cm4.h **** 
1997:../CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_FpuFunctions */
1998:../CMSIS/Include/core_cm4.h **** 
1999:../CMSIS/Include/core_cm4.h **** 
2000:../CMSIS/Include/core_cm4.h **** 
2001:../CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
2002:../CMSIS/Include/core_cm4.h **** /**
2003:../CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
2004:../CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2005:../CMSIS/Include/core_cm4.h ****   \brief    Functions that configure the System.
2006:../CMSIS/Include/core_cm4.h ****   @{
2007:../CMSIS/Include/core_cm4.h ****  */
2008:../CMSIS/Include/core_cm4.h **** 
2009:../CMSIS/Include/core_cm4.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2010:../CMSIS/Include/core_cm4.h **** 
2011:../CMSIS/Include/core_cm4.h **** /**
2012:../CMSIS/Include/core_cm4.h ****   \brief   System Tick Configuration
2013:../CMSIS/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2014:../CMSIS/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
2015:../CMSIS/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2016:../CMSIS/Include/core_cm4.h ****   \return          0  Function succeeded.
2017:../CMSIS/Include/core_cm4.h ****   \return          1  Function failed.
2018:../CMSIS/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2019:../CMSIS/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2020:../CMSIS/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
ARM GAS  /tmp/ccTO0K2N.s 			page 44


2021:../CMSIS/Include/core_cm4.h ****  */
2022:../CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 364              		.loc 2 2022 26 view .LVU76
 365              	.LBB12:
2023:../CMSIS/Include/core_cm4.h **** {
2024:../CMSIS/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 366              		.loc 2 2024 3 view .LVU77
 367              		.loc 2 2024 14 is_stmt 0 view .LVU78
 368 0016 013B     		subs	r3, r3, #1
 369              	.LVL17:
 370              		.loc 2 2024 6 view .LVU79
 371 0018 B3F1807F 		cmp	r3, #16777216
 372 001c 09D2     		bcs	.L28
2025:../CMSIS/Include/core_cm4.h ****   {
2026:../CMSIS/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
2027:../CMSIS/Include/core_cm4.h ****   }
2028:../CMSIS/Include/core_cm4.h **** 
2029:../CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 373              		.loc 2 2029 3 is_stmt 1 view .LVU80
 374              		.loc 2 2029 18 is_stmt 0 view .LVU81
 375 001e 0C4A     		ldr	r2, .L31+8
 376 0020 5360     		str	r3, [r2, #4]
2030:../CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 377              		.loc 2 2030 3 is_stmt 1 view .LVU82
 378              	.LVL18:
 379              	.LBB13:
 380              	.LBI13:
1816:../CMSIS/Include/core_cm4.h **** {
 381              		.loc 2 1816 22 view .LVU83
 382              	.LBB14:
1818:../CMSIS/Include/core_cm4.h ****   {
 383              		.loc 2 1818 3 view .LVU84
1824:../CMSIS/Include/core_cm4.h ****   }
 384              		.loc 2 1824 5 view .LVU85
1824:../CMSIS/Include/core_cm4.h ****   }
 385              		.loc 2 1824 46 is_stmt 0 view .LVU86
 386 0022 0C4B     		ldr	r3, .L31+12
 387              	.LVL19:
1824:../CMSIS/Include/core_cm4.h ****   }
 388              		.loc 2 1824 46 view .LVU87
 389 0024 F021     		movs	r1, #240
 390 0026 83F82310 		strb	r1, [r3, #35]
 391              	.LVL20:
1824:../CMSIS/Include/core_cm4.h ****   }
 392              		.loc 2 1824 46 view .LVU88
 393              	.LBE14:
 394              	.LBE13:
2031:../CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 395              		.loc 2 2031 3 is_stmt 1 view .LVU89
 396              		.loc 2 2031 18 is_stmt 0 view .LVU90
 397 002a 0023     		movs	r3, #0
 398 002c 9360     		str	r3, [r2, #8]
2032:../CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 399              		.loc 2 2032 3 is_stmt 1 view .LVU91
 400              		.loc 2 2032 18 is_stmt 0 view .LVU92
 401 002e 0723     		movs	r3, #7
 402 0030 1360     		str	r3, [r2]
ARM GAS  /tmp/ccTO0K2N.s 			page 45


2033:../CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
2034:../CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2035:../CMSIS/Include/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 403              		.loc 2 2035 3 is_stmt 1 view .LVU93
 404              	.L28:
 405              		.loc 2 2035 3 is_stmt 0 view .LVU94
 406              	.LBE12:
 407              	.LBE11:
  61:main.c        **** 
  62:main.c        ****     txUp();
 408              		.loc 1 62 5 is_stmt 1 view .LVU95
 409 0032 FFF7FEFF 		bl	txUp
 410              	.LVL21:
 411              	.L29:
  63:main.c        **** 
  64:main.c        ****     while(1) {
 412              		.loc 1 64 5 discriminator 1 view .LVU96
  65:main.c        **** 
  66:main.c        ****       	sendViaUsart(msg); //baudrate = 9600 baud
 413              		.loc 1 66 8 discriminator 1 view .LVU97
 414 0036 084B     		ldr	r3, .L31+16
 415 0038 1868     		ldr	r0, [r3]
 416 003a FFF7FEFF 		bl	sendViaUsart
 417              	.LVL22:
  67:main.c        ****         delayMs(1000);
 418              		.loc 1 67 9 discriminator 1 view .LVU98
 419 003e 4FF47A70 		mov	r0, #1000
 420 0042 FFF7FEFF 		bl	delayMs
 421              	.LVL23:
  64:main.c        **** 
 422              		.loc 1 64 10 discriminator 1 view .LVU99
 423 0046 F6E7     		b	.L29
 424              	.L32:
 425              		.align	2
 426              	.L31:
 427 0048 00000000 		.word	SystemCoreClock
 428 004c FF04EC4F 		.word	1340867839
 429 0050 10E000E0 		.word	-536813552
 430 0054 00ED00E0 		.word	-536810240
 431 0058 00000000 		.word	.LANCHOR1
 432              		.cfi_endproc
 433              	.LFE136:
 435              		.global	msg
 436              		.global	ticks
 437              		.section	.rodata
 438              		.align	2
 439              	.LC0:
 440 0000 546F6E79 		.ascii	"Tony Pridybailo\012\015\000\000"
 440      20507269 
 440      64796261 
 440      696C6F0A 
 440      0D0000
 441              		.section	.bss.ticks,"aw",%nobits
 442              		.align	2
 443              		.set	.LANCHOR0,. + 0
 446              	ticks:
 447 0000 00000000 		.space	4
ARM GAS  /tmp/ccTO0K2N.s 			page 46


 448              		.section	.data.msg,"aw"
 449              		.align	2
 450              		.set	.LANCHOR1,. + 0
 453              	msg:
 454 0000 00000000 		.word	.LC0
 455              		.text
 456              	.Letext0:
 457              		.file 3 "../CMSIS/Device/ST/STM32F4xx/Include/stm32f469xx.h"
 458              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 459              		.file 5 "../CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 460              		.file 6 "./util/util.h"
ARM GAS  /tmp/ccTO0K2N.s 			page 47


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccTO0K2N.s:18     .text.delayMs:0000000000000000 $t
     /tmp/ccTO0K2N.s:26     .text.delayMs:0000000000000000 delayMs
     /tmp/ccTO0K2N.s:55     .text.delayMs:0000000000000010 $d
     /tmp/ccTO0K2N.s:60     .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccTO0K2N.s:67     .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccTO0K2N.s:85     .text.SysTick_Handler:000000000000000c $d
     /tmp/ccTO0K2N.s:90     .text.txUp:0000000000000000 $t
     /tmp/ccTO0K2N.s:97     .text.txUp:0000000000000000 txUp
     /tmp/ccTO0K2N.s:115    .text.txUp:000000000000000c $d
     /tmp/ccTO0K2N.s:120    .text.txDown:0000000000000000 $t
     /tmp/ccTO0K2N.s:127    .text.txDown:0000000000000000 txDown
     /tmp/ccTO0K2N.s:145    .text.txDown:000000000000000c $d
     /tmp/ccTO0K2N.s:150    .text.sendViaUsart:0000000000000000 $t
     /tmp/ccTO0K2N.s:157    .text.sendViaUsart:0000000000000000 sendViaUsart
     /tmp/ccTO0K2N.s:261    .text.UART6Config:0000000000000000 $t
     /tmp/ccTO0K2N.s:268    .text.UART6Config:0000000000000000 UART6Config
     /tmp/ccTO0K2N.s:324    .text.UART6Config:0000000000000050 $d
     /tmp/ccTO0K2N.s:329    .text.main:0000000000000000 $t
     /tmp/ccTO0K2N.s:336    .text.main:0000000000000000 main
     /tmp/ccTO0K2N.s:427    .text.main:0000000000000048 $d
     /tmp/ccTO0K2N.s:453    .data.msg:0000000000000000 msg
     /tmp/ccTO0K2N.s:446    .bss.ticks:0000000000000000 ticks
     /tmp/ccTO0K2N.s:438    .rodata:0000000000000000 $d
     /tmp/ccTO0K2N.s:442    .bss.ticks:0000000000000000 $d
     /tmp/ccTO0K2N.s:449    .data.msg:0000000000000000 $d

UNDEFINED SYMBOLS
set_sysclk_max
SystemCoreClock
